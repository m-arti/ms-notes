(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    289341,       5427]
NotebookOptionsPosition[    286212,       5356]
NotebookOutlinePosition[    288805,       5418]
CellTagsIndexPosition[    288762,       5415]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Kosnita theorem\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"GeometricScene\"", ",", "\"KosnitaTheorem\""}], "]"}], 
    "\"Entity[\\\"GeometricScene\\\", \\\"KosnitaTheorem\\\"]\"", 
    "\"geometric scene\""},
   "Entity"], "@", 
  TemplateBox[{"\"provers\"", 
    RowBox[{"EntityProperty", "[", 
      RowBox[{"\"GeometricScene\"", ",", "\"Provers\""}], "]"}], 
    "\"EntityProperty[\\\"GeometricScene\\\", \\\"Provers\\\"]\""},
   "EntityProperty"]}]], "Input",
 CellChangeTimes->{{3.8196467485866547`*^9, 3.8196468009834948`*^9}, {
  3.819648392101199*^9, 3.8196483931071*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"c3f2bed5-0eaf-4bd0-bd85-5abe645d7051"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"\"Cezar Co\:0219ni\:021b\[ACup]\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Person\"", ",", "\"CezarCosnita::24f59\""}], "]"}], 
    "\"Entity[\\\"Person\\\", \\\"CezarCosnita::24f59\\\"]\"", "\"person\""},
   "Entity"], "}"}]], "Output",
 CellChangeTimes->{{3.8196467515589542`*^9, 3.8196468017919073`*^9}, 
   3.819647039184712*^9, {3.819648393455283*^9, 3.819648407991949*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"f2ff604f-c6b9-432d-a156-fd5724fd1999"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInstance", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Kosnita theorem\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"GeometricScene\"", ",", "\"KosnitaTheorem\""}], "]"}], 
      "\"Entity[\\\"GeometricScene\\\", \\\"KosnitaTheorem\\\"]\"", 
      "\"geometric scene\""},
     "Entity"], "@", 
    TemplateBox[{"\"scene\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"GeometricScene\"", ",", "\"Scene\""}], "]"}], 
      "\"EntityProperty[\\\"GeometricScene\\\", \\\"Scene\\\"]\""},
     "EntityProperty"]}], ",", 
   RowBox[{"RandomSeeding", "\[Rule]", "14"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819646212941337*^9, 3.81964623155488*^9}, {
  3.819647812172023*^9, 3.8196478294288597`*^9}, {3.819648395949666*^9, 
  3.81964840585952*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"6369dd99-c852-418b-bf65-ba76750f2fd8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {\[FormalA], \
\[FormalB], \[FormalC], \[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC], \[FormalCapitalO]}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var8030, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8031, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8032, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8033}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][\[FormalA]], 
     C["GeometricPoint"][\[FormalB]], 
     C["GeometricPoint"][\[FormalC]], 
     C["GeometricPoint"][\[FormalCapitalA]], 
     C["GeometricPoint"][\[FormalCapitalB]], 
     C["GeometricPoint"][\[FormalCapitalC]], 
     C["GeometricPoint"][\[FormalCapitalO]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5, 6, 
    7}, PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][\[FormalA]], 
     C["GeometricPoint"][\[FormalB]], 
     C["GeometricPoint"][\[FormalC]], 
     C["GeometricPoint"][\[FormalCapitalA]], 
     C["GeometricPoint"][\[FormalCapitalB]], 
     C["GeometricPoint"][\[FormalCapitalC]], 
     C["GeometricPoint"][\[FormalCapitalO]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {
     C["GeometricQuantity"][
      C["Unspecified"][
      "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
     C["GeometricQuantity"][
      C["Unspecified"][
      "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
     C["GeometricQuantity"][
      C["Unspecified"][
      "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
     C["GeometricQuantity"][
      C["Unspecified"][
      "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var8016, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8017}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var8018, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8019}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var8020, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8021}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var8022, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8023}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var8024, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8025}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var8026, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8027}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var8028, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8029}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var8030, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8031, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8032, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8033}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-4.678338728829804, -0.7469135576674143}, {1.0707836007906937`, 
    3.5004471401200337`}, {0.5114012299187872, -2.5343084509402174`}, {
    2.435660517125704, -0.50242023886181}, {-2.132328635911984, \
-3.451933636579934}, {-3.0607914426767313`, 
    2.597162054554736}, {-1.0065963299655492`, -0.1833456035770299}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{3.714741055595835, 
    4.229164967872186, 2.798453851725461, 3.4570133138939547`}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3, 4, 5, 
    6, 7}}, PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = \
{{}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{1, 2, 3, 4}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False, False, False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5, 6, 
    7}, PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{((
          PlaneGeometry`GeometrySceneDrawer`Dump`var8020 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8022)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8021 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8023)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8020 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8024)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8021 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8025)^2)^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var8016 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8024)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8017 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8025)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8016 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8026)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8017 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8027)^2)^2 + (-(
           PlaneGeometry`GeometrySceneDrawer`Dump`var8018 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8022)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8019 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8023)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8018 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8019 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027)^2)^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var8016 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8024)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8017 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8025)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8016 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8028)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8017 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8029)^2)^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var8018 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8019 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8018 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8028)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8019 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8029)^2)^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var8020 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8022)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8021 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8023)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8020 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8028)^2 - (
         PlaneGeometry`GeometrySceneDrawer`Dump`var8021 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8029)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var8022 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var8024 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8028)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var8023 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var8025 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8029)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var8022 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8028)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var8023 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8029)^2)^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var8016 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8024)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8017 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8025)^2 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8030^2)^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var8018 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8019 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027)^2 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8031^2)^2 + ((
          PlaneGeometry`GeometrySceneDrawer`Dump`var8020 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8022)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8021 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8023)^2 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8032^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var8022 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var8023 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029)^2 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8033^2)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8022 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8024) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8034)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8023 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8025) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8035)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8022 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8036)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8023 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8037)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8024 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8038)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8025 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8039)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8022 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8024) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8040)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8023 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8025) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8041)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8022 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8042)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8023 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8043)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8024 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8044)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8025 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8045)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8024 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8046)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8025 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8047)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8024 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8048)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8025 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8049)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8026 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8050)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8027 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8051)^2 + (
         1 - (-PlaneGeometry`GeometrySceneDrawer`Dump`var8022 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8052)^2 (
         1 - (-PlaneGeometry`GeometrySceneDrawer`Dump`var8023 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8053)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8026 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8054)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8027 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8055)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8022 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8028) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8056)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var8023 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8029) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var8057)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var8023 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var8025)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8024 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8026) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8022 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8024) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8025 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8027)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8058)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var8023 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var8025)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8024 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8028) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8022 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8024) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8025 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8029)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8059)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var8025 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var8027)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8026 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8028) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8024 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8026) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8027 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8029)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8060)^2 + (
        1 - ((-(PlaneGeometry`GeometrySceneDrawer`Dump`var8023 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var8027)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8022 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8028) + (
           PlaneGeometry`GeometrySceneDrawer`Dump`var8022 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8026) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var8023 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var8029)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8061)^2, {
      True, True, 
       True, (PlaneGeometry`GeometrySceneDrawer`Dump`var8016 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8022)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8017 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8023)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var8018 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8024)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8019 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8025)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var8020 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8026)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var8021 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var8027)^2 >= 0.03, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8033 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8033 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8033 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8032 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8032 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8032 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8030 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8030 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8030 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8031 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8031 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8031 >= 0.5}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var8016, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8017, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8018, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8019, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8020, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8021, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8022, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8023, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8024, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8025, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8026, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8027, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8028, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8029, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8030, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8031, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8032, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8033}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var8034, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8035, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8036, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8037, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8038, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8039, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8040, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8041, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8042, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8043, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8044, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8045, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8046, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8047, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8048, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8049, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8050, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8051, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8052, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8053, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8054, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8055, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8056, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8057, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8058, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8059, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8060, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var8061}, {{}, {}, {}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(-
        C["GeometricQuantity"][
           C["Unspecified"][
           "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalC]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]]^2 + (C["GeometricPoint"][\[FormalC]][1] - C[
         "GeometricPoint"][\[FormalCapitalA]][1])^2 + (
         C["GeometricPoint"][\[FormalC]][2] - C[
         "GeometricPoint"][\[FormalCapitalA]][2])^2)^2 + (-
        C["GeometricQuantity"][
           C["Unspecified"][
           "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalA]], {C[\"GeometricPoint\"][\[FormalCapitalB]], \
C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]]^2 + (C["GeometricPoint"][\[FormalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][1])^2 + (
         C["GeometricPoint"][\[FormalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][2])^2)^2 + ((
         C["GeometricPoint"][\[FormalC]][1] - C[
         "GeometricPoint"][\[FormalCapitalA]][1])^2 + (
         C["GeometricPoint"][\[FormalC]][2] - C[
         "GeometricPoint"][\[FormalCapitalA]][2])^2 - (
        C["GeometricPoint"][\[FormalC]][1] - C[
        "GeometricPoint"][\[FormalCapitalB]][1])^2 - (
        C["GeometricPoint"][\[FormalC]][2] - C[
        "GeometricPoint"][\[FormalCapitalB]][2])^2)^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7988] (
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7989] (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7994] (
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7995] (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][2]))^2 + ((
         C["GeometricPoint"][\[FormalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][1])^2 + (
         C["GeometricPoint"][\[FormalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][2])^2 - (
        C["GeometricPoint"][\[FormalA]][1] - C[
        "GeometricPoint"][\[FormalCapitalC]][1])^2 - (
        C["GeometricPoint"][\[FormalA]][2] - C[
        "GeometricPoint"][\[FormalCapitalC]][2])^2)^2 + (-
        C["GeometricQuantity"][
           C["Unspecified"][
           "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalB]], {C[\"GeometricPoint\"][\[FormalCapitalC]], \
C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]]^2 + (C["GeometricPoint"][\[FormalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1])^2 + (
         C["GeometricPoint"][\[FormalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][
         2])^2)^2 + (-(C["GeometricPoint"][\[FormalB]][1] - C[
          "GeometricPoint"][\[FormalCapitalA]][1])^2 - (
        C["GeometricPoint"][\[FormalB]][2] - C[
        "GeometricPoint"][\[FormalCapitalA]][
        2])^2 + (C["GeometricPoint"][\[FormalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1])^2 + (
         C["GeometricPoint"][\[FormalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][2])^2)^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7990] (
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7991] (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7992] (
         C["GeometricPoint"][\[FormalCapitalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7993] (
         C["GeometricPoint"][\[FormalCapitalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8000] (
         C["GeometricPoint"][\[FormalCapitalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8001] (
         C["GeometricPoint"][\[FormalCapitalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][2]))^2 + (1 - 
        "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var8006] (-
          C["GeometricPoint"][\[FormalCapitalA]][1] + 
         C["GeometricPoint"][\[FormalCapitalC]][1]))^2 (1 - 
        "notVar"[
         PlaneGeometry`GeometrySceneDrawer`Dump`var8007] (-
          C["GeometricPoint"][\[FormalCapitalA]][2] + 
         C["GeometricPoint"][\[FormalCapitalC]][2]))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var8012] ((-(-
            C["GeometricPoint"][\[FormalCapitalA]][2] + 
           C["GeometricPoint"][\[FormalCapitalB]][2])) (-
           C["GeometricPoint"][\[FormalCapitalB]][1] + 
          C["GeometricPoint"][\[FormalCapitalC]][1]) + (-
           C["GeometricPoint"][\[FormalCapitalA]][1] + 
          C["GeometricPoint"][\[FormalCapitalB]][1]) (-
           C["GeometricPoint"][\[FormalCapitalB]][2] + 
          C["GeometricPoint"][\[FormalCapitalC]][2])))^2 + ((
         C["GeometricPoint"][\[FormalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][1])^2 + (
         C["GeometricPoint"][\[FormalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][2])^2 - (
        C["GeometricPoint"][\[FormalA]][1] - C[
        "GeometricPoint"][\[FormalCapitalO]][1])^2 - (
        C["GeometricPoint"][\[FormalA]][2] - C[
        "GeometricPoint"][\[FormalCapitalO]][
        2])^2)^2 + ((C["GeometricPoint"][\[FormalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1])^2 + (
         C["GeometricPoint"][\[FormalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][2])^2 - (
        C["GeometricPoint"][\[FormalB]][1] - C[
        "GeometricPoint"][\[FormalCapitalO]][1])^2 - (
        C["GeometricPoint"][\[FormalB]][2] - C[
        "GeometricPoint"][\[FormalCapitalO]][
        2])^2)^2 + ((C["GeometricPoint"][\[FormalC]][1] - C[
         "GeometricPoint"][\[FormalCapitalA]][1])^2 + (
         C["GeometricPoint"][\[FormalC]][2] - C[
         "GeometricPoint"][\[FormalCapitalA]][2])^2 - (
        C["GeometricPoint"][\[FormalC]][1] - C[
        "GeometricPoint"][\[FormalCapitalO]][1])^2 - (
        C["GeometricPoint"][\[FormalC]][2] - C[
        "GeometricPoint"][\[FormalCapitalO]][2])^2)^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7996] (
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalO]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7997] (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalO]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8010] (
         C["GeometricPoint"][\[FormalCapitalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalO]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8011] (
         C["GeometricPoint"][\[FormalCapitalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalO]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7998] (
         C["GeometricPoint"][\[FormalCapitalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalO]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7999] (
         C["GeometricPoint"][\[FormalCapitalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalO]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8002] (
         C["GeometricPoint"][\[FormalCapitalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalO]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8003] (
         C["GeometricPoint"][\[FormalCapitalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalO]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8004] (
         C["GeometricPoint"][\[FormalCapitalC]][1] - C[
         "GeometricPoint"][\[FormalCapitalO]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8005] (
         C["GeometricPoint"][\[FormalCapitalC]][2] - C[
         "GeometricPoint"][\[FormalCapitalO]][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8008] (
         C["GeometricPoint"][\[FormalCapitalC]][1] - C[
         "GeometricPoint"][\[FormalCapitalO]][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8009] (
         C["GeometricPoint"][\[FormalCapitalC]][2] - C[
         "GeometricPoint"][\[FormalCapitalO]][2]))^2 + (-
        C["GeometricQuantity"][
           C["Unspecified"][
           "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]]^2 + (-C["GeometricPoint"][\[FormalCapitalA]][1] + 
         C["GeometricPoint"][\[FormalCapitalO]][1])^2 + (-
          C["GeometricPoint"][\[FormalCapitalA]][2] + 
         C["GeometricPoint"][\[FormalCapitalO]][2])^2)^2 + ((-
          C["GeometricPoint"][\[FormalCapitalA]][1] + 
         C["GeometricPoint"][\[FormalCapitalO]][1])^2 - (-
         C["GeometricPoint"][\[FormalCapitalB]][1] + 
        C["GeometricPoint"][\[FormalCapitalO]][
         1])^2 + (-C["GeometricPoint"][\[FormalCapitalA]][2] + 
         C["GeometricPoint"][\[FormalCapitalO]][2])^2 - (-
         C["GeometricPoint"][\[FormalCapitalB]][2] + 
        C["GeometricPoint"][\[FormalCapitalO]][
         2])^2)^2 + ((-C["GeometricPoint"][\[FormalCapitalA]][1] + 
         C["GeometricPoint"][\[FormalCapitalO]][1])^2 - (-
         C["GeometricPoint"][\[FormalCapitalC]][1] + 
        C["GeometricPoint"][\[FormalCapitalO]][
         1])^2 + (-C["GeometricPoint"][\[FormalCapitalA]][2] + 
         C["GeometricPoint"][\[FormalCapitalO]][2])^2 - (-
         C["GeometricPoint"][\[FormalCapitalC]][2] + 
        C["GeometricPoint"][\[FormalCapitalO]][2])^2)^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var8015] ((-(
           C["GeometricPoint"][\[FormalCapitalA]][2] - C[
           "GeometricPoint"][\[FormalCapitalC]][2])) (-
           C["GeometricPoint"][\[FormalCapitalA]][1] + 
          C["GeometricPoint"][\[FormalCapitalO]][1]) + (
          C["GeometricPoint"][\[FormalCapitalA]][1] - C[
          "GeometricPoint"][\[FormalCapitalC]][
          1]) (-C["GeometricPoint"][\[FormalCapitalA]][2] + 
          C["GeometricPoint"][\[FormalCapitalO]][2])))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var8013] ((-(-
            C["GeometricPoint"][\[FormalCapitalA]][2] + 
           C["GeometricPoint"][\[FormalCapitalB]][2])) (-
           C["GeometricPoint"][\[FormalCapitalB]][1] + 
          C["GeometricPoint"][\[FormalCapitalO]][1]) + (-
           C["GeometricPoint"][\[FormalCapitalA]][1] + 
          C["GeometricPoint"][\[FormalCapitalB]][1]) (-
           C["GeometricPoint"][\[FormalCapitalB]][2] + 
          C["GeometricPoint"][\[FormalCapitalO]][2])))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var8014] ((-(-
            C["GeometricPoint"][\[FormalCapitalB]][2] + 
           C["GeometricPoint"][\[FormalCapitalC]][2])) (-
           C["GeometricPoint"][\[FormalCapitalC]][1] + 
          C["GeometricPoint"][\[FormalCapitalO]][1]) + (-
           C["GeometricPoint"][\[FormalCapitalB]][1] + 
          C["GeometricPoint"][\[FormalCapitalC]][1]) (-
           C["GeometricPoint"][\[FormalCapitalC]][2] + 
          C["GeometricPoint"][\[FormalCapitalO]][2])))^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
     True, True, 
      True, (C["GeometricPoint"][\[FormalA]][1] - C[
         "GeometricPoint"][\[FormalCapitalA]][1])^2 + (
         C["GeometricPoint"][\[FormalA]][2] - C[
         "GeometricPoint"][\[FormalCapitalA]][2])^2 >= 
      0.03, (C["GeometricPoint"][\[FormalB]][1] - C[
         "GeometricPoint"][\[FormalCapitalB]][1])^2 + (
         C["GeometricPoint"][\[FormalB]][2] - C[
         "GeometricPoint"][\[FormalCapitalB]][2])^2 >= 
      0.03, (C["GeometricPoint"][\[FormalC]][1] - C[
         "GeometricPoint"][\[FormalCapitalC]][1])^2 + (
         C["GeometricPoint"][\[FormalC]][2] - C[
         "GeometricPoint"][\[FormalCapitalC]][2])^2 >= 0.03, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] >= 0.5, C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] >= 0.5, C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] >= 0.5, C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] >= 0.5}}, 
    PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][\[FormalA]][1], 
       C["GeometricPoint"][\[FormalA]][2], 
       C["GeometricPoint"][\[FormalB]][1], 
       C["GeometricPoint"][\[FormalB]][2], 
       C["GeometricPoint"][\[FormalC]][1], 
       C["GeometricPoint"][\[FormalC]][2], 
       C["GeometricPoint"][\[FormalCapitalA]][1], 
       C["GeometricPoint"][\[FormalCapitalA]][2], 
       C["GeometricPoint"][\[FormalCapitalB]][1], 
       C["GeometricPoint"][\[FormalCapitalB]][2], 
       C["GeometricPoint"][\[FormalCapitalC]][1], 
       C["GeometricPoint"][\[FormalCapitalC]][2], 
       C["GeometricPoint"][\[FormalCapitalO]][1], 
       C["GeometricPoint"][\[FormalCapitalO]][2], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]]}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7988], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7989], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7990], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7991], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7992], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7993], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7994], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7995], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7996], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7997], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7998], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7999], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8000], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8001], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8002], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8003], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8004], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8005], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8006], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8007], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8008], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8009], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8010], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8011], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8012], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8013], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8014], 
       "notVar"[
       PlaneGeometry`GeometrySceneDrawer`Dump`var8015]}, {{}, {}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 1, {{{-4.678338728829804, -0.7469135576674143}, {
     1.0707836007906937`, 3.5004471401200337`}, {
     0.5114012299187872, -2.5343084509402174`}, {
     2.435660517125704, -0.50242023886181}, {-2.132328635911984, \
-3.451933636579934}, {-3.0607914426767313`, 
     2.597162054554736}, {-1.0065963299655492`, -0.1833456035770299}}}, {{
     3.714741055595835, 4.229164967872186, 2.798453851725461, 
     3.4570133138939547`}}, {{{-4.678338728829804, -0.7469135576674143}, {
     1.0707836007906937`, 3.5004471401200337`}, {
     0.5114012299187872, -2.5343084509402174`}, {
     2.435660517125704, -0.50242023886181}, {-2.132328635911984, \
-3.451933636579934}, {-3.0607914426767313`, 
     2.597162054554736}, {-1.0065963299655492`, -0.1833456035770299}}}, {{{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][\[FormalCapitalA]], 
            C["GeometricPoint"][\[FormalCapitalB]], 
            C["GeometricPoint"][\[FormalCapitalC]]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][\[FormalCapitalB]], 
            C["GeometricPoint"][\[FormalCapitalC]], 
            C["GeometricPoint"][\[FormalCapitalO]]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][\[FormalCapitalC]], 
            C["GeometricPoint"][\[FormalCapitalA]], 
            C["GeometricPoint"][\[FormalCapitalO]]}]}, {
          Opacity[0.2], 
          Polygon[{
            C["GeometricPoint"][\[FormalCapitalA]], 
            C["GeometricPoint"][\[FormalCapitalB]], 
            C["GeometricPoint"][\[FormalCapitalO]]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Circle[
           C["GeometricPoint"][\[FormalCapitalO]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]]]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Circle[
           C["GeometricPoint"][\[FormalA]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalA]], {C[\"GeometricPoint\"][\[FormalCapitalB]], \
C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]]]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Circle[
           C["GeometricPoint"][\[FormalB]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalB]], {C[\"GeometricPoint\"][\[FormalCapitalC]], \
C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]]]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Circle[
           C["GeometricPoint"][\[FormalC]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "ref", 
             "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]]]}, {
          RGBColor[1, 0.5, 0.5], 
          Line[{
            C["GeometricPoint"][\[FormalCapitalA]], 
            C["GeometricPoint"][\[FormalA]]}]}, {
          RGBColor[1, 0.5, 0.5], 
          Line[{
            C["GeometricPoint"][\[FormalCapitalB]], 
            C["GeometricPoint"][\[FormalB]]}]}, {
          RGBColor[1, 0.5, 0.5], 
          Line[{
            C["GeometricPoint"][\[FormalCapitalC]], 
            C["GeometricPoint"][\[FormalC]]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][\[FormalCapitalA]], 
            C["GeometricPoint"][\[FormalA]]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][\[FormalCapitalB]], 
            C["GeometricPoint"][\[FormalB]]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][\[FormalCapitalC]], 
            C["GeometricPoint"][\[FormalC]]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalCapitalA]]]}, 
          Inset[
           Style[" \[FormalCapitalA] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalCapitalA]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalCapitalA]]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalA]]]}, 
          Inset[
           Style[" \[FormalA] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalA]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalA]]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalCapitalB]]]}, 
          Inset[
           Style[" \[FormalCapitalB] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalCapitalB]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalCapitalB]]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalB]]]}, 
          Inset[
           Style[" \[FormalB] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalB]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalB]]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalCapitalC]]]}, 
          Inset[
           Style[" \[FormalCapitalC] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalCapitalC]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalCapitalC]]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalC]]]}, 
          Inset[
           Style[" \[FormalC] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalC]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalC]]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][\[FormalCapitalO]]]}, 
          Inset[
           Style[" \[FormalCapitalO] ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][\[FormalCapitalO]]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][\[FormalCapitalO]]]}}}, {}}}}, {{{
       C["GeometricPoint"][\[FormalA]] -> {-4.678338728829804, \
-0.7469135576674143}, 
        C["GeometricPoint"][\[FormalB]] -> {1.0707836007906937`, 
         3.5004471401200337`}, 
        C["GeometricPoint"][\[FormalC]] -> {
         0.5114012299187872, -2.5343084509402174`}, 
        C["GeometricPoint"][\[FormalCapitalA]] -> {
         2.435660517125704, -0.50242023886181}, 
        C["GeometricPoint"][\[FormalCapitalB]] -> {-2.132328635911984, \
-3.451933636579934}, 
        C["GeometricPoint"][\[FormalCapitalC]] -> {-3.0607914426767313`, 
         2.597162054554736}, 
        C["GeometricPoint"][\[FormalCapitalO]] -> {-1.0065963299655492`, \
-0.1833456035770299}}, {C["GeometricQuantity"][
          C["Unspecified"][
          "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalA]], {C[\"GeometricPoint\"][\[FormalCapitalB]], \
C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 3.714741055595835, C["GeometricQuantity"][
          C["Unspecified"][
          "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalB]], {C[\"GeometricPoint\"][\[FormalCapitalC]], \
C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 4.229164967872186, C["GeometricQuantity"][
          C["Unspecified"][
          "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalC]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 2.798453851725461, C["GeometricQuantity"][
          C["Unspecified"][
          "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] -> 3.4570133138939547`}}}, {{{
       False, False, False, False, False, False, False}}}, {{{}}}, False, 
     True, {}, {}, {{{-4.678338728829804, -0.7469135576674143}, {
     1.0707836007906937`, 3.5004471401200337`}, {
     0.5114012299187872, -2.5343084509402174`}, {
     2.435660517125704, -0.50242023886181}, {-2.132328635911984, \
-3.451933636579934}, {-3.0607914426767313`, 
     2.597162054554736}, {-1.0065963299655492`, -0.1833456035770299}}}, \
{{{-10.062382619734493`, 6.969251403971731}, {-7.317392109189841, 
     9.714241914516384}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-10.062382619734493`, 6.969251403971731}, {-7.317392109189841, 
    9.714241914516384}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {
     PlaneGeometry`AssertionWrapper[
      GeometricAssertion[{
        Line[{\[FormalCapitalA], \[FormalA]}], 
        Line[{\[FormalCapitalB], \[FormalB]}], 
        Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-4.678338728829804, -0.7469135576674143}, {1.0707836007906937`, 
    3.5004471401200337`}, {0.5114012299187872, -2.5343084509402174`}, {
    2.435660517125704, -0.50242023886181}, {-2.132328635911984, \
-3.451933636579934}, {-3.0607914426767313`, 
    2.597162054554736}, {-1.0065963299655492`, -0.1833456035770299}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-4.678338728829804, -0.7469135576674143}, {1.0707836007906937`, 
    3.5004471401200337`}, {0.5114012299187872, -2.5343084509402174`}, {
    2.435660517125704, -0.50242023886181}, {-2.132328635911984, \
-3.451933636579934}, {-3.0607914426767313`, 
    2.597162054554736}, {-1.0065963299655492`, -0.1833456035770299}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][\[FormalA]], 
      C["GeometricPoint"][\[FormalB]], 
      C["GeometricPoint"][\[FormalC]], 
      C["GeometricPoint"][\[FormalCapitalA]], 
      C["GeometricPoint"][\[FormalCapitalB]], 
      C["GeometricPoint"][\[FormalCapitalC]], 
      C["GeometricPoint"][\[FormalCapitalO]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{
      C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
      C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
      C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
      C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]]}}, PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][\[FormalCapitalA]], 
           C["GeometricPoint"][\[FormalCapitalB]], 
           C["GeometricPoint"][\[FormalCapitalC]]}]}, {
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][\[FormalCapitalB]], 
           C["GeometricPoint"][\[FormalCapitalC]], 
           C["GeometricPoint"][\[FormalCapitalO]]}]}, {
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][\[FormalCapitalC]], 
           C["GeometricPoint"][\[FormalCapitalA]], 
           C["GeometricPoint"][\[FormalCapitalO]]}]}, {
         Opacity[0.2], 
         Polygon[{
           C["GeometricPoint"][\[FormalCapitalA]], 
           C["GeometricPoint"][\[FormalCapitalB]], 
           C["GeometricPoint"][\[FormalCapitalO]]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Circle[
          C["GeometricPoint"][\[FormalCapitalO]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]]]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Circle[
          C["GeometricPoint"][\[FormalA]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalA]], {C[\"GeometricPoint\"][\[FormalCapitalB]], \
C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]]]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Circle[
          C["GeometricPoint"][\[FormalB]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalB]], {C[\"GeometricPoint\"][\[FormalCapitalC]], \
C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]]]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Circle[
          C["GeometricPoint"][\[FormalC]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "ref", "{\"circumcenter radius\", \
C[\"GeometricPoint\"][\[FormalC]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]]]}, {
         RGBColor[1, 0.5, 0.5], 
         Line[{
           C["GeometricPoint"][\[FormalCapitalA]], 
           C["GeometricPoint"][\[FormalA]]}]}, {
         RGBColor[1, 0.5, 0.5], 
         Line[{
           C["GeometricPoint"][\[FormalCapitalB]], 
           C["GeometricPoint"][\[FormalB]]}]}, {
         RGBColor[1, 0.5, 0.5], 
         Line[{
           C["GeometricPoint"][\[FormalCapitalC]], 
           C["GeometricPoint"][\[FormalC]]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][\[FormalCapitalA]], 
           C["GeometricPoint"][\[FormalA]]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][\[FormalCapitalB]], 
           C["GeometricPoint"][\[FormalB]]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][\[FormalCapitalC]], 
           C["GeometricPoint"][\[FormalC]]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalCapitalA]]]}, 
         Inset[
          Style[" \[FormalCapitalA] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalCapitalA]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalCapitalA]]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalA]]]}, 
         Inset[
          Style[" \[FormalA] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalA]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalA]]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalCapitalB]]]}, 
         Inset[
          Style[" \[FormalCapitalB] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalCapitalB]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalCapitalB]]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalB]]]}, 
         Inset[
          Style[" \[FormalB] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalB]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalB]]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalCapitalC]]]}, 
         Inset[
          Style[" \[FormalCapitalC] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalCapitalC]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalCapitalC]]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalC]]]}, 
         Inset[
          Style[" \[FormalC] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalC]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalC]]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][\[FormalCapitalO]]]}, 
         Inset[
          Style[" \[FormalCapitalO] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][\[FormalCapitalO]]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][\[FormalCapitalO]]]}}}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][\[FormalA]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8016}, {
      C["GeometricPoint"][\[FormalA]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8017}, {
      C["GeometricPoint"][\[FormalB]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8018}, {
      C["GeometricPoint"][\[FormalB]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8019}, {
      C["GeometricPoint"][\[FormalC]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8020}, {
      C["GeometricPoint"][\[FormalC]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8021}, {
      C["GeometricPoint"][\[FormalCapitalA]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8022}, {
      C["GeometricPoint"][\[FormalCapitalA]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8023}, {
      C["GeometricPoint"][\[FormalCapitalB]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8024}, {
      C["GeometricPoint"][\[FormalCapitalB]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8025}, {
      C["GeometricPoint"][\[FormalCapitalC]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8026}, {
      C["GeometricPoint"][\[FormalCapitalC]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8027}, {
      C["GeometricPoint"][\[FormalCapitalO]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8028}, {
      C["GeometricPoint"][\[FormalCapitalO]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8029}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8030}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8031}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8032}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]], PlaneGeometry`GeometrySceneDrawer`Dump`var8033}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7988], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8034}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7989], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8035}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7990], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8036}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7991], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8037}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7992], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8038}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7993], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8039}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7994], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8040}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7995], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8041}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7996], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8042}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7997], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8043}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7998], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8044}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var7999], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8045}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8000], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8046}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8001], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8047}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8002], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8048}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8003], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8049}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8004], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8050}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8005], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8051}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8006], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8052}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8007], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8053}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8008], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8054}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8009], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8055}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8010], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8056}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8011], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8057}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8012], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8058}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8013], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8059}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8014], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8060}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var8015], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8061}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var8016, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8017}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var8018, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8019}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var8020, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8021}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var8022, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8023}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var8024, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8025}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var8026, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8027}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var8028, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8029}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var8030, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8031, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8032, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var8033}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var8016, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8017} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var8018, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8019} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var8020, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8021} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var8022, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8023} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var8024, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8025} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var8026, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8027} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var8028, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8029} -> 1], 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = 
    Association[{
      PlaneGeometry`GeometrySceneDrawer`Dump`var8016, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8017} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var8018, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8019} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var8020, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8021} -> 
     3, {PlaneGeometry`GeometrySceneDrawer`Dump`var8022, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8023} -> 
     4, {PlaneGeometry`GeometrySceneDrawer`Dump`var8024, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8025} -> 
     5, {PlaneGeometry`GeometrySceneDrawer`Dump`var8026, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8027} -> 
     6, {PlaneGeometry`GeometrySceneDrawer`Dump`var8028, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var8029} -> 7], 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = Association[
    PlaneGeometry`GeometrySceneDrawer`Dump`var8030 -> 1, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8031 -> 2, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8032 -> 3, 
     PlaneGeometry`GeometrySceneDrawer`Dump`var8033 -> 4], 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][\[FormalA]] -> {-4.678338728829804, \
-0.7469135576674143}, 
       C["GeometricPoint"][\[FormalB]] -> {1.0707836007906937`, 
        3.5004471401200337`}, 
       C["GeometricPoint"][\[FormalC]] -> {
        0.5114012299187872, -2.5343084509402174`}, 
       C["GeometricPoint"][\[FormalCapitalA]] -> {
        2.435660517125704, -0.50242023886181}, 
       C["GeometricPoint"][\[FormalCapitalB]] -> {-2.132328635911984, \
-3.451933636579934}, 
       C["GeometricPoint"][\[FormalCapitalC]] -> {-3.0607914426767313`, 
        2.597162054554736}, 
       C["GeometricPoint"][\[FormalCapitalO]] -> {-1.0065963299655492`, \
-0.1833456035770299}}, {C["GeometricQuantity"][
         C["Unspecified"][
         "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] -> 
       3.714741055595835, C["GeometricQuantity"][
         C["Unspecified"][
         "ref", 
          "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] -> 
       4.229164967872186, C["GeometricQuantity"][
         C["Unspecified"][
         "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] -> 
       2.798453851725461, C["GeometricQuantity"][
         C["Unspecified"][
         "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] -> 3.4570133138939547`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
    PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{\[FormalCapitalO] == TriangleCenter[
                  
                  Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
                TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
                TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
                TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
                Style[{
                  Line[{\[FormalCapitalA], \[FormalA]}], 
                  Line[{\[FormalCapitalB], \[FormalB]}], 
                  Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}], Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{\[FormalCapitalO] == TriangleCenter[
               
               Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
             TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
             TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
             TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
             Style[{
               Line[{\[FormalCapitalA], \[FormalA]}], 
               Line[{\[FormalCapitalB], \[FormalB]}], 
               Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}]], 
          If[
           And[
           True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             Hold[{
               GeometricAssertion[{
                 Line[{\[FormalCapitalA], \[FormalA]}], 
                 Line[{\[FormalCapitalB], \[FormalB]}], 
                 Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}], {1},
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{\[FormalCapitalO] == TriangleCenter[
              
              Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
            TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
            TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
            TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
            Style[{
              Line[{\[FormalCapitalA], \[FormalA]}], 
              Line[{\[FormalCapitalB], \[FormalB]}], 
              Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}], 
          Hold[{
            GeometricAssertion[{
              Line[{\[FormalCapitalA], \[FormalA]}], 
              Line[{\[FormalCapitalB], \[FormalB]}], 
              Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}]], 
         "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{\[FormalCapitalO] == TriangleCenter[
              
              Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
            TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
            TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
            
            TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
            Style[{
              Line[{\[FormalCapitalA], \[FormalA]}], 
              Line[{\[FormalCapitalB], \[FormalB]}], 
              Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}], 
          Hold[{
            GeometricAssertion[{
              Line[{\[FormalCapitalA], \[FormalA]}], 
              Line[{\[FormalCapitalB], \[FormalB]}], 
              Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}]][
         "AlgebraicFormulation"], "Input"]], Delimiter, "Paste Parameters" :> 
      CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{\[FormalCapitalO] == TriangleCenter[
              
              Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
            TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
            TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
            TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
            Style[{
              Line[{\[FormalCapitalA], \[FormalA]}], 
              Line[{\[FormalCapitalB], \[FormalB]}], 
              Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}]], "Input"]], 
      "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{
            GeometricAssertion[{
              Line[{\[FormalCapitalA], \[FormalA]}], 
              Line[{\[FormalCapitalB], \[FormalB]}], 
              Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}]], 
         "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{\[FormalA] -> {-4.678338728829804, -0.7469135576674143}, \
\[FormalB] -> {1.0707836007906937`, 3.5004471401200337`}, \[FormalC] -> {
                0.5114012299187872, -2.5343084509402174`}, \[FormalCapitalA] -> \
{2.435660517125704, -0.50242023886181}, \[FormalCapitalB] -> \
{-2.132328635911984, -3.451933636579934}, \[FormalCapitalC] -> \
{-3.0607914426767313`, 
                2.597162054554736}, \[FormalCapitalO] -> \
{-1.0065963299655492`, -0.1833456035770299}}, {C["GeometricQuantity"][
                 C["Unspecified"][
                 "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalA]], {C[\"GeometricPoint\"][\[FormalCapitalB]], \
C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 3.714741055595835, C["GeometricQuantity"][
                 C["Unspecified"][
                 "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalB]], {C[\"GeometricPoint\"][\[FormalCapitalC]], \
C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 4.229164967872186, C["GeometricQuantity"][
                 C["Unspecified"][
                 "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalC]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 2.798453851725461, C["GeometricQuantity"][
                 C["Unspecified"][
                 "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] -> 3.4570133138939547`}}}, 
            
            First[{{{\[FormalA] -> {-4.678338728829804, -0.7469135576674143}, \
\[FormalB] -> {1.0707836007906937`, 3.5004471401200337`}, \[FormalC] -> {
                 0.5114012299187872, -2.5343084509402174`}, \[FormalCapitalA] -> \
{2.435660517125704, -0.50242023886181}, \[FormalCapitalB] -> \
{-2.132328635911984, -3.451933636579934}, \[FormalCapitalC] -> \
{-3.0607914426767313`, 
                 2.597162054554736}, \[FormalCapitalO] -> \
{-1.0065963299655492`, -0.1833456035770299}}, {C["GeometricQuantity"][
                  C["Unspecified"][
                  "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalA]], {C[\"GeometricPoint\"][\[FormalCapitalB]], \
C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 3.714741055595835, C["GeometricQuantity"][
                  C["Unspecified"][
                  "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalB]], {C[\"GeometricPoint\"][\[FormalCapitalC]], \
C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 4.229164967872186, C["GeometricQuantity"][
                  C["Unspecified"][
                  "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalC]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 2.798453851725461, C["GeometricQuantity"][
                  C["Unspecified"][
                  "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] -> 3.4570133138939547`}}}]], 
           Hold[{\[FormalCapitalO] == TriangleCenter[
               
               Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
             TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
             TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
             TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
             Style[{
               Line[{\[FormalCapitalA], \[FormalA]}], 
               Line[{\[FormalCapitalB], \[FormalB]}], 
               Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}]]], "Input"]]}, 
     Appearance -> None, MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{\[FormalCapitalO] == TriangleCenter[
                    
                    Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
                    TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
                    TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
                    TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
                    Style[{
                    Line[{\[FormalCapitalA], \[FormalA]}], 
                    Line[{\[FormalCapitalB], \[FormalB]}], 
                    Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}], Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{\[FormalCapitalO] == TriangleCenter[
                   
                   Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
                 TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
                 TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
                 TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
                 Style[{
                   Line[{\[FormalCapitalA], \[FormalA]}], 
                   Line[{\[FormalCapitalB], \[FormalB]}], 
                   Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}]], 
              If[
               And[
               True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 Hold[{
                   GeometricAssertion[{
                    Line[{\[FormalCapitalA], \[FormalA]}], 
                    Line[{\[FormalCapitalB], \[FormalB]}], 
                    Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}], {
                 1}, PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{\[FormalCapitalO] == TriangleCenter[
                  
                  Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
                TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
                TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
                TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
                Style[{
                  Line[{\[FormalCapitalA], \[FormalA]}], 
                  Line[{\[FormalCapitalB], \[FormalB]}], 
                  Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}], 
              Hold[{
                GeometricAssertion[{
                  Line[{\[FormalCapitalA], \[FormalA]}], 
                  Line[{\[FormalCapitalB], \[FormalB]}], 
                  Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}]], 
             "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{\[FormalCapitalO] == TriangleCenter[
                  
                  Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
                TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
                TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
                TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
                Style[{
                  Line[{\[FormalCapitalA], \[FormalA]}], 
                  Line[{\[FormalCapitalB], \[FormalB]}], 
                  Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}], 
              Hold[{
                GeometricAssertion[{
                  Line[{\[FormalCapitalA], \[FormalA]}], 
                  Line[{\[FormalCapitalB], \[FormalB]}], 
                  Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}]][
             "AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{\[FormalCapitalO] == TriangleCenter[
                  
                  Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
                TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
                TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
                TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
                Style[{
                  Line[{\[FormalCapitalA], \[FormalA]}], 
                  Line[{\[FormalCapitalB], \[FormalB]}], 
                  Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}]], "Input"]],
           "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{
                GeometricAssertion[{
                  Line[{\[FormalCapitalA], \[FormalA]}], 
                  Line[{\[FormalCapitalB], \[FormalB]}], 
                  Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}]], 
             "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{\[FormalA] -> {-4.678338728829804, \
-0.7469135576674143}, \[FormalB] -> {1.0707836007906937`, 
                    3.5004471401200337`}, \[FormalC] -> {
                    0.5114012299187872, -2.5343084509402174`}, \
\[FormalCapitalA] -> {
                    2.435660517125704, -0.50242023886181}, \[FormalCapitalB] -> \
{-2.132328635911984, -3.451933636579934}, \[FormalCapitalC] -> \
{-3.0607914426767313`, 
                    2.597162054554736}, \[FormalCapitalO] -> \
{-1.0065963299655492`, -0.1833456035770299}}, {C["GeometricQuantity"][
                    C["Unspecified"][
                    "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalA]], {C[\"GeometricPoint\"][\[FormalCapitalB]], \
C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 3.714741055595835, C["GeometricQuantity"][
                    C["Unspecified"][
                    "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalB]], {C[\"GeometricPoint\"][\[FormalCapitalC]], \
C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 4.229164967872186, C["GeometricQuantity"][
                    C["Unspecified"][
                    "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalC]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 2.798453851725461, C["GeometricQuantity"][
                    C["Unspecified"][
                    "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] -> 3.4570133138939547`}}}, 
                
                First[{{{\[FormalA] -> {-4.678338728829804, \
-0.7469135576674143}, \[FormalB] -> {1.0707836007906937`, 
                    3.5004471401200337`}, \[FormalC] -> {
                    0.5114012299187872, -2.5343084509402174`}, \
\[FormalCapitalA] -> {
                    2.435660517125704, -0.50242023886181}, \[FormalCapitalB] -> \
{-2.132328635911984, -3.451933636579934}, \[FormalCapitalC] -> \
{-3.0607914426767313`, 
                    2.597162054554736}, \[FormalCapitalO] -> \
{-1.0065963299655492`, -0.1833456035770299}}, {C["GeometricQuantity"][
                    C["Unspecified"][
                    "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalA]], {C[\"GeometricPoint\"][\[FormalCapitalB]], \
C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 3.714741055595835, C["GeometricQuantity"][
                    C["Unspecified"][
                    "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalB]], {C[\"GeometricPoint\"][\[FormalCapitalC]], \
C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 4.229164967872186, C["GeometricQuantity"][
                    C["Unspecified"][
                    "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalC]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalO]]}}"]] -> 2.798453851725461, C["GeometricQuantity"][
                    C["Unspecified"][
                    "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] -> 3.4570133138939547`}}}]], 
               Hold[{\[FormalCapitalO] == TriangleCenter[
                   
                   Triangle[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalC]}], "Circumcenter"], \[FormalA] == 
                 TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalB] == 
                 TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \
\[FormalCapitalO]}, "Circumcenter"], \[FormalC] == 
                 TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \
\[FormalCapitalO]}, "Circumcenter"], 
                 Style[{
                   Line[{\[FormalCapitalA], \[FormalA]}], 
                   Line[{\[FormalCapitalB], \[FormalB]}], 
                   Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}]]], 
             "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}, {
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             Rectangle[{-5, -1}, {5, 1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], Larger, 
               GrayLevel[0]], {0, 0}]}}, ImageSize -> {100, 20}, AspectRatio -> 
           Full, PlotRangePadding -> None], 
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 5], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
             20}, AspectRatio -> Full, PlotRangePadding -> None]}}, 
        Spacings -> {0, 0}]}, {
       MouseAppearance[
        ActionMenu[
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
            Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 1.5]], {
         PlaneGeometry`AssertionWrapper[
            GeometricAssertion[{
              Line[{\[FormalCapitalA], \[FormalA]}], 
              Line[{\[FormalCapitalB], \[FormalB]}], 
              Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1)}, 
         Appearance -> None], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[True, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; 
              NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 4]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 5]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 6]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   6], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 6], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 7], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 7]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   7], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 7], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
    
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 5, 
    6, 7}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalA] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalB] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalC] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalCapitalA] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalCapitalB] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalCapitalC] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" \[FormalCapitalO] ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Polygon[{{
          2.435660517125704, -0.50242023886181}, {-2.132328635911984, \
-3.451933636579934}, {-3.0607914426767313`, 2.597162054554736}}]}, {
         Opacity[0.2], 
         Polygon[{{-2.132328635911984, -3.451933636579934}, \
{-3.0607914426767313`, 
          2.597162054554736}, {-1.0065963299655492`, -0.1833456035770299}}]}, {
         Opacity[0.2], 
         Polygon[{{-3.0607914426767313`, 2.597162054554736}, {
          2.435660517125704, -0.50242023886181}, {-1.0065963299655492`, \
-0.1833456035770299}}]}, {
         Opacity[0.2], 
         Polygon[{{
          2.435660517125704, -0.50242023886181}, {-2.132328635911984, \
-3.451933636579934}, {-1.0065963299655492`, -0.1833456035770299}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Circle[{-1.0065963299655492`, -0.1833456035770299}, 
          3.4570133138939547`]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Circle[{-4.678338728829804, -0.7469135576674143}, 
          3.714741055595835]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Circle[{1.0707836007906937`, 3.5004471401200337`}, 
          4.229164967872186]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Circle[{0.5114012299187872, -2.5343084509402174`}, 
          2.798453851725461]}, {
         RGBColor[1, 0.5, 0.5], 
         Line[{{
          2.435660517125704, -0.50242023886181}, {-4.678338728829804, \
-0.7469135576674143}}]}, {
         RGBColor[1, 0.5, 0.5], 
         Line[{{-2.132328635911984, -3.451933636579934}, {1.0707836007906937`,
           3.5004471401200337`}}]}, {
         RGBColor[1, 0.5, 0.5], 
         Line[{{-3.0607914426767313`, 2.597162054554736}, {
          0.5114012299187872, -2.5343084509402174`}}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{{
          2.435660517125704, -0.50242023886181}, {-4.678338728829804, \
-0.7469135576674143}}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{{-2.132328635911984, -3.451933636579934}, {1.0707836007906937`,
           3.5004471401200337`}}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{{-3.0607914426767313`, 2.597162054554736}, {
          0.5114012299187872, -2.5343084509402174`}}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{2.435660517125704, -0.50242023886181}]}, 
         Inset[
          Style[" \[FormalCapitalA] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          2.435660517125704, -0.50242023886181}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{2.435660517125704, -0.50242023886181}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-4.678338728829804, -0.7469135576674143}]}, 
         Inset[
          Style[" \[FormalA] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-4.678338728829804, -0.7469135576674143}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-4.678338728829804, -0.7469135576674143}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-2.132328635911984, -3.451933636579934}]}, 
         Inset[
          Style[" \[FormalCapitalB] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-2.132328635911984, -3.451933636579934}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-2.132328635911984, -3.451933636579934}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{1.0707836007906937`, 3.5004471401200337`}]}, 
         Inset[
          Style[" \[FormalB] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          1.0707836007906937`, 3.5004471401200337`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{1.0707836007906937`, 3.5004471401200337`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-3.0607914426767313`, 2.597162054554736}]}, 
         Inset[
          Style[" \[FormalCapitalC] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-3.0607914426767313`, 2.597162054554736}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-3.0607914426767313`, 2.597162054554736}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{0.5114012299187872, -2.5343084509402174`}]}, 
         Inset[
          Style[" \[FormalC] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          0.5114012299187872, -2.5343084509402174`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{0.5114012299187872, -2.5343084509402174`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-1.0065963299655492`, -0.1833456035770299}]}, 
         Inset[
          Style[" \[FormalCapitalO] ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-1.0065963299655492`, -0.1833456035770299}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-1.0065963299655492`, -0.1833456035770299}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-10.062382619734493`, 
       6.969251403971731}, {-7.317392109189841, 9.714241914516384}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[137073]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{380., {243.634033203125, 249.365966796875}}], True->
        
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {244.134033203125, 249.865966796875}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[True, 50, 0]}]],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{{
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`display$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
             Blank[]]]] :> Dynamic[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
             RepeatedNull[
              Blank[], 1]]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
           PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Text[
             Style[
             PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
             0}], 
            
            Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
               0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1, -0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
               0.25}}]}, "both", 
           PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
           Text[
            Style[
            PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
            0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{\[FormalA] -> {-4.678338728829804, -0.7469135576674143}, \
\[FormalB] -> {1.0707836007906937`, 3.5004471401200337`}, \[FormalC] -> {
      0.5114012299187872, -2.5343084509402174`}, \[FormalCapitalA] -> {
      2.435660517125704, -0.50242023886181}, \[FormalCapitalB] -> \
{-2.132328635911984, -3.451933636579934}, \[FormalCapitalC] -> \
{-3.0607914426767313`, 
      2.597162054554736}, \[FormalCapitalO] -> {-1.0065963299655492`, \
-0.1833456035770299}}, {C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalA]], \
{C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] -> 
     3.714741055595835, C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalB]], \
{C[\"GeometricPoint\"][\[FormalCapitalC]], C[\"GeometricPoint\"][\
\[FormalCapitalA]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] -> 
     4.229164967872186, C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\[FormalC]], \
{C[\"GeometricPoint\"][\[FormalCapitalA]], C[\"GeometricPoint\"][\
\[FormalCapitalB]], C[\"GeometricPoint\"][\[FormalCapitalO]]}}"]] -> 
     2.798453851725461, C["GeometricQuantity"][
       C["Unspecified"][
       "ref", "{\"circumcenter radius\", C[\"GeometricPoint\"][\
\[FormalCapitalO]], {C[\"GeometricPoint\"][\[FormalCapitalA]], \
C[\"GeometricPoint\"][\[FormalCapitalB]], C[\"GeometricPoint\"][\
\[FormalCapitalC]]}}"]] -> 3.4570133138939547`}}, {\[FormalCapitalO] == 
    TriangleCenter[
      Triangle[{\[FormalCapitalA], \[FormalCapitalB], \[FormalCapitalC]}], 
      "Circumcenter"], \[FormalA] == 
    TriangleCenter[{\[FormalCapitalB], \[FormalCapitalC], \[FormalCapitalO]}, 
      "Circumcenter"], \[FormalB] == 
    TriangleCenter[{\[FormalCapitalC], \[FormalCapitalA], \[FormalCapitalO]}, 
      "Circumcenter"], \[FormalC] == 
    TriangleCenter[{\[FormalCapitalA], \[FormalCapitalB], \[FormalCapitalO]}, 
      "Circumcenter"], 
    Style[{
      Line[{\[FormalCapitalA], \[FormalA]}], 
      Line[{\[FormalCapitalB], \[FormalB]}], 
      Line[{\[FormalCapitalC], \[FormalC]}]}, Pink]}, {
    GeometricAssertion[{
      Line[{\[FormalCapitalA], \[FormalA]}], 
      Line[{\[FormalCapitalB], \[FormalB]}], 
      Line[{\[FormalCapitalC], \[FormalC]}]}, "Concurrent"]}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.819646214453772*^9, 3.819646232371586*^9}, 
   3.819647040497302*^9, {3.8196478140456247`*^9, 3.8196478304314423`*^9}, 
   3.819648409347384*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"51fae211-df86-430d-9d78-4b738172f424"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ImageCrop", "@", 
   RowBox[{"First", "@", 
    RowBox[{"WikipediaData", "[", 
     RowBox[{"\"\<Kosnita's theorem\>\"", ",", "\"\<ImageList\>\""}], 
     "]"}]}]}], "//", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"#1", ",", 
     RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.819717993139802*^9, 3.819718042431674*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"ea799ef3-67e3-4c90-9305-7352e8d32bb1"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3Qd4FFXXB/BJLwRC7yBNpLfQlC4BFPKhKFEUA1IMCBqaGl4FI0iJ2CKi
EBuiYokCGhGFUI1SNNIRRLqU0EJNIGVzvtk7m83dTdsys3fL//fs8z6+YXf2
7OzeM2dmbmk4etJD0d6SJE0LlP/noVGxfaZOHfW/hyvK/ycyZtrT42KeGnt/
zHNPjXtqatfRPvIfZ8r/c0N+vv6/CQA8UzbRGaK9RJuIviNaTDSHKJboeaJo
9ogiimSP/kThRL2JwgoefdlfBhY8YRR7/nj2cvnxGtHHRN8TpRL9TXSeSCf6
wwIAAICryyM6QbSZ6FOiOKIRRPcRdSJqQFSeSHLsozJRU6K7iSJYFTSP6Cui
bUTnRO8lAAAAcDY3iLYTfU70KtEYonuJGhH5Obx6se0RRNSCXf+ZSPQ60bdE
e4hyRO9SAAAAcJgzRMlE8eyGkVwVeIsuTlR/+LLPFcmuNcmf9ChRvuh9DgAA
AKq4xfqrvEM0lt1LCra7bKjALul0ZtdJ5NJoMrvU8z7RN0RJRD8RpRCtJ0pj
j/2srpAfl4gyWJ8Z5f/uYf+6gz1ZfvzAXrucaCGrRp4heoyoH1E7onpqxFyZ
9fN5lugDot3sRhsAAAC4Crl+WEU0jfVL8bepEqjOSpdHWIfexUQ/sxLlnLi7
PFlE/xHtZP2KE4gmEQ0masOqLNtqswFEs1gBdkPQJwIAAICS5BMdIPqQ6EnW
z9aqo3xtdpSfyq6W/MgKmJuiP45VLrGLP9+xPjZPE/Ugqmjlfaswohiir4lO
i/4sAAAAnuwMGxwdSVTF4uN4OXZDaiy7ObWRVQVu6QQr0uYTDSNqyaoXC/dP
AzbwaiXRddEfAQAAwBPksFHYsURtibwsOFKHsKljZrJrGv966rQw2US7iD5j
PYI6WVbn+LFuOa+x7kAAAACgrnSiZezijCX3WWqxKV/iWbfhbNGRO6FMtmfi
2V6qbFmPo0i2/zNERw4AAODSDrNJfduWdeT1Zj1pJxB9QXRcdMyuRcemUH6f
6AmiOyzokHMv0RKii6LDBgAAcCEn2difbmXdbKrCriQkotereo6y/RlZ1gTL
PuzbSWAD0AAAAKBY/1lQz3izUTyxbPqXXNEBu7Estodj2d62pMLBNRwAAADF
RXZkvLvUeqYqmw3vSxxARThK9B7rkBNU8hcUwKbW+ZLNiAgAAOCZ0tjg4lIO
l5VYPZOM9Y+cQxb7LqLYqPmSvrKK7DvdLTpUAAAAhznHhuQ0LvXgqNQzGNPk
nDLZGhARpU7sHMa662BmYwAAcFc61m0jsuS1s4PZsVI+Yt4WHSpY6AobBh5R
8ndagV3ASRUdJwAAgIrS2dqO9UruD3wf0bfonuHKLhG9W+rA/PZsnHiW6DgB
AADs8S9bh6ikXjS12LibY6KDBBWlsW+8UsmdwGPZWhgAAACuJZXddfIp4RJN
OLvlhPHa7uoW+37DSx5CFcXWLQUAAHByOtbpt2sJR7S67IT9pOggwWH+Zt94
1ZLr22TREQIAABTrOtFbJU/L35dojaeuQQm3iD4kal7Cb6MT0TdEeaKDBAAA
UNxkM+xVL+GsPIJou+gIwRnks2FxESWUNw3Y8HCUNwAAINBtdjCqWdxxqjzr
RIq7TlDULtbHxre4n01zNn4c5Q0AADhYNitpahd3bKrJBndniI4QnNxx1v2m
YnE/oZas73G+6AgBAMATZLMJSYqdlEY+3f4Cyx+ANa4QzS+hd3FH1i8LAABA
I7lEnxA1LO4Y1IToM9xBAFtdJ3q1hNlv7iHaIDo8AABwPxuJ2hR33KnP7klh
Rhqw33W2iFhocT+zcKL9osMDAAD3cJJ19Sx6rKnODkNYBwHUdYn10apQ5Pfm
x7qjXxEdHgAAuK6b7BATWOQQU5WVNFj3B7RzkXUtLroYR2U2twBuegIAgFV0
RB8R1ShyWAkhmkOUKTo88BBniEaz2ZDMfodtiTaJjg0AAFzFjuLWRPBiaz9h
XhpwvL+IehR3MzSC6Kjo2AAAwJldIBrOahizI0hXVu0AiJJP9DXrqW72ywwk
msWmIAAAADCTRFStyIGjNhv0hDWewBlksc5d5Yv8Su/EnSkAAOAcJxpQ5GAR
xHpvXhcdG4CZ02yYntl1Rfn/RuPnCgDg8fLYktzlilQ1D6E7DTi3rUTtiptV
abXowAAAQJS9RF2KW+npW9GBAVgilw39LlqWR7DhVAAA4DluEb3IZjwzu5g/
juiq6NgArPIvUZ/iprv5FMtoAgB4hv1sGhCzA0FjrMgDLksuYJYRVSnyqx5A
dE50bAAAoJ18NsQp2DT5+7JOwlgZAVxdenFrf1RHrxsAADd1nmhQkbTfnihN
dGAAKlpdZLobZcAUpssGAHAn37MFnsyWFJyPNXfAHV0r7tJNG6J9ogMDAAD7
ZbE1kc0m/WhI9LvowAA09S3rQmw2TXE8ZpsEAHBl8ilq6yKnrvLJ7A3RgQE4
wEmiXkV+//2IzooODAAAbLCIyN80pVchWik6KgBHyiOaW2RmgxpEm0UHBgAA
lrtFNLrIieq9bC56AA/0B1tPymwwYDwmugEAcAUniToV6Scch64F4NmUzmZm
1f6DrKcxAAA4rTVFOkw2JPpLdFQATuIrohDTBtKS6B/RUQEAQFH57NK6t2nS
7sOmrwEAo0NEzU2bSXmi70RHBQAAvGtEQ4pMShaLaWoAinOd6GG0FwAAZ7WP
qIlplq5IlCw6KgBnlk80h8jHtOH0J7osOjAAAA+3nijUNDk3I/pbdFQALmEj
W0yKbz5N0OUGAECcpUUm6BhGdFN0VAAu5BRR5yLTPaWKjgoAwNPkE71kmo19
iN4WHRWAK7pFNNK0NQWhOzEAgANlEz1hmofLoVMNgH0STAcVerHZnwAAQGsZ
RZa/qUWUJjoqADeQxBbK5BvXWKJc0VEBALixY6xvMJ94W7GphgFAFVuJqpk2
sQGYnRgAQBvbi6Tc/ki5AGo7RNTYtKF1IDonOioAADezhaiCabIdRZQjOioA
t3SJqHuRpUmOiY4KAMBtrGHDNNCtEcBhbrPJE/japj7RYdFRAQC4ge+I/E2X
6l4uOiQAT6AjmlKko/5+0VEBALi0L4l8ubwaQLRSdEgAHiXetLapxHq7AQCA
DRJNJ9YIJlonOiQAD/Quu/9rbImhRL+JDgkAwOUsQi4FcBpLipxlrBUdEgCA
C3nF9Op3VUzBByDaZ6b3hQMx3TcAgGXMqpoaRHtEhwQAxCoZfmpiP6IfRYcE
AODk3sEIUwAnZjb3gj/RL6JDAgBwWktM+9U0wXIJAM5nM1EI105D2EIMAABg
5nPT3ol1iY6LDgkAirXB9J5UKHrBAQCYWmXaL7E60UHRIQFAKdayeaX4Hv4H
RIcEAOAk1hXJkPtEhwQAZVphej5Sh+io6JAAAIT7jagclxsrEP0pOiQAsNAy
0zvI9YlOiA4JAECgHUTluaxYDrPwAbiaRaYjGe8iuiA6JAAAIY6xOWr4caNr
RIcEADZ427S26USUKTokAAAHu0rUynSmL8xiCuC6ZpjWNkPZ4uAAAB7iNlEv
Lgd6EX0hOiQAsNPTprXNc6LjAQBwjHyiKNMEOEd0SABgvzyiB0yb9ruiQwIA
cACzS9ajRMcDAGrJJOrMtW4fou9FhwQAoKlPTKua3kTZokMCABWdZYO++QUX
dooOCQBAI5vY0CdjxmtBdEV0SACgugNEFbmWXguLvgGAOzrAFpRBrgPwBOvY
UEdje29NdF10SAAAKpJzWnMuywWzqfkAwI19bHrf+QE2cAAAwA3I2exh9CcE
8DwvmtY2C0THAwCgijmmye0N0fEAgGPIJzVDTE9qNogOCQDATiksmxkz2xBc
jgbwJNfZMAFjBqhCdFx0SAAANjtBVNV0dbxrokMCAAc7RFSBywOd2dzjAAAu
5xZRGJfNyhP9LTokABBiFVs5xZgNokXHAwBgg9Gmq0F9JzoeABDoOdO+dh+J
jgcAwCrvmSaxl0THAwBi5RH153JCINEfokMCALDQPpa1jBmsL8tpAODhzhPV
5TJDQ3S6AwBXcIvNMmrMXXcQXRQdEgA4iR1EAVx+GCE6HgCAMj3NZS1/ojTR
8QCAUzG7T/2l6HgAAEqxxnTsAyYaBYCiBnNZIhQz2wCAszpPVIPLVz3RtQYA
inOBLYNrzBXdkSsAwPnkE0VwmaoiFu8GgJKtNb26O0d0PAAAZt4xvW/+teh4
AMDJTeIyhi/RNtHxAAAYHSAK4nLUGNHxAIDzu03UlssbjdjCUgAAwsnZqQ2X
nZoQ3RAdEgC4BLM5r0aLjgcAQPYyricDgK3M7mKvFR0PAHi4/WyyGvQABADb
5BPdbzod8U3RIQGAx9IRdeMyUluiHNEhAYDLOcvGURozyTTR8QCAx3rH9CYU
JhkGANu8zyUTb6KtouMBAA90kqg8l4umi44HAFyXjqgHl0/a4PIvADjcYNwW
BwD1/GM6Qmqe6HgAwKN8weUfL6IU0fEAgBuYzSWWAKK/RccDAB7iElF1Lv+M
FR0PALiHXKJ2XG7pxcZMAQBobQSXeWoRZYiOBwDcxnYiHy7DfCg6HgBwe9tM
l677TnQ8AOBm+DWkKhNdFh0PALgxHVEnLuc8IDoeAHA/N4jqc3lmsuh4AMCN
fcplG3+if0XHAwBu6Wsu1fgRHRIdDwC4Jfk0qjaXbf4nOh4AcGM9uWwzSHQw
AOCWXuTyTA2ia6LjAQA3tpNNQWzMOWtExwMAbuYUUTCXZJaKjgcA3N5oLuc0
w1zEAKCqoVyG6cB6EQMAaOo8USiXed4RHQ8AuI3fuCHe8n/8KjoeAPAQr3GF
TSWii6LjAQA3kGc6F+jjouMBAM9xm6gJl3+eFh0PALiBz7msEkR0QnQ8AOBR
VnEpyAdDvwHAPrlEd3JZJU50PADggcK5LPSE6GAAwKV9zOWTqkTXRccDAB4o
jevm54NVvwHAVjlEjbjC5nXR8QCAxxrM5aJHRQcDAC5qMZdJahJlio4HADzW
Xm6+Pi+i3aLjAQCXc5uoHmaQAACnwc+mNUR0MADgchK4HFKbKEt0PADg4Q6Y
XrTZIToeAHAhWabrXS4WHQ8AALF5tIx5aaDoYADAhSzgsscdRNmi4wEAkB0m
8uWy01bR8QCAS8gkqsaljo9FxwMAYDSKy079RQcDAC5hEZc3mrA5+gAAnMQJ
In8uR+0SHQ8AOLk805VZcLkGAJwNf9EmSnQwAODkVnAZowbRLdHxAACY2cdN
ROxHdEp0PADgzO7hCpu5ooMBACjW/VymekF0MADgtP7gckUw0SXR8QAAFGs9
l6wqEF0VHQ8AOKeHuVzxrOhgAABK0YHLV2+JDgYAnNAxtmyucf3cI6LjAQAo
xRdcYVOXLdoLAMCbyGWJoaKDAQAoXS5RfS5rfSk6HgBwKpeJQjCfJwC4lNe5
rBUmOhgAcCrxXH7oJjoYAABLXCMK5XLXr6LjAQAnkW86Kd9K0fEAAFjoOUzW
BwBFbOAyQx02+TAAgEs4SuRdkL6CiDJExwMAzmAYV9jMFB0MAIBV7uUy2Lui
gwEA4S4RBRbkBPnE57joeAAArPIlV9i0ER0MAAj3FpcTBogOBgDAWtlE1bg8
9ofoeABArJZcQvhOdDAAADaYzOWxp0QHAwAC/cZlg6pEt0XHAwBgg4Pcet8h
RNdFxwMAoozECrkA4Bbu4bLZh6KDAQAhrrIlvI2p4KDoeAAAbPYJl826iA4G
AIRYwuWBXqKDAQCwx03TWYj3i44HAByvD5cEPhcdDACAncZzOe1l0cEAgIOl
E/kUZIBAtuQKAIBL28wVNneJDgYAHGwRlwEeFh0MAID9dES1ucy2R3Q8AOBI
PbnmnyQ6GAAAVTzLZbaXRAcDAA5zlrsPFcw63QEAuIFUrrBpLDoYAHCYBK7t
Pyo6GAAAteQT1efy21+i4wEAx+BnslopOhgAABVN4fJbrOhgAMABTnFzj5cn
yhIdDwCAirZxhU1Ddg0HANzbG1yrHy46GAAAdcmVTAMuy+0QHQ8AaK0L1+R/
EB0MAIDqXuCy3DTRwQCApi4QeRe091As5w0A7uhPrrBpLjoYANDU51x7jxQd
DACAFvJNZ+o7KjoeANDOcK6xfyw6GAAAjTzJ5brFooMBAI3oiKoXtHQvotOi
4wEA0MjXXGHzgOhgAEAjO7iW3lZ0MAAA2skg8i1Id+XQnxDATb2CeasAwGPw
M5FuEB0MAGihK9fMN4kOBgBAU7O5jPe86GAAQHWXuYUvyxNli44HAEBT/KDv
VqKDAQDVfcm18SGigwEA0Bo/XEJ+nBQdDwCoawTXwBNFBwMA4ABPcHnvA9HB
AIC66uLMBQA8zHIu7z0qOhgAUNEJrnU3ER0MAIBjnONSX13RwQCAivjTlpGi
gwEAcJhGXPY7JToYAFDLBNxoBgCPxHcv/FJ0MACglrZc0z4gOhgAAIdJ5LLf
RNHBAIAqrnEz2FRiQyABADzEfq6waSc6GABQxVquXUeIDgYAwJHyiSoXJED5
FO+q6HgAwH4vc4XNfNHBAAA42CAuB64THQwA2K8v16h/FR0MAICDzeNyYJzo
YADATnlsZSilRfsRZYqOBwDAwbZwhU1f0cEAgJ12ci26q+hgAAAcL4sooCAN
hhDlio4HAOzxEVfYTBUdDACAEF25TPi36GAAwB6TuOa8THQwAABCRHOZ8BvR
wQCAPfpwzXmX6GAAAIR4l8uEM0QHAwD2qFrQln2JbokOBgBACL7/8GDRwQCA
zU5zbbml6GAAAES5QuRVkAwbig4GAGz2M1fYDBMdDACAQPUKkqEXW2gGAFzR
a1xhM1d0MAAAAg3k8uFvooMBANs8wTXkH0UHAwAg0HQuHy4WHQwA2KYN15BP
ig4GAECg5Vw+nCA6GACwQQ6Rf0ErDmVL3AIAeKy9XGHTXXQwAGCDfVwr7iE6
GAAAsXK4hRVCRQcDADZYxRU20aKDAQAQriWXFS+IDgYArPUW14Tniw4GAEC4
CC4r/iE6GACwVgzXhL8WHQwAgHDPYsUoAFc2mGvC20UHAwAg3JtcVnxNdDAA
YK3WXBM+LzoYAADhVnBZ8WnRwQCAtcoXtN8gjPUGACDayRU294kOBgCscolr
vy1EBwMA4AwyuMTYTHQwAGCVP7n2O0h0MAAATqJiQWIMxKVsAJfyLVfYTBQd
DACAk2jH5cazooMBAMu9zjXe10UHAwDgJIZwuXGr6GAAwHITucb7rehgAACc
xBQuNy4XHQwAWC6Sa7zbRAcDAOAk+Kls3hIdDABYrg/XeA+LDgYAwEks5XLj
DNHBAIDl2nCNN0N0MAAATuJHzNEH4JpqF7RcHyKd6GAAAJzEVq6wiRQdDABY
LrCg5VYTHQkAgPM4zBU294oOBgAsdINruc1FBwMA4Dwuc+mxjehgAMBCx7mW
2110MAAAzkPHbtAr6bGO6GAAwEJpXGHzoOhgAACcSrWC9BggOhIAsNAvXGEz
RnQw4Kmys7PXrl07efLkwYMHd+zYsUmTJvfcc8/QoUNnzpz5559/5udjnR4Q
pBmXIW+IDgYALLGca7axooMBz3PhwoVnn302NDRUKlndunXffPPN27dviw4W
PE93LkOeEB0MAFjiHa7ZLhAdDHiS/Pz8119/vUKFClwJ4yVJdSSpiySFS1Jb
SarKlzcNGjRITk4WHTV4mAe5DPmn6GAAwBJzuWabKDoY8Bg3b94cOnQoV7a0
l6T3JOk/SSLTx15Jmi1JtQ11j5fX7NmzcWcKHGcklyE3iQ4GACwRxzXbpaKD
Ac+QmZnZuXPngpKmliR9IUm6IiUN/8iUpDmSFKC84KmnnhL9CcBjPMVlyLWi
gwEAS0znmu2XooMBD5Cfnz9s2LCCqqadJJ0staThH9skqabysrffflv05wDP
8AyXIXEjFMAlTOWa7XeigwEPINckBVVNB0m6aXFVozz+laTK8it9fHy2bt0q
+qOAB0CGBHA5/PnIj6KDAXd3+fLlSpUqsaqmRnE9aix5rJfrGvn1d999Nzrb
gOb+x2XI5aKDAQBL4A4yONBzzz1XcLlmqU1VjfIYq2xi5cqVoj8QuLs49EIE
cDUjuWa7WXQw4Nby8vKqVavGSpKWkpRnR2FzRpKC5K1ERESI/kzg7uZxGXKJ
6GAAwBKPcc0WfRZAS7/++mvB5ZrX7ahqlMcQeSsBAQHXr18X/bHArb3BZciF
ooMBAEs8xDXbNNHBgFt78cUXCwqbf+0ubJYpG1q9erXojwVu7V0uQ74uOhgA
sEQE12z3iQ4G3Nrw4cNZMRJqd1UjP/Yrhc2iRYtEfyxwax9wGXKu6GAAwBL9
uWb7j+hgwK316dOHFSPN1ShsMpTC5qWXXhL9scCtfcplyDjRwQCAJe7lmu0R
0cGAWwsLC2PFSBc1Cps8trCUNHHiRNEfC9zaF1yGfFF0MABgifu4ZntQdDDg
1u677z5W2DRUo7A5p1yxmT17tuiPBW7tEy5DviI6GACwxGCu2e4RHQy4tTFj
xrBiJNC+sd7K4w+lsPnoo49Efyxwa4u5DDlfdDAAYImhXLP9Q3Qw4NbefPPN
glFRW+wubOYrG9q2bZvojwVu7R0uQ74pOhgAsMRwrtn+JjoYcGv//vtvQWEz
xe7Cpou8lZo1a+p0OtEfC9zaAi5DYgQegEsYxTXbDaKDAXfXqlWrghHfl+yo
arYo5VF0dLToD6QmuUb78UeaMIHuvZfCwmjAAJI/31dfkXEOwvx8+vhjSkzU
P44dExqr55jDZcgPRAcDAJYYxzXbn0UHA+7u008/tfuijU6Susqv9/X1/fvv
v0V/INWcOEGdOhX/katUoQULKDeXfv/d8Jdy5ejKFdERe4iZXIZcJjoYALBE
DNdsfxAdDLg7nU7Xrl07Vth4S1KyTYXNDPe7XJOZSXfdVfgZQ0KoQwfq25da
tCA/P8Mfe/SgZ54x/PegQaIj9hyxXIb8SnQwAGCJ57hmmyQ6GPAAqampfn5+
rDapIEl/WlnVfKJMX1OnTp309HTRH0U1b7xR+Bnleo2/GnPuHMXFFZY3ymPq
VHGxeprJXIbEYvIALuFFrtl+IToY8AyffPJJwQ2pQEn63LKSJl+S4pSqJjAw
cMeOHaI/hJp69zZ8zHbtKC+vmCds2kT+/oV7Y948h4fosSZwGRLrkgG4hFe4
Zvux6GBAqNu3b2cwJ06cOHr06D///JPGbNmyJYXZtGmT8peDBw/KTzh+/Ljy
/Fu3bln7XnFxcV5eXgXlzRBJOlhqVbNekpRZi6Xg4OBVq1Zp8fEFatbM8Emf
fbbE58yaVbhDEhIcGJyHG8NlyBTRwQCAJeK5Zvue6GBAG3LFIlcpmzdvXrFi
RWJi4ty5c6dOnTpy5MiIiIi77767adOmlStXluwWGhrapEmTLl26DBw4MCoq
avLkya+++urixYu//fZbuSKSayGz+mf58uWBgYEFr/aRpD6SlCBJv0vSCbYU
1D+StEmSXpakNsa3qFu3rlxWidqN2unRw1CxDBlS4nPOniVvb8PTsPKn4/AT
YmwRHQwAWIKfV3OO6GDAbhkZGfKhPykpKT4+Pjo6Ojw8vFGjRj4+PvbXLaqo
VKlSWFhYZGRkbGysXGK99957PXr0sOSFfn5+zzzzzMWLF0XvYE3MmWOoWHx9
6aefSnxa3bqGpy1e7MDgPNxALkPuFR0MAFgiiWu2U0QHA9bQ6XSHDx/+9ttv
X3755SFDhjRu3NjX19fyGiM4OLhevXrt2rWTi59hw4aNHz8+lomLi4tnFi9e
LNceH3/8cRJn6dKl8h+XLFmiPGfWrFnKq55++unHH398wIABHTp0qF+/frly
5SyPxNtbfvJjctVT7L82aNBg0qRJ//77r+j9raHLl6lOHUPR4uVF/fvTW2/R
+vVkVse1bWt4zgeYUMVhOnMZ8ozoYADAEhu5ZjtCdDBQqsuXL2/YsCEhIWHs
2LGdOnWSK5PSC4bAwMDmzZsPHDhwwoQJCxYs+PLLL1NSUnbt2vXff/9lZWVp
He2tW7dOnz69Z8+ejRs3fv3112+++eazzz4bERHRsmXLImXPUHa8zpWk+5X/
L1dodevW7dWr17Rp0+SYz58/r3W0wu3aRfXqFdO/qG5dioig116j/fupSxcU
Ng7XmMuQt0UHAwCW2MM124Gig4Ei/vnnn6VLl44ZM0YuUbjetuZCQ0N79Ojx
1FNPzZ07Vy5gtm7devbsWdGxl0auVXbs2CEXPPHx8XfeuZ0dr/MkqWpJH7BJ
kyYjR4784IMPDhw4kJ+fLzp8TVy7Ri+/XHjpppQHChvHCS1Ij+VFRwIAFjrD
FTZdRAcDRLm5uWlpaQkJCZGRkdWrVy/2KO/r69uoUaOIiIi4uLikpKT9+/e7
7rE+L08/s658sO7ZU99BKDU1Vf7s0dHR3bp1CwoKKvbjly9fPjw8XP7sKSkp
Drj05HgnT9KaNfrZhseOpV69qGZNFDaC5BB5FaTHBqKDAQAL3eYKm8aig/FU
clmya9eu+fPn9+rVixsoVMjHx6ddu3bPPPPMsmXLdu7cefu2+1wT37jRcLB+
s8jSyTk5OXv37l2+fPnkyZM7d+5cbA8if39/uQSaPXv2H3/84cYLYp46RcuW
Ue3ahn314YeiA/IQ6Vx67Cg6GACwXEhBy60oOhIPc+PGjeTk5Ojo6Hr16hU9
ZJcrV04+ZMfGxsrPycjIEB2sViZNMhysDx8u45mZmZnK9ZzIyMgqVaoU3WNV
q1aV/ykxMfHMGdfr5XnlCv31F61dW9pzjJ2Hly93VFgebj9X2AwQHQwAWK5B
Qcv1YpdeQUs6nS4tLW3OnDly0VJ0FHa1atUeffTRhQsX7ty5M6/YKWjdTsOG
+iN1y5bWvUrejXv37l28ePETTzxRs2ZNs93o7e3dqVOnmTNnbt261SV24549
hUOiShn+FRpqeFpysgOD82RbuMJmuOhgAMByYVzjdZ/ld5zO/v374+LiGjVq
VPQoHBYWFhsbm5KSkpubKzpMhzIe0F980a7tHD16NCEhITw83N/f32z3VqlS
JSoqKjk52cn3bYMGhl0xfnzxT9iwobCPzW+/OTY4j7WCy40xooMBAMsN4Brv
AdHBuB2lnmnSpElJ902cfPiSpmbPNhyp1Vr66ebNm8rdvfr16xfd4XKFI1eP
ztkV56OPCuuWKVOIX+EzK4s+/pgqVTL8a2goZWeLC9SjfMDlxlmigwEAy/Fz
hm8SHYy72Llz5/Tp0xs2bGh2eG3ZsuWsWbPS0tKc8/DqYGFh+iN1rVqkxaCu
PXv2zJ8/v0OHDmZfQd26dadMmbJ9+3anGkom/xwef9xk6FPVqtS6Nd11l/nS
3q+9JjpWzzEXK84AuKbnuca7THQwLu7s2bPz5s1r2rSp2cG0WbNmL7/88v79
+0UH6EROn9Z3KZGP1OPGaftG//7775w5c9q0aWP2pTRo0CAuLu7kyZN2bv/w
YVqyhJ56igYOpHvu0S/V/eCDNH06rVhB169bsR25znrrrWIGdxsfISH6qsaZ
yjF3F83lxu9FBwMAlnsPl1vtpdPpUlJSIiMj/fz8+EPnHXfcERMTk5qaKjpA
Z/Tee4bj9Zo1DnrHY8eOxcfHt2jRwqyPU3h4eFJSUk6OdV3ndTr66ivq1Km0
mfQCAykykv7804rN3rqlXy7quefogQeoe3f99vv3p9Gj6ZNP6NIl6z4v2Ks/
lxt3iw4GACy3hmu8o0QH42rk8335rN9svHbt2rWff/55t1yHWkXy8Vq5CmG6
6Lcj7N27d8aMGXLZyX9rNWvWjI2NPVzmsHPmwAHDfTQLH48/jrLEBd3J5car
ooMBAMv9zTXe3qKDcRG5ubkrV668//775fN945HRx8cnIiLihx9+cPIBOM7g
2jXy99cf8YcOFRaDTqf75ZdfHn74YX4slZeXV58+fZYvX17KLIhff01BQeal
S6NG+ltRI0fSsGH6WZQrVDB/Qp06ckHlyM8H9sknCixIjJVFBwMAVsnCtOFW
uHHjRkJCgtnJfp06deST/ePHj4uOzmXItYFyuP/sM9GhkH4ph8TExFatWvHf
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
BmhsjDt3Wr2FqCi+OX+hLEYWFxeXnY1RN87kIjeMorboYABcCl/YJCfr06bZ
Iz2djhyh9etp1iyqVavwyXPnahlWXa62OaflG2ng5MmTPXv2NF6oGTRoENav
dBLGha3j4kSHYoennzYZ9G3Vjc1168jb2/BaLy8aMmSe8YfaqlUrTA7pRFZy
OdDV5iUAEMuqUVE3buhXljFmxY0bNQvrEa5Rr9LsXTSQlJRUqVIl5UhRo0aN
ZcuWiY4ICs2cafuFDudx9qxJN/5RoywdHnXgAFWrVvjCESP0f/z555+N090E
BgYmJCTku9DqWW5sGpcD3xEdDIBLsXYem/R0Cg42PP+++zQL6x2uUT+n2buo
6tq1a9HR0cbz3wcffPDSJTcarO4W2rTR/27r1HGlhS+L9dlnJneH5ZZ4+XIZ
L0lJMalq6tenCxcM/3T9+nX+pztgwIBz51ztOqn76crlwDTRwQC4FBsm6JOz
qPGizfXr2oSVxjXqu7V5C1Vt3769SZMmynEhKCgoQdtOSGCLEyfcaoBzbKxJ
bVO5sn6OqWJL6b17afjwwjtQ8qNCBfrzT/Onfffdd5UrVzbOdbN69WoHfAoo
XhabalhJgOWIckXHA+BSbChsRo2yq++iReSGHMLNJW6+iJ8Tyc3NjY+PN04m
3LFjx0OHDokOCoohF5vKjzYlRXQoKnn9dZNyRX74+NDdd+tb6PTp+spHrmea
NTPv/F+9ur6vUbFOnTrVu3dv5Zfs5eUVHR2dmZnp2M8EzBbuzM41J1wCEMiG
wmbAgMKXWDVFmHXu5Zp2qmbvYp/jx4937drVOF/99OnTc3JyRAcFxevTR/+L
DQ0ldxr9s2oV1a5txZDGgQOp9LtMOp1u3rx5xkK9TZs2mB9bgHlc9ntZdDAA
rsbawubixcLRpvLZoiYzDyv4afriNXsXO2zatKl69epK/q9Xr94my9cQBYe7
ckU/q6T8o33sMdGhqC0zk+bNM+k/U/Th5aWf9GbtWku3+eeffzZt2lT5bYeE
hCQlJWn5CaCIQVz2s/hbAwCFVYVNXh49/HDh8wcN0jKyn7mm/X9avpH18vPz
586d6+Pjo2T+oUOHZrjcskMe5vPPDT/ar74SHYo2dDravl0/jP2RR6hXL2rR
glq1om7d9LelFi3S9y+y1o0bN0aNGmW8LfX8889jAXoHySeqXJD6vImuio4H
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
rnv//fft3dYbpu3iIzXiA/AQt4mGm7Yg+dTgR9FRaenuu++WM09AQMC5c+e0
2P7ixYv5o0O1atXyS7qfIR/BG3N7vhaRZctEf/89BQQYaps331QxdhGOFJmg
uDXRKZER9etn6Kftiv1QipY6atU5xZY6xXQh82CZmZlK570777zTrj2ziQ3Z
EDG+G8DlXWeLTfPHlDpEu0RHpaXff/9dSdFjx47V6C0OHDhgdjg4eLDkmXb3
mK5Vcbelt/9++qlwBd7YWLViF+QiUTfT32E9okNiYrl6Vd+FSd6rpVxpcy1X
rlzhS51atWqh1NHOiy++qOyZlStX2riJs+wcx9gW7mSdbQDAElfYYZQ/mrRy
z67CvIceekjOOV5eXgcsX9fNSvn5+cr6U0ZLliwp7QXLTb+Fsma2Mdq8mcqX
N9Q2jlmCT0O32YKq/H6oXsbMzBr56ivDLv3c9ZdCK0lGRkZqampiYmJMTEx4
eHjNmjVVLHUqVKgQFhYWFRUVHx+fnJx89OjREq9YuqP09HRl6ulu3brZ8voc
0yI/hGi/2iECuKvzRO2KTJXm7ucFco5VZgsZNEjbBeSU8sloeJnTiz9j+l0s
tfSN/viDKlc2HIjHjyfXPlcu2terIuuE41jK2n8+PnTpkqPfWiCzUqdGjRoq
ljqhoaEeVeqMHj1a+eBbt261+sXjTJvANxrEB+CW/iNqZtp8Hnfqye3V8uyz
zyoJZ+NGbWe5SkhI4BN73bp1y3iBfJrWg/s6AtkExZbZuZOqVStcnyXX1b/H
BDb027gryhNtcdyb5+RQxYr6Pdmnj+Pe1DmZlTrVqlXTtNQR/XHVdODAAaUL
d2RkpHWv/Nw0LU/TJj4A93OCqIlp84nyiKomKyurYsWKcrZp166d1u+1c+dO
s0xeduo+xzo4Gb+UBkQWXzE4eJDq1DHUNg88QC4/H8lnpj0ng9nC6A6xbp1h
NyYkOOgdXQhf6nTr1q18+fIqljpy2+RLnbNnLetG76zuu+8+iXVAsmKyvl2m
3e16e0RaBlDBIdOjp9Kjw52vChdatmyZkkJVGIlZFp1OpxRRRkuXLi37Zamm
UwndZ8Uq6sePU+PGhoPywIHk8jPof2W6K/zZEuHamzjRsA9VX/DHLZ05cyYl
JSUhISE6OloudUJCQlQsdSpVqiRvU96yvH35XTQaw6iRFStWKJ9iwYIFFr1A
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
Fth9DTaBLBA6z549Litt2rQRz/PM2qRC+qSmpr7//vvS5afg4OD9+zWfQvO0
a9cO3a58+fKxFkRDVp7jgte0beNK1ZS2UNc1iLUwLkfz5s2RTihWzDXnwh49
emQwCj506JAsZ46N5SdnIiMhMNBkmLZq61SQSll581qwFvYGJ5SgdcvXuh8v
XuRPQq76vffATLHuJdRJJth9DTYRHx8vWiMtW7a051R0sj6bZ34AezchG0lq
1aBu+uzZs/ZImHWoU6cOumOVKlViLYiG3DzBRRaouWLYwFokufiBui4nj91R
Ib169UI6wR91xi5KqVKl6P5i6tSpNp+KbZi2XNy9Kwj/wQfmdk3TD0hE2/8M
d7l5k79wcgfatOHnr0yyhzpPN/uuwVZevnxJpw6251QDBgwQT3Xtmo0+Qw8e
PIiIiJBaNRUqVLDHWMpqoHEZumnoQbAWREMB0PCwKKU6/DLNcO5EjKMuaiVr
YVyOTz/9lOhSV82PMWTIELrLsGGcjm4MCdPOkcPQmMmWjQ93iokBJ4rGmD1b
EP6PP8zt+rG+VTPY+F7o2kuUEM7ZqJHpCK8b1Knq2XEBdpCWliYuRaF/mIkC
yxQ0IhANG6Oh8Wa5fv16iRIlpFZNkyZNbAhCz7Kgh+jt7Y3u28CBA1nLoqEM
1wFCKe2Ri2X0gWzQGXucoAizk7Fw4UKiTo8ftyTPmvOxcuVKutcICAhIsaAs
QVoaPzkzfTpfckHM3iduRYrwEU9btmQ6QaFWkCWGLiEgwJzwi/StmlaZZZN4
+BAqVhRuTr16YLxbfkWdrax912AHHTp0EA0Se+wH+jxPnz619vCjR4+GhoZK
rZo+ffq8NbOkp6HH7du3ya2bMmUKa1k0FOOAfrbz0s5fTKoDdTmW+DpqWMPO
nTuJWli3bh0rGZKSkmJjYw8dOrRv375Lly7JG7N5584dg74jExNODNMWXUfE
zdOTN3KQqYMMHucF9eQkYisyMtP9/tAvBVUeHWnmzM+eQc2awr2qWhWMz/+J
qinM1guwG7rYk81VLGlfnTZt2lgbFbVp06Zs2bJJrZqoqCgl8hi7NkhpkLu3
atUq1rJoKMlaHLkgKqUGTp6UmI75imUtjMtx7do1ohZmzJjh4KZv3bo1a9as
evXqeXh4GGj40qVLjxs3Tq5JpCJFitAn//rrrw12QP1bTAw/lSEN0w4L4xeh
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
DXzAKovjzRtYuRLatIEyZfjUKMHB/ElGjYJ//zW+/48//kj6F9dL1le7dm26
A/2YrelA54GpqfvztGnCs1ZvsvnqlOR/2HiO9PT06Oho6USNn5+fQgZncjJ0
6SLc2/Bwk++/hhKsWbOGPN/JkyezlkVDg2I7pc1yACg3mm9MNWQ+HZeLcOeO
kGnWki1nTj69iULJyNF4KleuXByuqZTiWtnNRN9FQo0aNZiJ8lbfTWWD7pda
tfhHHBZmOJmmFm5SWXdy2JhvKjk5uWfPnlKrJmfOnIoWD0K3lMTRkzt8+rRy
TWnoQEZsREQEsVq1pHwa6gJ1o5UoVazcaH4e1UoHxVpRE3/8YWTByMcHChTg
HWPKlIEcOYyYN23b8s4DSiAOpZcsWaJIA4zYtm0b3Y16enq+YhUD/DP1khdG
Pa7w54cP+SVC9HAHDGAjl3mmUZL3s+UE6J63aNFCatUgQ/rKlStyi2sIGg6M
HCl8QeizOnxY6QY1YPPmzeQRDxs2jLUsGhoSllE6rQSAQo7tT6gUxD4Atsd6
OgcbNoC3t85ccXPj8wZv3WoYo33uHHz5paH9U6OGdctSFvL8+fPg4GCkiAoV
KmR/WIp6ePnypYeHB92Z7tixg40oNalP6TvdnxcuFJ6sesNhq1CSb7f66Hv3
7lWuXFlq1VSvXv3Ro0cKiGsEZNuIcWf+/rBbywWqJOnp6eSJe3t7x8bGshZH
Q0NCEkAeSq1tVayhZlQrKxVrRQWcOAG+vjpDpXhxM0PI5895d2Latnn3XUUq
/U2ePJn0OPPmzZP/7OyoWrUq3Z9+9tlnDIT4m3q9A/VM9zZt+GeaLRtfK0qN
XKckD7a6ovf58+cLFiwotWqaN2/u+Kmz6dN1U6PqNSOdn/Xr15OnPHLkSNay
aGiYYBKl2Zoo1soiqhXXLYj55o0u6zvaataEx48tOnDWLF2OGrShYb7sxMfH
k9QiefPmdaUoBrEkFqF+/foMhOhKvd6jdH9OSBCs3HdVGw9I5wYfZH53mj17
9uTIkUNq1QwYMICVK9fs2cJ35O0NKklE7WKkpaVVrFgRPWVfX9+7d++yFkdD
wwSo5/WllJtCqfefUYnLvPF/XZH//U9nnOTLB1bNxIt+AsSXmNREkJdp06aR
ricmJkb+szNCTNRD8PHxcbTZdp+qsuSOS5ZksGGD8ECXLnWoRFZQkfr2rSl8
iYbtBiUtOFyxKzo6WilRLWP+fMGpycMDli1jK4sLsmrVKvKsx4zRauRoqBs6
CfwQxVpp5eKZ+lB3GhKiM06sXeh/84ZPNSYe/vXX8kuYkJCQO3dupJTy5MmT
qNKlEauJi4tzd3enu1fLa0bLAz3nqV9VlqSDRv2seupz6nGOkjwUwOJZFmQY
G9xzDntuL1RiqtF6fv4ZPD0F97bvv2ctjQuRmppaqlQp9Kz9/f0d5kCloWEj
Zyj9FoDr/CrBCqqV6so0wZQlS3RmSd269p5BoSy133zzDemGZs6cqUgDLChX
rhzdwzo0sUYqQEHjSWBSUyFXLqH+hUoZaXX6cdS1DR8+XLr8FBAQsH279Z7H
irFli7AIiGybWbNYS+MqLF26lDzuCRMmsJZFQ8MC6lAqTuYUoRm8xlkyxFYU
rSrOAuImSra1a205w5s3enM+Fy/KLSLfxJt8+fJxOMEIs8houRk2bBjdyTZt
2tRxbW+iXumienGF+/YJz1GlHesbgBBKeBMl42mSkpK6du0qtWrCw8NPmio5
zw5kZ4mJMceNYy2N8/P27VuSajh79uzsa5doaFjCT5SKU64M9zCqleGKtcKC
5GSdFkWDRJtzVnXooDNsfvhBVhEzmDNnDumPJk2apEgDDkdMgkrw8/NzXEh7
c+qV1q/c/eGHwnNUPpWLTaykJK9kfnfUl9WrV09q1ZQtW/bWrVvKi2sL+/dD
9uzCUxgxQqkEmFmEuXPnkifO3I1KQ8NSkvAiu6joFMoVStfaCwJwES8Pnn//
1RkkpUvbfp6ZM3XnGaKMvxMadxcqVIgYAHdconzg/fv3DXrbw45J03YdewuL
CZr0nQ5KlOAfYpkyjhDEFuiKKuYSANy8eZM4VxhQu3ZtlSee/ecfXaoo9EFp
Naht49mzZyR7ec6cOV+8cPVMZBquxBhK0fVSrJVqVCvLFWvF4YjxL2hr1sz2
8/z2m+48jRrJJ58+a9euJR1Tr17KPWmHUqJECbrDnT59uvlj7GcC9TL30PtF
NHTHj3eEIFZzhSqjkA0g0xC8f/75h/icG9CpUyenyBtw/jxfSYo8ju7dwbWK
ijiIUaNGkYc+Z84c1rJoaFjDdUrX+SoWkb2A6gts8rBVJ4sW6QyS996z/Tyi
YwbaKleWTz4JDRo04HB87sGDBxVsxlEMHDiQ7nNbt26teJOpAPmpl1k/Euur
r4SHqNIM/2MpyftntuPOnTsDAwOlVk1UVFSa80x/XL4M+fMLT6RdO96ZTcNy
Ll265OXlhR56mTJl3r59y1ocDQ0roatV/qhME69w4JXYyjllWnE4c+fqDJJ+
/Ww/z7lzuvMUKyaffBJOnTpFInYjIiKcqIcyxYoVK+huN3v27KlKl5yka8gW
wZXXKKpXF8oyqvHWom49jBL+b5M7Llu2jPRoNMgYnjFjhgPFlYdbt/hIQ/Jl
tWplWN9EIxNatWpFHv2ff/7JWhYNDeuh/QmVi8gebOlo0YlYtUpnkHTubPt5
TpzQnaescl7cmP79+xN99dNPPynbkvLExsYa9L+Kx+lEUq/xV3q/3Lsn5L8d
ZGUuXwdBpwE3/Y5Nnz5dOlHj4+OzZs0aB8oqJw8eQPnywsfVoAG8VCivhWux
c+dO8ujbt29vfm8NDRViEJF9VplWzlFrXj44cavz88cfOoPEnmjjv/7Sq8ig
KA8fPgwKCkIqK1++fPFKlN50LAZFi7777jvzx9hMHH51xWzDt/V+nDdPeIJb
lSu+ZjPp2JjJdGI2JSVlyJAhUqsmODh4//79DpdYTh494ld4ydOpVg2ePmUt
kLpBbwJJEuXt7e2AQu0aGkoxhFJ6yuXMbkq1wqJooewcP64zSCpUsP08tK9O
167yyWcCcVT++eefK96YwvTq1YvuhTt27KhgY7OpF7i54Y8tW/KPz89PlYUv
t1KShwAkGP6ekJDQunVrqVVTuHDhi0pkVnI4z59D7dq6SdH7LjGwUgg0OiBP
f+zYsaxl0dCwg6OU3gsDUMhT7A997er0swV8uUMvL0Fbenry/7WN4cN1ho0D
0kUkJSUVK1aMwyXtYmNjFW9PSRYuXEh3xCEhIQr6DtWgXmD9ZIzx8ULOW0UN
K9tpREkebfjjgwcPIiIipFZNhQoVXCMzAAF9nk2bCl9ZqVLgQlcmJ48fPyZF
TnPnzq2FeGs4PfRM9e+KtVKJasUlIghr1tTZJDZP2NPlonZaU5TQZsQikq1a
tXJEe4px+fJlg+74/PnzirR0TT8dk36Izbp1wuNbrsJsBicoyX2QHaP347Vr
14oXLy61apo0afLS5fxRkpL4kuvkSRUqhK6dtUDqo3fv3uQFWLRoEWtZNDTs
ZrrJ7BxyslQ/qEThEBYHMHasziaJirLlDLTncEAAr3sdQ8uWLYkG+/nnnx3U
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
8eJFpd5dcHDwwYMHRYeTCx06dODH8dGjR+f1HfmJ9FZZkjzeKQuEdTQ94RW6
Kd1sJbWyzmrq1Kmj5UoxL/DvvxQebsxtnnhCT3cb8+bChQtFixaVm4T8ReDo
0aOiwwFwobrZLXHV2CmiIO5wuP8v2k8//WQaDd2ovrrFTgH169fP09slE+Xj
Sh+oK3zIX+GLFDEMeR065OkgWjpKp/xP1ZBqWGc1csqHEiUOOHuWqlY15jby
H9o9K3OrpKenm/L/L7/8UnQ4AK71FpdpuGBLtDe5w5Vh5XRAqKFDhyq934gR
I0THYq+NGzfyo7mPj0+e1nr8zLXJCMsfrl9vHO/0UvMkg3Y/srukVNI6q+nT
p48bZad6Ex9P9eoZ/9Zt2hgmVrm1CRMmKK2iZ0+nLnkF0KVtXK/eyPmHu8s2
TTYd0W3GUo+VmJhYvXp1pQ/85ptvRIdjl3v37gUFBfFjep5qjr3INUir7GX0
aONgd/p0XkLWzG+v/VZAKmCd1YwZMybdIye/utDNm4ZCmsqfu0kTun5ddECO
+uWXX+RsX2Lru6+778cAcFiaYRaieU6vCxZiL1LPIrZaWgsudvTo0YIFCyqT
bfbs2SM6HLu0aqWaXvLaa685/l6VuAZptZNSxYqGYS6PN7u0Mv+T+f6Sv0VK
4+fn517Tv/Xs9m1q2dKY29SuTZcuiQ4o906cOFG4cGG5YQQEBGCnS/Be/NbA
37rkiF24I1ZnFfxAqJ9++kn5ile+fHm3+Ir39ttv84N706ZNHXyjE1xTrGD5
w/37jWPcRBfcpc1WRkaGxcwiRVBQ0LJlywQH51mSkigiwvh3r1GDzp8XHVBu
3Lt3T9m/W/b555+LDgdAnG+5vv05lxzxLFEod9DxLjkoZGvcuHFKf9ipU6c0
3dcZXLduncVVi4QEhyZszeHaoVUN4+ho4wAn9jpWamrqsGHDrLOaokWL4iu5
Mzx4QL16Gf/0FSrQiROiA7LbwIEDlbbx3HOu6coB9OoSuyWk9O2lXLUK+2Nu
QPGXvxu75KCQNXn0bN++vdIrvvPOO6LDyUFiYqK/v+qmjIP16Hpnt9C7YUPD
0FamjMiytPIn7datm3VWU6lSJazhdZ6UFIqMNOY2YWF06JDogOwwY8YMpW3U
r18fe54CUB2uez/gkiOmETXnDtqMlYgHoa5evVquXDmJrTNasWKF6HBy0LRp
U36gf/vtt3P9FnIjLJLZAn2J1Lfgzp0zbnw5cqRWIefa5cuXGzdubJ3V1K9d
/+JFz92YRB/S0mjIEGNuU7Qo7dolOqBs7dixIzDQsFlYkSJFTp48KTocAB14
lcsx/uuqgx5iZUNMx53kquNC1nbu3KksOCpYsKDOLwiY7p0pWrVqleu3+Itr
flaTdGbNMg5q//ufJvHm2j///FOhQgXrrOax2o/dcffVyG4iI8Owla3SDAoX
lpMH0QFlQc5yS5UqJbENobCVBoDRr1wP39mFxx2vviH1pwsPDVn44osvTDc7
rly5IjqcLP3888/8cC9/Xc315fcPueb3luUPO3Uybnz54IFWIefCn3/+Wbx4
ceusZlDYoIcpnlX3X/fefdeY24SE0O+/i47Gyt27dxs2bKg0j8mTJ4sOB0A3
kriLJ6FELus4H7DiOabBpZKTNxkH+wwfPlzpJ1u0aHHv3j3R4dh28+ZN+fsp
P+j/8ccfuXuLx7m2p/6am5Bg3Piyb18NQ7bXjz/+mC9fPuusJiooKuM0diIR
ICbGmNsEBdHKlaKj4aSmppqmYPXu3Ru1jABUWrhwbwXeEaL8LtyLE+wg95Zd
unRRess+ffrotresV68eP+5HR0fn4sVpRIUzW52fZUb9/ffGgUz+DxebOXOm
RcIm85P8vpS+JJcHAyaffWaccxUQQHnfdlUro0aNUlpI06ZNk5KSRIcDoDNR
IqbZKPi9leXHEtceHWy5e/dugwYNlD7zjTfeEB2ObaNHj+ZH/44dO+bixXuz
m2DTt69xCLt1S8N4c5CRkREVFWV9oSZEClkjraHnXRcJ2DRvHvn6GndEnT9f
dDREH374odJCKlasqOe7xgDC8NNserj20BlET3BHL8wK3YBoly5dCg8PV3pO
fda2XbZsGZ8A5MuX74H9E2JmcE1OXbf44UPDTFF5/OrUSfOQsyRH3q9fP+us
JkwK2yvtpXAiF6ZYkJUlSwzprtw2fHzok09ERrJ8+XLlyl7BggXj4uJEhgKg
W3fYBXmlny/ELtS70jWiMG6gaUGU4toAwBa5wyxUqJDEKuDlaT8m54iPj1cK
Jpts377d3hfzFWzUn+x//zPeh5o1S/OQbbt161bbtm2ts5oqUpUT0gnDUvTN
LooEcrR6NQUHG1vIe++JiWH37t358+eX2L4JGzZsEBMEgFtoynX1f7v86P/j
6gTKj1EuDwBsWbt2rVIKT+5Id+mvlkeNGjX4TGDatGn2vtKUSMut7qbqJyNH
unTjyzNnztSqVcs6q2khtbgmXTNE+K4rwgD7/fGHYbmc0kiiolx99NOnT5cs
adjeXc7qFy5c6OrDA7iXsVxeIWSbET4A+YFTVh/mzJljvC0SFnb8uNU+kUJZ
7DXQtWtXu152hmtmNVU/ycigcuUMA1bDhk4I18qhQ4eUoogWekm97kn3DOG1
Ru1KPdq6lQoWNOY2o0a5rjb15cuXq1atqjSS90RdMAJwI8tEr06SO/B2XAzB
bIYn6MDrr7+u9KXly5c/d+6c6HDMFi1axOcDoaGhqal25AFLs2zqe/caR6tc
LbFyzIYNG5R91S28LL2cLqUbtzhBgWG9kptK8eLG1jJsGLlg7eD169fr1Kmj
NJJBgwZlCNzqA8BdnON6+xqCYrhCVFa94bIb7DXt+eQu1FTcRv7CeOnSJdER
GZ0/f94iK9hjz46V/LXBOaqfTJxoHKr2O3n/soULFwYEBFgE7yP5REvRxsAC
iLY4NwbIo3/+MWwlpjSYfv0M086dJyEhwbSNSM+ePR869WAAnqQMN/HghqAY
/iIK5MadCJfPZAZb0tPT+/fvr/SrNWrU0M/y0ooVK/K5wccff5zzax7lGpg6
galf3zBIlS3r3JsLM2fOtJj2LAv0C/xe+t4cmKumLkNeHDtG4eHG3KZHD7p/
3ylHSU5ObtOmjdJOIiIi7jvpMAAeiV8qslZcGBaVbV7L+RXgAmlpaZGRkUrv
2qBBg1uuLPKStYEDB/LpgfxlNocXyN9082U2rfyqGSxnzxpHqNGjnRWt/Dsc
MWKE9e2nwiGFN/lsMrf555wVAGju3DmqVs3Ycjp0oMREjd8/JSWla9euSjtp
2bJlouYHAPBsMVw6ES00ksHq3EaPZVS8kdzHmkq4t2jRQg997Ndff81nCEWL
Fs2hVDJfmq+t6iczZxqHp/XrnRJqUlJSjx49rLOaMiXK/B38tzmqemyXE3Af
8fFUr56x8bRuTRpuUvrw4UNTm2nYsOHt27c1e2sAL7GF6/O7CY3kHlETLhg/
ojVC44FMycnJ7dq1U3rajh07Cr8qfvz4cYs84dChQ9m94CuuXY1V/UT+ui0P
TIUKyfmb9nHeuHFD/rptndXUrV73fLHz5pCKEZ3U/ujgbLduUfPmxtymSRO6
rsXkwLS0NFPZxnr16slNSIM3BfA28vdv38wOtrToYC6zycMSd9dAd2VUvNSd
O3eaNWum9LddunTJ9bbaWitTpgyfKuRQJ/klrlEtMv/zzZvk728Ylfr31z7C
U6dOVa9e3Tqr6dimY0K1BHM8gUQbtT86uEZCArVsacxtatWiPE6xT01N1ees
NgD3U43r9uNFB/MPt1OhkmvpaKmxV7t9+3ajRo2UXrdNmzZ3NLz4nnvPPPMM
ny30zX5Pbn7mMFeKfvFi45C0dKnG4e3atUupqGYhsk/k/fb3zcH4qBItcEdJ
SfTYY8aGVKmS4zUeU1JSnnrqKaWdhIeHnz2LbWYA8iCS6/bXiQ5Gtp6te+Wn
H4gcQsHs5s2bpus2TZs2FXid/PPPP+cThrCwsCxLfKQThXKFkrgls08/bdz4
UttZDD///LNS/d7CmDFj0vunqyaSTdXyuCDKgwfUq5cxtylfnhwoaZmcnNyl
SxelnVSsWPHkSdybBMibaVxPa3d9eudaoJ5I3JLdMgMduH37tmneSJ06dS5f
viwkjLi4OIu04d9//7X91CNcQ2pu/md5MCpQwDASde6sZWBff/21siEFz8/P
77PPPqPX1a16iJbHBbFSU2nAAGNuExZG2c/5spCYmNixY0elqdSsWfPiRZRo
BMizdVxnGyk6GJMJ6lEgggiFHPQhKSkpIiLC1A9fuHDB9TFkZGRY3OuZN2+e
7af+wLWiF83/vHatcRj6XKPNROSQoqOjrS/UBAcHx8bG0nh1e+6AXV89TVoa
DRlibFRFipCd26zJ3xRatGihNJVGjRpdu3bNyWECeIcrXH9bVXQwJhlEA9Rj
QU/VfQQQ6MGDBz179hR75bx37958/jBA/sJsE59RcDnMiy8aBiAfHzp/XoNg
UlJSnn/+eeuspmjRotu2baMP1C25Ie6ueqaMDHr1VWNuU6gQ5bjz/NWrVxs0
aKA0lWbNmt28eTOHFwCA/UwbH/uyZdc6kUbUVz0i9MH+gHohD+V9+vRR+uRy
5cpleSfIaWbMmMGnEOHh4baf14trP5uN/2ba+LJJEw0iSUxMNJVT41WqVMnw
a/lM3Yar6WCKPjhTdLQxt8mfn37/PcunnT9/3rRVfceOHfVQIQrAo3TkOt6/
RQfDSyHqrh4X/sOmg4IOpKWlDRo0yHRpYssWl250tG/fPotE4syZMzaeV51r
PJmX+XftMg49kyfnNYzLly+bFovx5C/ghuW633LlFORHeSIsdvECMTHGBhYU
RD/9ZOMJcXFx5cuXV5pKt27d7t3Tz/dJAE8xmut7vxMdjAX5jG+vzm1GsRtV
oAPp6emm/QKCg4OXar5wOmtyWlW4cGE+l1i4cKHlkx4Q+Wc2m+Lmf37nHeO4
c+BAnmI4fPiwaXjide7c+e7du4ZTyY9rt2WJHF0LDG7n88/J19fQxvz9aZF6
Uf+6desKFCigNJXIyMgUZ1SHBIA5XPf7juhgrCURtVbnNs/jnpSOzJw509fX
V+6lfXx8oqOjXXbcxx9/nE8nhg4davmMg1ybaWf+5zp1DCNOhQp52vhy06ZN
FpmVYvDgwYaNmBdzOZX8KMFqNIE3WbzYWAHSz4++/tr4j/Pnzzdt8m6oAJD9
biAA4LDNXA/cS3QwNiWoN1yQH/0wl1hHYmNjg4ODle56yJAhhpHd+WJiYviM
olq1apbPWMI1mJHGfzt50ni5ZswYxw+9YsUK0+c1Med1c9R3oAoR7XP8WOC+
liwxFEpSpqnPmGFeN+fn5zdrFnZzB3Cm6+rJjfp0jS0nsVgn9UB0VJBpx44d
xYsXV/rtxx57LCEhwdlH/PPPPy1Si0sWRe3f41pL5jDy8cfGxGajo3sZmK5Q
8fz9/Y1LzqeqW2lRot15+JDg5lavpuBgY5OTJENiExIS8ssvv4iOC8ALlMzs
h/11fCXktro8vlIPBIsJdOPEiROmDZLq1q177pxz98N4+PChPEbw2YXlJB++
YkBmVe22bQ1DTOHC5MBVpYyMjDfeeMP69lNoaOjatWsNz4hRt0/5tMrbNB7w
AKtW3fXzu6fkNiEhs/fs2SM6IgDv0JLrjU+IDiYbd9lkCX7saIuqIDpy9epV
U8GxsmXL/vXXX049XKdOnfgE46WXXlL9+FHLVn3jhnHaw3PP5fpYDx486Nu3
r3VWExYWtm/fPsOE9pfVLbMckasXwYPuxMXFVa1aVZJaS1KCktvIjRQzawBc
YaCN77Y6lUzUVT2C1MVemToiJwD9+vVTBv2goKCZM2c671jvvfcen2PUrVtX
9eMSltchv/3WeFMgNjZ3B7p582abNm2ss5patWoZ9it8QPSsuk1WJMKGP15v
6dKlpouKzZuPKFYsQ2l+zz9v2IUBAJyLn43wmehgcpTCivXx40hpor2io4JM
6enp77zzjo+Pj9KlDx48+P59p2yJsWnTJj7NkI949epV48/u2Jg51ru3sbpI
rjYnP3PmTM2aNa2zmhYtWly/fp1ussuGfGusQSRgownQkdTU1LFjx5qaysiR
Ix8+fHjkCJUpY0ytn3nGkZuhAJAL33Pd8ljRwdgjlS365keTUKJfRUcFnNWr
V5sWRDdq1Oj0ae3LuMj5ksXqpJ9MBdH2cm2jm+EfTBtfdu2ai0McPHiwbNmy
1llN7969DXXVjrONSPh22Jjoas5vCx5MTndNN0nl9vnVV1+ZfiSfBJUrG3Ob
7t3JOfk+ADA7uZ75CdHB2CmDKFo9pvi5w+Umb3L8+PG6desqPXyxYsV+++03
zQ9hcYdI/pps/EEs1zBGG/5h9WrjgPLFF/a++fr16wsWLGid1RgrkPzF3e1S
Ho9hxpe327t3b4UKFZR2Eh4evstqO8xz56haNWNTbN+e7t4VEiaAF7jJdc61
RQeTK/KXoQD14PIGtl3QkcTExMjISKWf9/Pzi46O1rYo2fjx4/mUo3HjxsYf
fMw1iY8M//DCC8aKInZuSP7NN9+Yaqnxd7uMxWqWEAWrG94I1I30dnPnzg0M
DFSaSvv27c03RtWuXKF69Yy5TevW5PzSCADeqgB3T8e9rGc10PghphvRLdFR
QaaMjIzp06f7+/srHX7Pnj1v3Lih1Zv/9ttvfOIh5063b982/OBVrj0sM6xD
CQszjCPNmtn1tjExMaY5QiZBQUFLliwxbM8arS7B58P+BbzYnTt3BgwYYMp+
5Xw7LS0tm+ffukWPPGLMbeRk/Pp1l0UK4E1qcx31bdHB5FYc22GQz23k/0W5
CD3ZsmVLqVKllJ5f/o9ff9VmRlRiYqLFdRXjO/PTy/+kP/80DiLvv5/DG8rj
0Ysvvmh9+6lIkSKbN28mOSPrrG5pQUQ/aPJRwF3t2rWLrek2KFCgwIoVK+x5
VUICtWplbJa1apFFdUkA0EAXrq8+KDoYB8jdQiP1iJOfDFv2gG6cP3++devW
pm+148aNe/BAg+LRzZs35zOQqKgow78241rCBXrrLeMIEheX3VslJSV1797d
OqspW7bswYMHDamyRf5cwpA1gddKTU2dNGmS6Wpk48aNjx07Zv/Lk5Opc2dj
y6xUiU6dcl6kAF7pBa67XiM6GMfcJxqsHnfkx3C2PBz0IT09febMmaZ5CHXq
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
h++B+vfvn/nLXuRQVpPM7mQZZjcdOoRde8FD3eNGhJqig4FcuUG0h43p09lE
nWfZbazGROWzrYGcq9SlDEui2hM9zeb6TmY3fbaxZey6upmwmgtbB0Xi79y5
IycDX3zxxYgRI1q1alWwYMGsMgFFYGBg1apVIyIi5JTg/fffX7Ro0a+//rpz
584TJ05kX2ZQE3fv3j19+vSuXbvWrl0rJzAffPDBiy++2KVLl+rVq2d1KcYk
JCTkkUceGTZs2OzZszdv3nz79m1nR+vlTp06lXkPNJhde8lVVpMhSZHKH07+
k4n+KABOc4MbERqLDgY0dJ+lHwfZLaFNROuJfme3t+THd2wG71w251b5l7Xs
CetZprSP6Cyb8+NGNnLNeLDoYKxkZGTImcPPP/88ZcqUyMjImjVryplM9gkD
LyAgICwsrE6dOm3btu3du7ec/IwcOTKKiY6OjmE+//zzuXPnzps3L5b56quv
5P+dM2eO8tNJkyYpz3/ppZfkEe2pp55q165d3bp1S5cundtI5ARMfrl83BUr
Vsh5l26vNXmwH3/8MfOGVKgk/WJ3VpMkSX2Uv2OjRo28ZPYXeKnz3IjQSnQw
AI75k2vGz4gOxg5yPnDhwoVt27YtWrRo8uTJQ4YM6dChQ6VKlazXlQvh5+dX
vnx5Ofn5z3/+I+cw33777ZYtW86dO4cizDohZ8imv5UkRUlSQk5ZzWZJMhZ2
Llu2rNz2RH8CAGf6lxsRHhMdDIBjDnDN+AnRweRBamrq2bNnd+zYsWrVqm++
+eajjz56++23X3jhhd69e7dt27ZOnTphYWF5TH7kpKVkyZK1atVq3bp1z549
hw4d+uabb06fPn3BggW//PLL9u3bT506hco8+jd37lyuJRSTpImStN8qn7kj
SUslybxXbLNmzRwroC2ntHv3Gh6miTnx8fTZZzRmDI0aRTExhN3VQEf+5kaE
nqKDAXDMca4ZR4gOxiUePHhwizl37pycipw4cWIvI2cm27ZtU/772LFj8o/O
nDmjPPPevXuiowYtbdmyxWIDdEkqKUlNJKmHJLVj+3eb7zP6+/u/9NJLDreB
27eNyVL58pSeTu+/TwEBlteF2rShuDhtPyKAQ3ZwI0I/0cEAOOYi14wfFR0M
gKukpqZ++eWX2VQbkNjMqKeffvro0TyVxeQTm1dfzfKeV0gIrV2r1YcDcNQG
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
   "], {{0, 0}, {755., 893.}}, {
   0, 255},
   ColorFunction->RGBColor],
  ImageSize->300,
  PlotRange->{{0, 755.}, {0, 893.}}]], "Output",
 CellChangeTimes->{{3.819718038584298*^9, 3.819718043647352*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"01d4280e-4243-4170-bb8b-6baaefa1cf03"]
}, Open  ]]
},
WindowSize->{720, 847},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/wolfram-notebooks-\
kosnitas-theorem.nb"},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (May 11, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All], ShowCellBracket -> Automatic], 
   Cell[
    StyleData["Title"], FontFamily -> "Source Sans Pro", FontSize -> 45, 
    FontWeight -> "SemiBold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    RGBColor[0., 0., 0.]], 
   Cell[
    StyleData["Subtitle"]], 
   Cell[
    StyleData["Section"], ShowGroupOpener -> "Inline", FontFamily -> 
    "Source Sans Pro", FontSize -> 24, FontWeight -> "Regular", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    RGBColor[0., 0., 0.]], 
   Cell[
    StyleData["Subsection"], ShowGroupOpener -> "Inline", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    FontColor -> 
    RGBColor[0.3495994506752117, 0.349584191653315, 0.349584191653315]], 
   Cell[
    StyleData["Subsubsection"], ShowGroupOpener -> "Inline", FontFamily -> 
    Automatic, FontSize -> 18, FontWeight -> "Regular", FontSlant -> "Italic",
     FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {
     "FontPostScriptName" -> "SourceSansPro-LightItalic"}, FontColor -> 
    RGBColor[0., 0., 0.]], 
   Cell[
    StyleData["Text"], TextJustification -> 1., FontFamily -> 
    "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, Background -> 
    None], 
   Cell[
    StyleData["Input"], FontFamily -> "Source Code Pro", FontSize -> 13, 
    FontWeight -> "Regular", FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}]}, Visible -> 
  False, FrontEndVersion -> "12.3 for Mac OS X x86 (64-bit) (May 11, 2021)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e5d33a92-bfab-4126-9c50-f3e9cffc5038"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 709, 15, 39, "Input",ExpressionUUID->"c3f2bed5-0eaf-4bd0-bd85-5abe645d7051"],
Cell[1292, 39, 510, 9, 44, "Output",ExpressionUUID->"f2ff604f-c6b9-432d-a156-fd5724fd1999"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1839, 53, 880, 19, 39, "Input",ExpressionUUID->"6369dd99-c852-418b-bf65-ba76750f2fd8"],
Cell[2722, 74, 188500, 3709, 524, "Output",ExpressionUUID->"51fae211-df86-430d-9d78-4b738172f424"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191259, 3788, 486, 12, 52, "Input",ExpressionUUID->"ea799ef3-67e3-4c90-9305-7352e8d32bb1"],
Cell[191748, 3802, 94448, 1551, 372, "Output",ExpressionUUID->"01d4280e-4243-4170-bb8b-6baaefa1cf03"]
}, Open  ]]
}
]
*)

