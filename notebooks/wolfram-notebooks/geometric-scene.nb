(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    598925,      12894]
NotebookOptionsPosition[    595198,      12810]
NotebookOutlinePosition[    597894,      12875]
CellTagsIndexPosition[    597851,      12872]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  InterpretationBox[
   DynamicModuleBox[{Typeset`open = False}, 
    TemplateBox[{"Expression", 
      RowBox[{"Composition", "[", 
        DynamicBox[
         FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
      GridBox[{{
         RowBox[{
           TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["1688", "IconizedItem"]}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
      Dynamic[Typeset`open]},
     "IconizedObject"]],
   Composition[CellPrint[{
       ExpressionCell[
        Row[{
          Style["Last updated:   ", "Text", Gray], Today}], "Output", 
        CellMargins -> {{25, Automatic}, {20, 20}}, ShowCellBracket -> 
        False]}]; 
    With[{$CellContext`nbStyle = Import["https://wolfr.am/U7U6ZSd2"]}, 
      SetOptions[
       EvaluationNotebook[], StyleDefinitions -> $CellContext`nbStyle]]; 
    If[$FrontEnd =!= $Failed, SelectionMove[
        EvaluationNotebook[], All, GeneratedCell]; 
      FrontEndTokenExecute["SelectionCloseUnselectedCells"]]; Null],
   SelectWithContents->True,
   Selectable->False], ";"}]], "Input",
 CellChangeTimes->{{3.825167907471014*^9, 3.825167907654261*^9}, {
   3.825168799673821*^9, 3.8251688186996527`*^9}, 3.8251711635133467`*^9, {
   3.825171360541849*^9, 3.8251714188047667`*^9}, {3.825171576889386*^9, 
   3.825171577670672*^9}, {3.825171660513818*^9, 3.825171696545291*^9}, {
   3.825171815086478*^9, 3.825171840497428*^9}, {3.825172027248857*^9, 
   3.825172028004221*^9}, 3.8251721512859993`*^9, {3.8251723335597277`*^9, 
   3.82517237109969*^9}, {3.8251724569579477`*^9, 3.8251724612211657`*^9}, {
   3.851105447210253*^9, 3.85110546298081*^9}},
 CellLabel->
  "In[758]:=",ExpressionUUID->"4baaa273-9998-48a0-a5b9-9955beb8bbd3"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"Last updated:   \"", "Text", 
    GrayLevel[0.5], StripOnInput -> False], 
   TemplateBox[{
     RowBox[{"\"Thu 13 Jan 2022\""}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2022", ",", "1", ",", "13"}], "}"}], ",", "\"Day\""}], 
       "]"}]}, "DateObject", Editable -> False]},
  "RowDefault"]], "Output",
 ShowCellBracket->False,
 CellMargins->{{25, Automatic}, {20, 20}},
 CellChangeTimes->{
  3.851105464784519*^9},ExpressionUUID->"e40de494-b422-4c69-80a3-\
149dad48d6b6"]
}, {2}]],

Cell[CellGroupData[{

Cell["Create a geometric scene", "Section",
 CellChangeTimes->{{3.8180475158459663`*^9, 
  3.818047531125683*^9}},ExpressionUUID->"8e07a1d0-4fcc-42b0-bf51-\
bc258b0a2ba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gs", "=", 
  RowBox[{"RandomInstance", "[", 
   RowBox[{
    RowBox[{"GeometricScene", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"geometric", " ", "assertions"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"List", "ListIcon", 
          GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["List", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["7", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["4648", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       {$CellContext`p1 == Style[
          Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
          Opacity[0.5, 
           RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
          Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
          Opacity[0.5, 
           RGBColor[242/255, 148/255, 148/255]]], 
        PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
          "Counterclockwise"] == 45 Degree, 
        PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
          "Counterclockwise"] == 90 Degree, 
        Style[
         CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
         RGBColor[16/51, 176/255, 16/51]], 
        GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
        GeometricAssertion[{
          Style[
           InfiniteLine[{$CellContext`a, $CellContext`d}], 
           RGBColor[253/255, 116/255, 0]], 
          Style[
           InfiniteLine[{$CellContext`e, $CellContext`c}], 
           RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]},
       SelectWithContents->True,
       Selectable->False]}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"RandomSeeding", "\[Rule]", "123"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.818045712546876*^9, 3.8180457961243668`*^9}, {
   3.818045828532867*^9, 3.818045836246224*^9}, {3.818045897415002*^9, 
   3.818045898665456*^9}, {3.8180459535868*^9, 3.8180459667497807`*^9}, {
   3.818046012464181*^9, 3.818046096256695*^9}, {3.8180461613183403`*^9, 
   3.818046207561245*^9}, {3.8180462791604557`*^9, 3.818046337256544*^9}, {
   3.818046435005867*^9, 3.8180464633894663`*^9}, {3.818046522208797*^9, 
   3.818046534787896*^9}, {3.818046579332179*^9, 3.8180465894313297`*^9}, {
   3.818046627863996*^9, 3.818046720424184*^9}, {3.818046767752808*^9, 
   3.8180468084831743`*^9}, {3.818046911990828*^9, 3.818046912399014*^9}, {
   3.818047348268003*^9, 3.818047358590432*^9}, {3.8180479769962482`*^9, 
   3.818047993903255*^9}, 3.8192074394271383`*^9, {3.8192081938492813`*^9, 
   3.819208282694111*^9}, {3.819208332486987*^9, 3.819208952728677*^9}, {
   3.8192089932475224`*^9, 3.8192091741567717`*^9}, 3.819209397713811*^9, {
   3.819209428925825*^9, 3.8192094349207907`*^9}, {3.819209507886492*^9, 
   3.819209508238331*^9}, {3.819209554150778*^9, 3.819209589835124*^9}, 
   3.819209636363525*^9, 3.8192096678238077`*^9, {3.8192097916636*^9, 
   3.819209815685101*^9}, 3.819209903219364*^9, 3.8192099644242563`*^9, 
   3.81921000904948*^9, {3.819210123712441*^9, 3.819210179984831*^9}, 
   3.819210272475204*^9, {3.8192111926509523`*^9, 3.819211316208115*^9}, {
   3.819211353105382*^9, 3.819211440899001*^9}, 3.819211702470463*^9, {
   3.819211759929034*^9, 3.8192117624285793`*^9}, {3.8192163400701313`*^9, 
   3.819216356680476*^9}, {3.848261073065653*^9, 3.848261082969069*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a87847e3-d2e3-4c86-9e6d-091aa60bc89b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 0, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {
     C["GeometricPoint"][
      C["Unspecified"]["ref", "{1, 5, 1, 0}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {$CellContext`a, \
$CellContext`b, $CellContext`c, $CellContext`d, $CellContext`e}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var2314}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][
      C["Unspecified"]["ref", "{1, 5, 1, 0}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {
     C["GeometricQuantity"][
      C["Unspecified"][
      "radius", 
       "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var2302, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2303}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2304, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2305}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2306, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2307}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2308, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2309}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2310, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2311}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2312, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2313}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var2314}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-1.3225160404019438`, -0.6320233291507121}, {-1.0807299009386648`, \
-1.8299307467580948`}, {-0.1246086227945616, -0.39023718968743326`}, {
    0.3589636561319966, -2.786052024902198}, {1.4699982506662943`, 
    0.8545461777555546}, {0.5952111342824494, -0.8683159044148253}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{
    1.9322298112451133`}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3, 4, 5}},
     PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{6}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{1}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5}, 
    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306) + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2305) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307))^2 + ((((
              PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var2306)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var2307)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2304) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2306) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2307))) ((
             PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2308)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2309)^2)^
          Rational[
           1, 2] - (((PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2304)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305)^2)^
          Rational[
           1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2306)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2307)^2)^
          Rational[1, 2]) ((-PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2306) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2308) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2307) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2309)))^2 + ((((
             PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2304) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2306) + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2307)) ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var2306)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var2307)^2)^
           Rational[
            1, 2]) ((PlaneGeometry`GeometrySceneDrawer`Dump`var2306 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2308)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2309)^2)^
          Rational[
           1, 2] - (((-PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2304)^2 + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305)^2)^
          Rational[
           1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2306)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2307)^2)^
          Rational[1, 2]) ((PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2306) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2306 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2308) + (
           PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2307) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2309)))^2 + (((-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2306)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307)^2) ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var2306 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2308)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2309)^2) - 
        2 ((PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2306) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2306 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2308) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2307 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2309))^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308) (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2310) + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2309) (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2311))^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2312)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2312)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2313)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2313)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2312)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2312)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2313)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2309 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2313)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2312)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2310 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2312)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2313)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2311 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2313)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2312)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2313)^2 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2314^2)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2315)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2305) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2316)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2317)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2309) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2318)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2310) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2319)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2311) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2320)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2321)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2309) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2322)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2310) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2323)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2311) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2324)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2308 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2310) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2325)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2309 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2311) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2326)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2327)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2305) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2328)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2329)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2330)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2331)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2332)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2333)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2334)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2335)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2309) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2336)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2306 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2337)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2309) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2338)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2306) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2304) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2307)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2339)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2306 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2308) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2306) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2309)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2340)^2, {
      Rational[1, 
          2] ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2304 (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307) - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2302 (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307)) >= 
       0, (((-PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2306)^2 + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2307)^2)^
          Rational[-1, 
            2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2306 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2308)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2309)^2)^
          Rational[-1, 2]) ((PlaneGeometry`GeometrySceneDrawer`Dump`var2304 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2306) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2306 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2308) + (
           PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2307) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2309)) >= 
       0, (Rational[-1, 2] 
         2^Rational[-1, 2]) ((PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2307) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2304 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2309) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2306 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2309)) >= 0, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2306 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2302 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2306 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2302 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2306 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2302 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2308 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2309) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2309))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2308 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2309) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2309))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2305 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2308 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2309) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2309))^2 >= 
       0.1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var2302 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2303 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2309)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var2302 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2304)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2303 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2305)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var2304 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2306)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2305 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var2306 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2308)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2307 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2309)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var2306 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2310)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2307 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2311)^2 >= 0.03, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2314 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2314 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2314 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2314 >= 0.5}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var2302, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2303, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2304, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2305, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2306, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2307, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2308, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2309, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2310, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2311, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2312, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2313, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2314}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var2315, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2316, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2317, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2318, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2319, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2320, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2321, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2322, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2323, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2324, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2325, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2326, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2327, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2328, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2329, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2330, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2331, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2332, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2333, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2334, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2335, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2336, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2337, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2338, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2339, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2340}, {{}, {}, {}, {}, {}, \
{}, {}, {}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2276] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2277] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2288] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2289] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2290] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2291] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2292] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2293] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2294] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2295] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][
         2]))^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1]) (-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1]) + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2]) (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var2300] ((-(-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2])) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + (-
           C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2])))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2278] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2279] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2282] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2283] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2296] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2297] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2298] (
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2299] (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`d][
         2]))^2 + ((((C["GeometricPoint"][$CellContext`b][1] - C[
             "GeometricPoint"][$CellContext`c][1])^2 + (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`b][1]) (-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`c][1]) + (-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`b][2]) (-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`c][2]))) ((
            C["GeometricPoint"][$CellContext`b][1] - C[
            "GeometricPoint"][$CellContext`d][1])^2 + (
            C["GeometricPoint"][$CellContext`b][2] - C[
            "GeometricPoint"][$CellContext`d][2])^2)^
         Rational[
          1, 2] - (((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`b][1])^2 + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`b][2])^2)^
         Rational[
          1, 2] ((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[1, 2]) ((-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`d][2])))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var2301] ((-(-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])) (-
           C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) (-
           C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][
           2])))^2 + ((((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`b][
            1]) (-C["GeometricPoint"][$CellContext`b][1] + 
            C["GeometricPoint"][$CellContext`c][1]) + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`b][
            2]) (-C["GeometricPoint"][$CellContext`b][2] + 
            C["GeometricPoint"][$CellContext`c][
             2])) ((-C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1])^2 + (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])^2)^
          Rational[
           1, 2]) ((C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`d][1])^2 + (
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`d][2])^2)^
         Rational[
          1, 2] - (((-C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`b][1])^2 + (-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`b][2])^2)^
         Rational[
          1, 2] ((C["GeometricPoint"][$CellContext`b][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`b][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[1, 2]) ((C["GeometricPoint"][$CellContext`b][1] - C[
          "GeometricPoint"][$CellContext`c][
          1]) (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][
          2]) (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][
           2])))^2 + (((-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])^2) ((
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2) - 
       2 ((C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][
           1]) (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][
           2]) (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2)^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2280] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2281] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`e][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2284] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2285] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`e][
         2]))^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`d][1]) (
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][
         1]) + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`d][2]) (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2286] (
         C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2287] (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`e][2]))^2 + (-C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]^2 + (-
          C["GeometricPoint"][$CellContext`a][1] + C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2)^2 + ((-
          C["GeometricPoint"][$CellContext`a][1] + C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1])^2 - (-
         C["GeometricPoint"][$CellContext`b][1] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         1])^2 + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2 - (-
         C["GeometricPoint"][$CellContext`b][2] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         2])^2)^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1])^2 - (-
         C["GeometricPoint"][$CellContext`d][1] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         1])^2 + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2 - (-
         C["GeometricPoint"][$CellContext`d][2] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         2])^2)^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1])^2 - (-
         C["GeometricPoint"][$CellContext`e][1] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         1])^2 + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2 - (-
         C["GeometricPoint"][$CellContext`e][2] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2)^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
     Rational[1, 
         2] ((-(-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2])) 
         C["GeometricPoint"][$CellContext`c][1] - 
        C["GeometricPoint"][$CellContext`b][1] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2]) - 
        C["GeometricPoint"][$CellContext`a][
         1] (-C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2])) >= 
      0, (((-C["GeometricPoint"][$CellContext`b][1] + 
            C["GeometricPoint"][$CellContext`c][1])^2 + (-
             C["GeometricPoint"][$CellContext`b][2] + 
            C["GeometricPoint"][$CellContext`c][2])^2)^
         Rational[-1, 
           2] ((C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`d][1])^2 + (
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`d][2])^2)^
         Rational[-1, 2]) ((C["GeometricPoint"][$CellContext`b][1] - C[
          "GeometricPoint"][$CellContext`c][
          1]) (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][
          2]) (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][2])) >= 
      0, (Rational[-1, 2] 
        2^Rational[-1, 2]) ((C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][2]) 
         C["GeometricPoint"][$CellContext`d][1] + 
        C["GeometricPoint"][$CellContext`b][1] (
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`d][2]) + 
        C["GeometricPoint"][$CellContext`c][
          1] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`d][2])) >= 0, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[
        1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) 
          C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`b][1] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]) + 
         C["GeometricPoint"][$CellContext`c][
           1] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) 
          C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`b][1] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]) + 
         C["GeometricPoint"][$CellContext`c][
           1] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) 
          C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`b][1] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]) + 
         C["GeometricPoint"][$CellContext`c][
           1] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2 >= 
      0.1, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`d][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`d][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1])^2 + (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1])^2 + (-
          C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`d][1])^2 + (-
          C["GeometricPoint"][$CellContext`c][2] + 
         C["GeometricPoint"][$CellContext`d][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][1])^2 + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2])^2 >= 0.03, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] >= 
      0.5}}, PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][$CellContext`a][1], 
       C["GeometricPoint"][$CellContext`a][2], 
       C["GeometricPoint"][$CellContext`b][1], 
       C["GeometricPoint"][$CellContext`b][2], 
       C["GeometricPoint"][$CellContext`c][1], 
       C["GeometricPoint"][$CellContext`c][2], 
       C["GeometricPoint"][$CellContext`d][1], 
       C["GeometricPoint"][$CellContext`d][2], 
       C["GeometricPoint"][$CellContext`e][1], 
       C["GeometricPoint"][$CellContext`e][2], 
       C["GeometricPoint"][
        C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1], 
       C["GeometricPoint"][
        C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2276], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2277], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2278], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2279], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2280], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2281], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2282], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2283], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2284], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2285], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2286], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2287], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2288], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2289], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2290], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2291], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2292], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2293], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2294], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2295], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2296], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2297], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2298], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2299], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2300], 
       "notVar"[
       PlaneGeometry`GeometrySceneDrawer`Dump`var2301]}, {{}, {}, {}, {}, {}, \
{}, {}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1]) (-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1]) + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2]) (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2]) == 
      0, ((-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1])^2 + (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2])^2) ((
          C["GeometricPoint"][$CellContext`c][1] - C[
          "GeometricPoint"][$CellContext`d][1])^2 + (
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`d][2])^2) == 
      2 ((C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][
           1]) (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][
           2]) (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2, (((
            C["GeometricPoint"][$CellContext`b][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`b][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[
          1, 2] ((-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]) (-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`c][1]) + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]) (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))) ((
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2)^
        Rational[
         1, 2] == (((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`b][1])^2 + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`b][2])^2)^
         Rational[
          1, 2] ((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[1, 2]) ((-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`d][2])), (((
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][
           1]) (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][
           2]) (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][
            2])) ((-C["GeometricPoint"][$CellContext`b][1] + 
            C["GeometricPoint"][$CellContext`c][1])^2 + (-
             C["GeometricPoint"][$CellContext`b][2] + 
            C["GeometricPoint"][$CellContext`c][2])^2)^
         Rational[
          1, 2]) ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2)^
        Rational[
         1, 2] == (((-C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`b][1])^2 + (-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`b][2])^2)^
         Rational[
          1, 2] ((C["GeometricPoint"][$CellContext`b][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`b][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[1, 2]) ((C["GeometricPoint"][$CellContext`b][1] - C[
          "GeometricPoint"][$CellContext`c][
          1]) (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][
          2]) (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][2])), (-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`d][1]) (
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][
         1]) + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`d][2]) (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2]) == 0}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 0, {{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}, {0.3589636561319966, -2.786052024902198}, {
     1.4699982506662943`, 0.8545461777555546}, {
     0.5952111342824494, -0.8683159044148253}}}, {{
     1.9322298112451133`}}, {{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}, {0.3589636561319966, -2.786052024902198}, {
     1.4699982506662943`, 0.8545461777555546}}}, {{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}}, {}}}, {{{
       C["GeometricPoint"][$CellContext`a] -> {-1.3225160404019438`, \
-0.6320233291507121}, 
        C["GeometricPoint"][$CellContext`b] -> {-1.0807299009386648`, \
-1.8299307467580948`}, 
        C["GeometricPoint"][$CellContext`c] -> {-0.1246086227945616, \
-0.39023718968743326`}, 
        C["GeometricPoint"][$CellContext`d] -> {
         0.3589636561319966, -2.786052024902198}, 
        C["GeometricPoint"][$CellContext`e] -> {1.4699982506662943`, 
         0.8545461777555546}, C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
         0.5952111342824494, -0.8683159044148253}}, {C["GeometricQuantity"][
          C["Unspecified"][
          "radius", 
           "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
        1.9322298112451133`}}}, {{{
       False, False, False, False, False}}}, {{{}}}, False, 
     True, {}, {}, {{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}, {0.3589636561319966, -2.786052024902198}, {
     1.4699982506662943`, 0.8545461777555546}}}, {{{-2.0234646392116864`, 
     3.2138869077765855`}, {-3.486991677908961, 1.7503598690793107`}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-2.0234646392116864`, 3.2138869077765855`}, {-3.486991677908961, 
    1.7503598690793107`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-1.3225160404019438`, -0.6320233291507121}, {-1.0807299009386648`, \
-1.8299307467580948`}, {-0.1246086227945616, -0.39023718968743326`}, {
    0.3589636561319966, -2.786052024902198}, {1.4699982506662943`, 
    0.8545461777555546}}}, PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-1.3225160404019438`, -0.6320233291507121}, {-1.0807299009386648`, \
-1.8299307467580948`}, {-0.1246086227945616, -0.39023718968743326`}, {
    0.3589636561319966, -2.786052024902198}, {1.4699982506662943`, 
    0.8545461777555546}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][$CellContext`a], 
      C["GeometricPoint"][$CellContext`b], 
      C["GeometricPoint"][$CellContext`c], 
      C["GeometricPoint"][$CellContext`d], 
      C["GeometricPoint"][$CellContext`e], 
      C["GeometricPoint"][
       C["Unspecified"]["ref", "{1, 5, 1, 0}"]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{
      C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{
      AbsoluteThickness[2], 
      GrayLevel[0.7], 
      EdgeForm[{
        GrayLevel[0.7], 
        Thickness[Large]}], {{
        Opacity[0.2], 
        Opacity[0.5, 
         RGBColor[
          Rational[52, 85], 
          Rational[11, 17], 
          Rational[166, 255]]], 
        Tooltip[
         Polygon[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
        Opacity[0.2], 
        Opacity[0.5, 
         RGBColor[
          Rational[242, 255], 
          Rational[148, 255], 
          Rational[148, 255]]], 
        Tooltip[
         Polygon[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
       PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
          PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
        45 Degree], 
       PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
          PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
        90 Degree], {
        Dashing[{Small, Small}], 
        CapForm["None"], 
        Line[{
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`c]}]}, {
        Dashing[{Small, Small}], 
        CapForm["None"], 
        Line[{
          C["GeometricPoint"][$CellContext`c], 
          C["GeometricPoint"][$CellContext`d]}]}, {
        Dashing[{Small, Small}], 
        CapForm["None"], 
        Line[{
          C["GeometricPoint"][$CellContext`b], 
          C["GeometricPoint"][$CellContext`a]}]}, {
        Dashing[{Small, Small}], 
        CapForm["None"], 
        Line[{
          C["GeometricPoint"][$CellContext`a], 
          C["GeometricPoint"][$CellContext`c]}]}, {
        RGBColor[
         Rational[16, 51], 
         Rational[176, 255], 
         Rational[16, 51]], 
        Circle[
         C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
         C["GeometricQuantity"][
          C["Unspecified"][
          "radius", 
           "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
        RGBColor[
         Rational[253, 255], 
         Rational[116, 255], 0], 
        InfiniteLine[
         C[
         "GeometricPoint"][$CellContext`a], {-
           C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`d][1], -
           C["GeometricPoint"][$CellContext`a][2] + 
          C["GeometricPoint"][$CellContext`d][2]}]}, {
        RGBColor[
         Rational[107, 255], 
         Rational[31, 255], 
         Rational[59, 85]], 
        InfiniteLine[
         C["GeometricPoint"][$CellContext`e], {
         C["GeometricPoint"][$CellContext`c][1] - C[
          "GeometricPoint"][$CellContext`e][1], 
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`e][2]}]}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}, 
        Inset[
         Style[" a ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`a]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`a]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}, 
        Inset[
         Style[" b ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`b]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`b]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}, 
        Inset[
         Style[" c ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`c]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`c]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`d]]}, 
        Inset[
         Style[" d ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`d]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`d]]}}, {{
         Hue[0.58, 1, 1, 1], 
         AbsolutePointSize[17], 
         Point[
          C["GeometricPoint"][$CellContext`e]]}, 
        Inset[
         Style[" e ", 
          RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
         C["GeometricPoint"][$CellContext`e]], {
         AbsolutePointSize[17], 
         Opacity[0], 
         Point[
          C["GeometricPoint"][$CellContext`e]]}}}, {}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][$CellContext`a][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2302}, {
      C["GeometricPoint"][$CellContext`a][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2303}, {
      C["GeometricPoint"][$CellContext`b][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2304}, {
      C["GeometricPoint"][$CellContext`b][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2305}, {
      C["GeometricPoint"][$CellContext`c][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2306}, {
      C["GeometricPoint"][$CellContext`c][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2307}, {
      C["GeometricPoint"][$CellContext`d][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2308}, {
      C["GeometricPoint"][$CellContext`d][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2309}, {
      C["GeometricPoint"][$CellContext`e][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2310}, {
      C["GeometricPoint"][$CellContext`e][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2311}, {
      C["GeometricPoint"][
       C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2312}, {
      C["GeometricPoint"][
       C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2313}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2314}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2276], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2315}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2277], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2316}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2278], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2317}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2279], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2318}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2280], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2319}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2281], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2320}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2282], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2321}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2283], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2322}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2284], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2323}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2285], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2324}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2286], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2325}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2287], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2326}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2288], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2327}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2289], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2328}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2290], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2329}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2291], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2330}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2292], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2331}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2293], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2332}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2294], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2333}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2295], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2334}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2296], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2335}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2297], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2336}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2298], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2337}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2299], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2338}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2300], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2339}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2301], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2340}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var2302, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2303}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var2304, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2305}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var2306, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2307}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var2308, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2309}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var2310, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2311}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var2312, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2313}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var2314}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = <|{
      PlaneGeometry`GeometrySceneDrawer`Dump`var2302, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2303} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2304, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2305} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2306, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2307} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2308, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2309} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2310, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2311} -> 1|>, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = <|{
      PlaneGeometry`GeometrySceneDrawer`Dump`var2302, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2303} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2304, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2305} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var2306, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2307} -> 
     3, {PlaneGeometry`GeometrySceneDrawer`Dump`var2308, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2309} -> 
     4, {PlaneGeometry`GeometrySceneDrawer`Dump`var2310, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2311} -> 
     5, {PlaneGeometry`GeometrySceneDrawer`Dump`var2312, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2313} -> 6|>, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = <|
    PlaneGeometry`GeometrySceneDrawer`Dump`var2314 -> 1|>, 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][$CellContext`a] -> {-1.3225160404019438`, \
-0.6320233291507121}, 
       C["GeometricPoint"][$CellContext`b] -> {-1.0807299009386648`, \
-1.8299307467580948`}, 
       C["GeometricPoint"][$CellContext`c] -> {-0.1246086227945616, \
-0.39023718968743326`}, 
       C["GeometricPoint"][$CellContext`d] -> {
        0.3589636561319966, -2.786052024902198}, 
       C["GeometricPoint"][$CellContext`e] -> {1.4699982506662943`, 
        0.8545461777555546}, C["GeometricPoint"][
         C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
        0.5952111342824494, -0.8683159044148253}}, {C["GeometricQuantity"][
         C["Unspecified"][
         "radius", 
          "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
       1.9322298112451133`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
    PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{$CellContext`p1 == Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Opacity[0.5, 
                   RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                  
                  Opacity[0.5, 
                   RGBColor[242/255, 148/255, 148/255]]], 
                PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
                  "Counterclockwise"] == 45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
                  "Counterclockwise"] == 90 Degree, 
                Style[
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                 RGBColor[16/51, 176/255, 16/51]], 
                
                GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                 "Similar"], 
                GeometricAssertion[{
                  Style[
                   InfiniteLine[{$CellContext`a, $CellContext`d}], 
                   RGBColor[253/255, 116/255, 0]], 
                  Style[
                   InfiniteLine[{$CellContext`e, $CellContext`c}], 
                   RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
              Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{$CellContext`p1 == Style[
               Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
               Opacity[0.5, 
                RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
               Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
               Opacity[0.5, 
                RGBColor[242/255, 148/255, 148/255]]], 
             PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
               "Counterclockwise"] == 45 Degree, 
             PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
               "Counterclockwise"] == 90 Degree, 
             Style[
              
              CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
              RGBColor[16/51, 176/255, 16/51]], 
             
             GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
              "Similar"], 
             GeometricAssertion[{
               Style[
                InfiniteLine[{$CellContext`a, $CellContext`d}], 
                RGBColor[253/255, 116/255, 0]], 
               Style[
                InfiniteLine[{$CellContext`e, $CellContext`c}], 
                RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]], 
          If[
           And[
           False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             Hold[{}], {1}, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{$CellContext`p1 == Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Opacity[0.5, 
               RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
              Opacity[0.5, 
               RGBColor[242/255, 148/255, 148/255]]], 
            PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
              "Counterclockwise"] == 45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
              "Counterclockwise"] == 90 Degree, 
            Style[
             
             CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
             RGBColor[16/51, 176/255, 16/51]], 
            GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
            GeometricAssertion[{
              Style[
               InfiniteLine[{$CellContext`a, $CellContext`d}], 
               RGBColor[253/255, 116/255, 0]], 
              Style[
               InfiniteLine[{$CellContext`e, $CellContext`c}], 
               RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
          Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{$CellContext`p1 == Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Opacity[0.5, 
               RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
              Opacity[0.5, 
               RGBColor[242/255, 148/255, 148/255]]], 
            PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
              "Counterclockwise"] == 45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
              "Counterclockwise"] == 90 Degree, 
            Style[
             
             CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
             RGBColor[16/51, 176/255, 16/51]], 
            GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
            GeometricAssertion[{
              Style[
               InfiniteLine[{$CellContext`a, $CellContext`d}], 
               RGBColor[253/255, 116/255, 0]], 
              Style[
               InfiniteLine[{$CellContext`e, $CellContext`c}], 
               RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
          Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
      "Paste Parameters" :> CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{$CellContext`p1 == Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Opacity[0.5, 
               RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
              Opacity[0.5, 
               RGBColor[242/255, 148/255, 148/255]]], 
            PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
              "Counterclockwise"] == 45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
              "Counterclockwise"] == 90 Degree, 
            Style[
             
             CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
             RGBColor[16/51, 176/255, 16/51]], 
            GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
            GeometricAssertion[{
              Style[
               InfiniteLine[{$CellContext`a, $CellContext`d}], 
               RGBColor[253/255, 116/255, 0]], 
              Style[
               InfiniteLine[{$CellContext`e, $CellContext`c}], 
               RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]], 
         "Input"]], "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
                0.3589636561319966, -2.786052024902198}, $CellContext`e -> {
                1.4699982506662943`, 0.8545461777555546}, 
               C["GeometricPoint"][
                 C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
                0.5952111342824494, -0.8683159044148253}}, {
              C["GeometricQuantity"][
                 C["Unspecified"][
                 "radius", 
                  "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
               1.9322298112451133`}}}, 
            
            First[{{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
                 0.3589636561319966, -2.786052024902198}, $CellContext`e -> {
                 1.4699982506662943`, 0.8545461777555546}, C["GeometricPoint"][
                  C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
                 0.5952111342824494, -0.8683159044148253}}, {
               C["GeometricQuantity"][
                  C["Unspecified"][
                  "radius", 
                   "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
                1.9322298112451133`}}}]], 
           Hold[{$CellContext`p1 == Style[
               Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
               Opacity[0.5, 
                RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
               Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
               Opacity[0.5, 
                RGBColor[242/255, 148/255, 148/255]]], 
             PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
               "Counterclockwise"] == 45 Degree, 
             PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
               "Counterclockwise"] == 90 Degree, 
             Style[
              
              CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
              RGBColor[16/51, 176/255, 16/51]], 
             
             GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
              "Similar"], 
             GeometricAssertion[{
               Style[
                InfiniteLine[{$CellContext`a, $CellContext`d}], 
                RGBColor[253/255, 116/255, 0]], 
               Style[
                InfiniteLine[{$CellContext`e, $CellContext`c}], 
                RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]]], 
         "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{$CellContext`p1 == Style[
                    
                    Triangle[{$CellContext`a, $CellContext`b, \
$CellContext`c}], 
                    Opacity[0.5, 
                    RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == 
                    Style[
                    
                    Triangle[{$CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    Opacity[0.5, 
                    RGBColor[242/255, 148/255, 148/255]]], 
                    PlanarAngle[{$CellContext`b, $CellContext`c, \
$CellContext`d}, "Counterclockwise"] == 45 Degree, 
                    PlanarAngle[{$CellContext`b, $CellContext`a, \
$CellContext`c}, "Counterclockwise"] == 90 Degree, 
                    Style[
                    
                    CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                    RGBColor[16/51, 176/255, 16/51]], 
                    
                    GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                    "Similar"], 
                    GeometricAssertion[{
                    Style[
                    InfiniteLine[{$CellContext`a, $CellContext`d}], 
                    RGBColor[253/255, 116/255, 0]], 
                    Style[
                    InfiniteLine[{$CellContext`e, $CellContext`c}], 
                    RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
                  Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{$CellContext`p1 == Style[
                   Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                   Opacity[0.5, 
                    RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == 
                 Style[
                   Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                   Opacity[0.5, 
                    RGBColor[242/255, 148/255, 148/255]]], 
                 PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d},
                    "Counterclockwise"] == 45 Degree, 
                 PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c},
                    "Counterclockwise"] == 90 Degree, 
                 Style[
                  
                  CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                  RGBColor[16/51, 176/255, 16/51]], 
                 
                 GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                  "Similar"], 
                 GeometricAssertion[{
                   Style[
                    InfiniteLine[{$CellContext`a, $CellContext`d}], 
                    RGBColor[253/255, 116/255, 0]], 
                   Style[
                    InfiniteLine[{$CellContext`e, $CellContext`c}], 
                    RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]], 
              If[
               And[
               False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 Hold[{}], {1}, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{$CellContext`p1 == Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Opacity[0.5, 
                   RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                  
                  Opacity[0.5, 
                   RGBColor[242/255, 148/255, 148/255]]], 
                PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
                  "Counterclockwise"] == 45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
                  "Counterclockwise"] == 90 Degree, 
                Style[
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                 RGBColor[16/51, 176/255, 16/51]], 
                
                GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                 "Similar"], 
                GeometricAssertion[{
                  Style[
                   InfiniteLine[{$CellContext`a, $CellContext`d}], 
                   RGBColor[253/255, 116/255, 0]], 
                  Style[
                   InfiniteLine[{$CellContext`e, $CellContext`c}], 
                   RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
              Hold[{}]], "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{$CellContext`p1 == Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Opacity[0.5, 
                   RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                  
                  Opacity[0.5, 
                   RGBColor[242/255, 148/255, 148/255]]], 
                PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
                  "Counterclockwise"] == 45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
                  "Counterclockwise"] == 90 Degree, 
                Style[
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                 RGBColor[16/51, 176/255, 16/51]], 
                
                GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                 "Similar"], 
                GeometricAssertion[{
                  Style[
                   InfiniteLine[{$CellContext`a, $CellContext`d}], 
                   RGBColor[253/255, 116/255, 0]], 
                  Style[
                   InfiniteLine[{$CellContext`e, $CellContext`c}], 
                   RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
              Hold[{}]]["AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{$CellContext`p1 == Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Opacity[0.5, 
                   RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                  
                  Opacity[0.5, 
                   RGBColor[242/255, 148/255, 148/255]]], 
                PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
                  "Counterclockwise"] == 45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
                  "Counterclockwise"] == 90 Degree, 
                Style[
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                 RGBColor[16/51, 176/255, 16/51]], 
                
                GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                 "Similar"], 
                GeometricAssertion[{
                  Style[
                   InfiniteLine[{$CellContext`a, $CellContext`d}], 
                   RGBColor[253/255, 116/255, 0]], 
                  Style[
                   InfiniteLine[{$CellContext`e, $CellContext`c}], 
                   RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]], 
             "Input"]], "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{}]], "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
                    0.3589636561319966, -2.786052024902198}, $CellContext`e -> \
{1.4699982506662943`, 0.8545461777555546}, C["GeometricPoint"][
                    C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
                    0.5952111342824494, -0.8683159044148253}}, {
                  C["GeometricQuantity"][
                    C["Unspecified"][
                    "radius", 
                    "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], C[\
\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
                   1.9322298112451133`}}}, 
                
                First[{{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
                    0.3589636561319966, -2.786052024902198}, $CellContext`e -> \
{1.4699982506662943`, 0.8545461777555546}, C["GeometricPoint"][
                    C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
                    0.5952111342824494, -0.8683159044148253}}, {
                   C["GeometricQuantity"][
                    C["Unspecified"][
                    "radius", 
                    "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], C[\
\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
                    1.9322298112451133`}}}]], 
               Hold[{$CellContext`p1 == Style[
                   Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                   Opacity[0.5, 
                    RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == 
                 Style[
                   Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                   Opacity[0.5, 
                    RGBColor[242/255, 148/255, 148/255]]], 
                 PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d},
                    "Counterclockwise"] == 45 Degree, 
                 PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c},
                    "Counterclockwise"] == 90 Degree, 
                 Style[
                  
                  CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                  RGBColor[16/51, 176/255, 16/51]], 
                 
                 GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                  "Similar"], 
                 GeometricAssertion[{
                   Style[
                    InfiniteLine[{$CellContext`a, $CellContext`d}], 
                    RGBColor[253/255, 116/255, 0]], 
                   Style[
                    InfiniteLine[{$CellContext`e, $CellContext`c}], 
                    RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]]], 
             "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[False, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; 
              PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 4]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 5]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
    
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            False, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
    5}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" a ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" b ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" c ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" d ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" e ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          
          Polygon[{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          
          Polygon[{{-1.0807299009386648`, -1.8299307467580948`}, \
{-0.1246086227945616, -0.39023718968743326`}, {
           0.3589636561319966, -2.786052024902198}}], "p2"]}, {{
          Opacity[0], 
          Circle[{-0.1246086227945616, -0.39023718968743326`}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], {{
           Opacity[0], 
           Tooltip[
            Disk[{-0.1246086227945616, -0.39023718968743326`}, 
             Offset[{17, 17}], {-2.157029921127594, -1.3716317577301456`}], 
            TraditionalForm[45 Degree]]}, 
          Circle[{-0.1246086227945616, -0.39023718968743326`}, 
           Offset[{17, 17}], {-2.157029921127594, -1.3716317577301456`}]}}, {{
         
          Opacity[0], 
          Circle[{-1.3225160404019438`, -0.6320233291507121}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{2.3783241167181357`, -11.783190331817478`}, \
{-1.3225160404019438`, -0.6320233291507121}], 
           
           Offset[{14.161514448535613`, -9.404866215099343}, \
{-1.3225160404019438`, -0.6320233291507121}], 
           
           Offset[{11.783190331817478`, 
            2.3783241167181357`}, {-1.3225160404019438`, \
-0.6320233291507121}]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-1.0807299009386648`, -1.8299307467580948`}, \
{-0.1246086227945616, -0.39023718968743326`}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-0.1246086227945616, -0.39023718968743326`}, {
          0.3589636561319966, -2.786052024902198}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-1.0807299009386648`, -1.8299307467580948`}, \
{-1.3225160404019438`, -0.6320233291507121}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-1.3225160404019438`, -0.6320233291507121}, \
{-0.1246086227945616, -0.39023718968743326`}}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[{0.5952111342824494, -0.8683159044148253}, 
          1.9322298112451133`]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[{-1.3225160404019438`, -0.6320233291507121}, {
          1.6814796965339405`, -2.1540286957514856`}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[{1.4699982506662943`, 
          0.8545461777555546}, {-1.5946068734608558`, -1.244783367442988}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-1.3225160404019438`, -0.6320233291507121}]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-1.3225160404019438`, -0.6320233291507121}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-1.3225160404019438`, -0.6320233291507121}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-1.0807299009386648`, -1.8299307467580948`}]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-1.0807299009386648`, -1.8299307467580948`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-1.0807299009386648`, -1.8299307467580948`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.1246086227945616, -0.39023718968743326`}]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.1246086227945616, -0.39023718968743326`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.1246086227945616, -0.39023718968743326`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{0.3589636561319966, -2.786052024902198}]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          0.3589636561319966, -2.786052024902198}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{0.3589636561319966, -2.786052024902198}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{1.4699982506662943`, 0.8545461777555546}]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          1.4699982506662943`, 0.8545461777555546}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{1.4699982506662943`, 0.8545461777555546}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-2.0234646392116864`, 
       3.2138869077765855`}, {-3.486991677908961, 1.7503598690793107`}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[1802545]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{380., {214.634033203125, 220.365966796875}}], True->
        
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {218.634033203125, 224.365966796875}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[False, 50, 0]}]],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{{
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`display$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
             Blank[]]]] :> Dynamic[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
             RepeatedNull[
              Blank[], 1]]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
           PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Text[
             Style[
             PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
             0}], 
            
            Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
               0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1, -0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
               0.25}}]}, "both", 
           PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
           Text[
            Style[
            PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
            0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
      0.3589636561319966, -2.786052024902198}, $CellContext`e -> {
      1.4699982506662943`, 0.8545461777555546}, C["GeometricPoint"][
       C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
      0.5952111342824494, -0.8683159044148253}}, {C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
     1.9322298112451133`}}, {$CellContext`p1 == Style[
      Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
      Opacity[0.5, 
       RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
      Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
      Opacity[0.5, 
       RGBColor[242/255, 148/255, 148/255]]], 
    PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
      "Counterclockwise"] == 45 Degree, 
    PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
      "Counterclockwise"] == 90 Degree, 
    Style[
     CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
     RGBColor[16/51, 176/255, 16/51]], 
    GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
    GeometricAssertion[{
      Style[
       InfiniteLine[{$CellContext`a, $CellContext`d}], 
       RGBColor[253/255, 116/255, 0]], 
      Style[
       InfiniteLine[{$CellContext`e, $CellContext`c}], 
       RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}, {}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.8180457671870823`*^9, 3.8180457971267967`*^9}, {
   3.8180458321112547`*^9, 3.818045846310053*^9}, 3.818045886905122*^9, {
   3.818045957665201*^9, 3.818045967409127*^9}, {3.818046027280555*^9, 
   3.818046096912166*^9}, {3.818046166901231*^9, 3.81804621890335*^9}, {
   3.81804628148556*^9, 3.818046337984049*^9}, {3.81804644234931*^9, 
   3.818046471050268*^9}, {3.818046535519071*^9, 3.818046749313587*^9}, {
   3.818046788381774*^9, 3.818046809407175*^9}, 3.818046913586186*^9, {
   3.818047366049121*^9, 3.8180473774049597`*^9}, 3.818047957198715*^9, {
   3.818048026401873*^9, 3.818048053972777*^9}, {3.818112583101219*^9, 
   3.8181126082395563`*^9}, {3.8192081951010427`*^9, 3.819208283516802*^9}, {
   3.81920833966028*^9, 3.819208489978887*^9}, {3.819208520203529*^9, 
   3.819208645094597*^9}, {3.819208677984892*^9, 3.819208953670517*^9}, {
   3.819208994551951*^9, 3.819209147294867*^9}, 3.819209398465908*^9, {
   3.819209429805884*^9, 3.819209435513298*^9}, {3.819209555445566*^9, 
   3.819209591021594*^9}, 3.819209638186483*^9, 3.819209668656672*^9, {
   3.819209792642408*^9, 3.819209823355427*^9}, 3.819209903986351*^9, 
   3.819209965138504*^9, 3.819210009994298*^9, {3.819210104732802*^9, 
   3.819210180814962*^9}, 3.8192102752084312`*^9, {3.819211221667151*^9, 
   3.819211314123201*^9}, {3.819211348692824*^9, 3.8192114421570387`*^9}, 
   3.8192117044025927`*^9, 3.8192117674913397`*^9, 3.81921302695772*^9, {
   3.819216343453842*^9, 3.819216357822217*^9}, 3.8193680306376257`*^9, 
   3.819643622700005*^9, {3.848261065991625*^9, 3.848261096409781*^9}, {
   3.8482611532756367`*^9, 3.848261184898539*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"10b250b9-d630-4680-a634-244a4eeacf65"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find conjectures in it", "Section",
 CellChangeTimes->{{3.8180475158459663`*^9, 3.818047540656355*^9}, {
  3.819209037334202*^9, 3.8192090380849543`*^9}, {3.8192101832640457`*^9, 
  3.819210185886832*^9}},ExpressionUUID->"bc4230ee-aa5b-405a-a15b-\
3ce3158f8675"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gc", "=", 
  RowBox[{"FindGeometricConjectures", "@", "gs"}]}]], "Input",
 CellChangeTimes->{{3.818046948403878*^9, 3.8180469641233377`*^9}, {
  3.818047274097958*^9, 3.818047274212688*^9}, {3.818047389952878*^9, 
  3.8180473915902357`*^9}, {3.818047563330542*^9, 3.818047612349127*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8a4b0b3e-8094-493b-8839-79e8d559a145"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   DynamicModuleBox[{PlaneGeometry`GeometrySceneDrawerDump`instanceCount$$ = 
    1, PlaneGeometry`GeometrySceneDrawerDump`instance$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`step$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPoints$$ = {
     C["GeometricPoint"][
      C["Unspecified"]["ref", "{1, 5, 1, 0}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ = {$CellContext`a, \
$CellContext`b, $CellContext`c, $CellContext`d, $CellContext`e}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedQuants$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var2379}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$ = {1, 2, 3, 4, 5}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantIndices$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$ = {
     C["GeometricPoint"][$CellContext`a], 
     C["GeometricPoint"][$CellContext`b], 
     C["GeometricPoint"][$CellContext`c], 
     C["GeometricPoint"][$CellContext`d], 
     C["GeometricPoint"][$CellContext`e], 
     C["GeometricPoint"][
      C["Unspecified"]["ref", "{1, 5, 1, 0}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$ = {
     C["GeometricQuantity"][
      C["Unspecified"][
      "radius", 
       "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var2367, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2368}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2369, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2370}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2371, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2372}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2373, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2374}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2375, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2376}, {
     PlaneGeometry`GeometrySceneDrawer`Dump`var2377, 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2378}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$ = {
    PlaneGeometry`GeometrySceneDrawer`Dump`var2379}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$ = \
{{{-1.3225160404019438`, -0.6320233291507121}, {-1.0807299009386648`, \
-1.8299307467580948`}, {-0.1246086227945616, -0.39023718968743326`}, {
    0.3589636561319966, -2.786052024902198}, {1.4699982506662943`, 
    0.8545461777555546}, {0.5952111342824494, -0.8683159044148253}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$ = {{
    1.9322298112451133`}}, 
    PlaneGeometry`GeometrySceneDrawerDump`indPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`indQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$ = {"Step 1"}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$ = {{1, 2, 3, 4, 5}},
     PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$ = {{6}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$ = {{1}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$ = {{{
      False, False, False, False, False}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedPointPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantPos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`relativePos$$ = {1, 2, 3, 4, 5}, 
    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$ = {{((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371) + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2370) (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372))^2 + ((((
              PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var2371)^2 + (
              PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
              PlaneGeometry`GeometrySceneDrawer`Dump`var2372)^2)^
           Rational[
            1, 2] ((-PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2369) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2371) + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2372))) ((
             PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2373)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2374)^2)^
          Rational[
           1, 2] - (((PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2369)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370)^2)^
          Rational[
           1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2371)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2372)^2)^
          Rational[1, 2]) ((-PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2371) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2373) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2372) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2374)))^2 + ((((
             PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2369) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2371) + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370) (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2372)) ((-
               PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var2371)^2 + (-
               PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
              PlaneGeometry`GeometrySceneDrawer`Dump`var2372)^2)^
           Rational[
            1, 2]) ((PlaneGeometry`GeometrySceneDrawer`Dump`var2371 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2373)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2374)^2)^
          Rational[
           1, 2] - (((-PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2369)^2 + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370)^2)^
          Rational[
           1, 2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2371)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2372)^2)^
          Rational[1, 2]) ((PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2371) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2371 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2373) + (
           PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2372) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2374)))^2 + (((-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2371)^2 + (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372)^2) ((
            PlaneGeometry`GeometrySceneDrawer`Dump`var2371 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2373)^2 + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2374)^2) - 
        2 ((PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2371) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2371 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2373) + (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372) (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2372 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2374))^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373) (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2375) + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2374) (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2376))^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2377)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2377)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2378)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2378)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2377)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2377)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2378)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2374 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2378)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2377)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2375 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2377)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2378)^2 - (-
          PlaneGeometry`GeometrySceneDrawer`Dump`var2376 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2378)^2)^2 + ((-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2377)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2378)^2 - 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2379^2)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2380)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2370) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2381)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2382)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2374) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2383)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2375) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2384)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2376) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2385)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2386)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2374) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2387)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2375) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2388)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2376) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2389)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2373 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2375) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2390)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2374 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2376) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2391)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2392)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2370) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2393)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2394)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2395)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2396)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2397)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2398)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2399)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2400)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2374) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2401)^2 + (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2371 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2402)^2 (
         1 - (PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2374) 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2403)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2371) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2369) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2372)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2404)^2 + (
        1 - ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372)) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2371 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2373) + (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2371) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2374)) 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2405)^2, {
      Rational[1, 
          2] ((-(-PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370)) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371 - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2369 (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372) - 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2367 (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372)) >= 
       0, (((-PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2371)^2 + (-
              PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2372)^2)^
          Rational[-1, 
            2] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2371 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2373)^2 + (
             PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
             PlaneGeometry`GeometrySceneDrawer`Dump`var2374)^2)^
          Rational[-1, 2]) ((PlaneGeometry`GeometrySceneDrawer`Dump`var2369 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2371) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2371 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2373) + (
           PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2372) (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2374)) >= 
       0, (Rational[-1, 2] 
         2^Rational[-1, 2]) ((PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2372) 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373 + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2369 (
           PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2374) + 
         PlaneGeometry`GeometrySceneDrawer`Dump`var2371 (-
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2374)) >= 0, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2371 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2367 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2371 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2367 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2371 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2367 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2373 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2374) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2374))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2373 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2374) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2374))^2 >= 0.1, 
       Rational[
         1, 4] ((PlaneGeometry`GeometrySceneDrawer`Dump`var2370 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372) 
           PlaneGeometry`GeometrySceneDrawer`Dump`var2373 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369 (
            PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2374) + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371 (-
             PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
            PlaneGeometry`GeometrySceneDrawer`Dump`var2374))^2 >= 
       0.1, (-PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var2367 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2368 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2374)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var2367 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2369)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2368 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2370)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var2369 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2371)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2370 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372)^2 >= 
       0.03, (-PlaneGeometry`GeometrySceneDrawer`Dump`var2371 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2373)^2 + (-
           PlaneGeometry`GeometrySceneDrawer`Dump`var2372 + 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2374)^2 >= 
       0.03, (PlaneGeometry`GeometrySceneDrawer`Dump`var2371 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2375)^2 + (
          PlaneGeometry`GeometrySceneDrawer`Dump`var2372 - 
          PlaneGeometry`GeometrySceneDrawer`Dump`var2376)^2 >= 0.03, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2379 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2379 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2379 >= 0.5, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2379 >= 0.5}, {{
       PlaneGeometry`GeometrySceneDrawer`Dump`var2367, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2368, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2369, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2370, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2371, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2372, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2373, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2374, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2375, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2376, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2377, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2378, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2379}, {
       PlaneGeometry`GeometrySceneDrawer`Dump`var2380, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2381, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2382, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2383, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2384, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2385, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2386, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2387, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2388, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2389, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2390, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2391, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2392, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2393, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2394, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2395, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2396, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2397, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2398, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2399, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2400, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2401, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2402, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2403, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2404, 
        PlaneGeometry`GeometrySceneDrawer`Dump`var2405}, {{}, {}, {}, {}, {}, \
{}, {}, {}}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`objectiveList$$ = {(1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2341] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2342] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2353] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2354] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2355] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2356] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2357] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2358] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2359] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`c][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2360] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`c][
         2]))^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1]) (-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1]) + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2]) (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2]))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var2365] ((-(-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2])) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) + (-
           C["GeometricPoint"][$CellContext`a][1] + 
          C["GeometricPoint"][$CellContext`b][1]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2])))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2343] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2344] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2347] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2348] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2361] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2362] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`d][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2363] (
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`d][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2364] (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`d][
         2]))^2 + ((((C["GeometricPoint"][$CellContext`b][1] - C[
             "GeometricPoint"][$CellContext`c][1])^2 + (
             C["GeometricPoint"][$CellContext`b][2] - C[
             "GeometricPoint"][$CellContext`c][2])^2)^
          Rational[
           1, 2] ((-C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`b][1]) (-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`c][1]) + (-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`b][2]) (-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`c][2]))) ((
            C["GeometricPoint"][$CellContext`b][1] - C[
            "GeometricPoint"][$CellContext`d][1])^2 + (
            C["GeometricPoint"][$CellContext`b][2] - C[
            "GeometricPoint"][$CellContext`d][2])^2)^
         Rational[
          1, 2] - (((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`b][1])^2 + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`b][2])^2)^
         Rational[
          1, 2] ((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[1, 2]) ((-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`d][2])))^2 + (1 - 
       "notVar"[
        PlaneGeometry`GeometrySceneDrawer`Dump`var2366] ((-(-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])) (-
           C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) (-
           C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][
           2])))^2 + ((((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`b][
            1]) (-C["GeometricPoint"][$CellContext`b][1] + 
            C["GeometricPoint"][$CellContext`c][1]) + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`b][
            2]) (-C["GeometricPoint"][$CellContext`b][2] + 
            C["GeometricPoint"][$CellContext`c][
             2])) ((-C["GeometricPoint"][$CellContext`b][1] + 
             C["GeometricPoint"][$CellContext`c][1])^2 + (-
              C["GeometricPoint"][$CellContext`b][2] + 
             C["GeometricPoint"][$CellContext`c][2])^2)^
          Rational[
           1, 2]) ((C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`d][1])^2 + (
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`d][2])^2)^
         Rational[
          1, 2] - (((-C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`b][1])^2 + (-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`b][2])^2)^
         Rational[
          1, 2] ((C["GeometricPoint"][$CellContext`b][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`b][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[1, 2]) ((C["GeometricPoint"][$CellContext`b][1] - C[
          "GeometricPoint"][$CellContext`c][
          1]) (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][
          2]) (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][
           2])))^2 + (((-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1])^2 + (-
            C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][2])^2) ((
           C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2) - 
       2 ((C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][
           1]) (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][
           2]) (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2)^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2345] (
         C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2346] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`e][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2349] (
         C["GeometricPoint"][$CellContext`b][1] - C[
         "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2350] (
         C["GeometricPoint"][$CellContext`b][2] - C[
         "GeometricPoint"][$CellContext`e][
         2]))^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`d][1]) (
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][
         1]) + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`d][2]) (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2]))^2 + (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2351] (
         C["GeometricPoint"][$CellContext`d][1] - C[
         "GeometricPoint"][$CellContext`e][1]))^2 (1 - 
        "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2352] (
         C["GeometricPoint"][$CellContext`d][2] - C[
         "GeometricPoint"][$CellContext`e][2]))^2 + (-C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]^2 + (-
          C["GeometricPoint"][$CellContext`a][1] + C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2)^2 + ((-
          C["GeometricPoint"][$CellContext`a][1] + C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1])^2 - (-
         C["GeometricPoint"][$CellContext`b][1] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         1])^2 + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2 - (-
         C["GeometricPoint"][$CellContext`b][2] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         2])^2)^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1])^2 - (-
         C["GeometricPoint"][$CellContext`d][1] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         1])^2 + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2 - (-
         C["GeometricPoint"][$CellContext`d][2] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         2])^2)^2 + ((-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1])^2 - (-
         C["GeometricPoint"][$CellContext`e][1] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][
         1])^2 + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2 - (-
         C["GeometricPoint"][$CellContext`e][2] + C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2])^2)^2}, 
    PlaneGeometry`GeometrySceneDrawerDump`constraintsList$$ = {{
     Rational[1, 
         2] ((-(-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2])) 
         C["GeometricPoint"][$CellContext`c][1] - 
        C["GeometricPoint"][$CellContext`b][1] (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`c][2]) - 
        C["GeometricPoint"][$CellContext`a][
         1] (-C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2])) >= 
      0, (((-C["GeometricPoint"][$CellContext`b][1] + 
            C["GeometricPoint"][$CellContext`c][1])^2 + (-
             C["GeometricPoint"][$CellContext`b][2] + 
            C["GeometricPoint"][$CellContext`c][2])^2)^
         Rational[-1, 
           2] ((C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`d][1])^2 + (
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`d][2])^2)^
         Rational[-1, 2]) ((C["GeometricPoint"][$CellContext`b][1] - C[
          "GeometricPoint"][$CellContext`c][
          1]) (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][
          2]) (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][2])) >= 
      0, (Rational[-1, 2] 
        2^Rational[-1, 2]) ((C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][2]) 
         C["GeometricPoint"][$CellContext`d][1] + 
        C["GeometricPoint"][$CellContext`b][1] (
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`d][2]) + 
        C["GeometricPoint"][$CellContext`c][
          1] (-C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`d][2])) >= 0, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[
        1, 4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][2]) 
          C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`a][1] (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) + 
         C["GeometricPoint"][$CellContext`b][
           1] (-C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) 
          C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`b][1] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]) + 
         C["GeometricPoint"][$CellContext`c][
           1] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) 
          C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`b][1] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]) + 
         C["GeometricPoint"][$CellContext`c][
           1] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2 >= 0.1, 
      Rational[1, 
         4] ((C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][2]) 
          C["GeometricPoint"][$CellContext`d][1] + 
         C["GeometricPoint"][$CellContext`b][1] (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2]) + 
         C["GeometricPoint"][$CellContext`c][
           1] (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2 >= 
      0.1, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`d][1])^2 + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`d][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`a][1] - C[
         "GeometricPoint"][$CellContext`b][1])^2 + (
         C["GeometricPoint"][$CellContext`a][2] - C[
         "GeometricPoint"][$CellContext`b][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`b][1] + 
         C["GeometricPoint"][$CellContext`c][1])^2 + (-
          C["GeometricPoint"][$CellContext`b][2] + 
         C["GeometricPoint"][$CellContext`c][2])^2 >= 
      0.03, (-C["GeometricPoint"][$CellContext`c][1] + 
         C["GeometricPoint"][$CellContext`d][1])^2 + (-
          C["GeometricPoint"][$CellContext`c][2] + 
         C["GeometricPoint"][$CellContext`d][2])^2 >= 
      0.03, (C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][1])^2 + (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2])^2 >= 0.03, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] >= 0.5, 
      C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] >= 
      0.5}}, PlaneGeometry`GeometrySceneDrawerDump`formattedVarsList$$ = {{{
       C["GeometricPoint"][$CellContext`a][1], 
       C["GeometricPoint"][$CellContext`a][2], 
       C["GeometricPoint"][$CellContext`b][1], 
       C["GeometricPoint"][$CellContext`b][2], 
       C["GeometricPoint"][$CellContext`c][1], 
       C["GeometricPoint"][$CellContext`c][2], 
       C["GeometricPoint"][$CellContext`d][1], 
       C["GeometricPoint"][$CellContext`d][2], 
       C["GeometricPoint"][$CellContext`e][1], 
       C["GeometricPoint"][$CellContext`e][2], 
       C["GeometricPoint"][
        C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1], 
       C["GeometricPoint"][
        C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2], 
       C["GeometricQuantity"][
        C["Unspecified"][
        "radius", 
         "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]}, {
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2341], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2342], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2343], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2344], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2345], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2346], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2347], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2348], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2349], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2350], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2351], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2352], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2353], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2354], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2355], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2356], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2357], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2358], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2359], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2360], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2361], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2362], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2363], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2364], 
       "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2365], 
       "notVar"[
       PlaneGeometry`GeometrySceneDrawer`Dump`var2366]}, {{}, {}, {}, {}, {}, \
{}, {}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`equalitiesList$$ = {{(-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`b][1]) (-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`c][1]) + (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`b][2]) (-
          C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`c][2]) == 
      0, ((-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1])^2 + (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2])^2) ((
          C["GeometricPoint"][$CellContext`c][1] - C[
          "GeometricPoint"][$CellContext`d][1])^2 + (
          C["GeometricPoint"][$CellContext`c][2] - C[
          "GeometricPoint"][$CellContext`d][2])^2) == 
      2 ((C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`c][
           1]) (-C["GeometricPoint"][$CellContext`c][1] + 
           C["GeometricPoint"][$CellContext`d][1]) + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`c][
           2]) (-C["GeometricPoint"][$CellContext`c][2] + 
           C["GeometricPoint"][$CellContext`d][2]))^2, (((
            C["GeometricPoint"][$CellContext`b][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`b][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[
          1, 2] ((-C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`b][1]) (-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`c][1]) + (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`b][2]) (-
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`c][2]))) ((
           C["GeometricPoint"][$CellContext`b][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`b][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2)^
        Rational[
         1, 2] == (((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`b][1])^2 + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`b][2])^2)^
         Rational[
          1, 2] ((C["GeometricPoint"][$CellContext`a][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`a][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[1, 2]) ((-C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`c][1]) (-
           C["GeometricPoint"][$CellContext`b][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`c][2]) (-
           C["GeometricPoint"][$CellContext`b][2] + 
          C["GeometricPoint"][$CellContext`d][2])), (((
           C["GeometricPoint"][$CellContext`a][1] - C[
           "GeometricPoint"][$CellContext`b][
           1]) (-C["GeometricPoint"][$CellContext`b][1] + 
           C["GeometricPoint"][$CellContext`c][1]) + (
           C["GeometricPoint"][$CellContext`a][2] - C[
           "GeometricPoint"][$CellContext`b][
           2]) (-C["GeometricPoint"][$CellContext`b][2] + 
           C["GeometricPoint"][$CellContext`c][
            2])) ((-C["GeometricPoint"][$CellContext`b][1] + 
            C["GeometricPoint"][$CellContext`c][1])^2 + (-
             C["GeometricPoint"][$CellContext`b][2] + 
            C["GeometricPoint"][$CellContext`c][2])^2)^
         Rational[
          1, 2]) ((C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`d][1])^2 + (
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`d][2])^2)^
        Rational[
         1, 2] == (((-C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`b][1])^2 + (-
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`b][2])^2)^
         Rational[
          1, 2] ((C["GeometricPoint"][$CellContext`b][1] - C[
            "GeometricPoint"][$CellContext`c][1])^2 + (
            C["GeometricPoint"][$CellContext`b][2] - C[
            "GeometricPoint"][$CellContext`c][2])^2)^
         Rational[1, 2]) ((C["GeometricPoint"][$CellContext`b][1] - C[
          "GeometricPoint"][$CellContext`c][
          1]) (-C["GeometricPoint"][$CellContext`c][1] + 
          C["GeometricPoint"][$CellContext`d][1]) + (
          C["GeometricPoint"][$CellContext`b][2] - C[
          "GeometricPoint"][$CellContext`c][
          2]) (-C["GeometricPoint"][$CellContext`c][2] + 
          C["GeometricPoint"][$CellContext`d][2])), (-
          C["GeometricPoint"][$CellContext`a][1] + 
         C["GeometricPoint"][$CellContext`d][1]) (
         C["GeometricPoint"][$CellContext`c][1] - C[
         "GeometricPoint"][$CellContext`e][
         1]) + (-C["GeometricPoint"][$CellContext`a][2] + 
         C["GeometricPoint"][$CellContext`d][2]) (
         C["GeometricPoint"][$CellContext`c][2] - C[
         "GeometricPoint"][$CellContext`e][2]) == 0}}, 
    PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`initialValues$$ = {
    1, 1, 1, {{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}, {0.3589636561319966, -2.786052024902198}, {
     1.4699982506662943`, 0.8545461777555546}, {
     0.5952111342824494, -0.8683159044148253}}}, {{
     1.9322298112451133`}}, {{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}, {0.3589636561319966, -2.786052024902198}, {
     1.4699982506662943`, 0.8545461777555546}}}, {{{
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, {
          Opacity[0.2], 
          RGBColor[1, 0.5, 0], 
          Opacity[0.5], 
          EdgeForm[{
            RGBColor[1, 0.5, 0], 
            Thickness[Large]}], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          RGBColor[1, 0.5, 0], 
          Opacity[0.5], 
          EdgeForm[{
            RGBColor[1, 0.5, 0], 
            Thickness[Large]}], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`d]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`a], 
              C["GeometricPoint"][$CellContext`b], 
              C["GeometricPoint"][$CellContext`c]}], {
             RGBColor[1, 0.5, 0]}} -> 45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`b]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`a], 
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`b]}], {
             RGBColor[1, 0.5, 0]}} -> 45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`b]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`b]}], {
             RGBColor[1, 0.5, 0]}} -> 45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`b]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`b]}], {
             RGBColor[1, 0.5, 0]}} -> 45 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`b], 
              C["GeometricPoint"][$CellContext`a], 
              C["GeometricPoint"][$CellContext`d]}], {
             RGBColor[1, 0.5, 0]}} -> 0.4636476090008059], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`a]}], {
             RGBColor[1, 0.5, 0]}} -> 0.4636476090008059], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`a], 
              C["GeometricPoint"][$CellContext`b], 
              C["GeometricPoint"][$CellContext`d]}], {
             RGBColor[1, 0.5, 0]}} -> 135 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`d]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`e]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`b], 
              C["GeometricPoint"][$CellContext`a], 
              C["GeometricPoint"][$CellContext`c]}], {
             RGBColor[1, 0.5, 0]}} -> 90 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`d]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`b], 
              C["GeometricPoint"][$CellContext`d]}], {
             RGBColor[1, 0.5, 0]}} -> 90 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`a]], 
            Polygon[{
              C["GeometricPoint"][$CellContext`d], 
              C["GeometricPoint"][$CellContext`c], 
              C["GeometricPoint"][$CellContext`a]}], {
             RGBColor[1, 0.5, 0]}} -> 90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
        AbsoluteThickness[2], 
        GrayLevel[0.7], 
        EdgeForm[{
          GrayLevel[0.7], 
          Thickness[Large]}], {{
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[52, 85], 
            Rational[11, 17], 
            Rational[166, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
          Opacity[0.2], 
          Opacity[0.5, 
           RGBColor[
            Rational[242, 255], 
            Rational[148, 255], 
            Rational[148, 255]]], 
          Tooltip[
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
          45 Degree], 
         PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
            PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
          90 Degree], {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a]}]}, {
          Dashing[{Small, Small}], 
          CapForm["None"], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]}]}, {
          RGBColor[
           Rational[16, 51], 
           Rational[176, 255], 
           Rational[16, 51]], 
          Circle[
           C["GeometricPoint"][
            C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
           C["GeometricQuantity"][
            C["Unspecified"][
            "radius", 
             "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
          RGBColor[
           Rational[253, 255], 
           Rational[116, 255], 0], 
          InfiniteLine[
           C[
           "GeometricPoint"][$CellContext`a], {-
             C["GeometricPoint"][$CellContext`a][1] + 
            C["GeometricPoint"][$CellContext`d][1], -
             C["GeometricPoint"][$CellContext`a][2] + 
            C["GeometricPoint"][$CellContext`d][2]}]}, {
          RGBColor[
           Rational[107, 255], 
           Rational[31, 255], 
           Rational[59, 85]], 
          InfiniteLine[
           C["GeometricPoint"][$CellContext`e], {
           C["GeometricPoint"][$CellContext`c][1] - C[
            "GeometricPoint"][$CellContext`e][1], 
            C["GeometricPoint"][$CellContext`c][2] - C[
            "GeometricPoint"][$CellContext`e][2]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b]}]}, {
          AbsoluteThickness[2], 
          RGBColor[1, 0.5, 0], 
          Line[{
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}]}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}, 
          Inset[
           Style[" a ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`a]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`a]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}, 
          Inset[
           Style[" b ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`b]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`b]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}, 
          Inset[
           Style[" c ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`c]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`c]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}, 
          Inset[
           Style[" d ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`d]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`d]]}}, {{
           Hue[0.58, 1, 1, 1], 
           AbsolutePointSize[17], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}, 
          Inset[
           Style[" e ", 
            RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
           C["GeometricPoint"][$CellContext`e]], {
           AbsolutePointSize[17], 
           Opacity[0], 
           Point[
            C["GeometricPoint"][$CellContext`e]]}}}, {}}}}, {{{
       C["GeometricPoint"][$CellContext`a] -> {-1.3225160404019438`, \
-0.6320233291507121}, 
        C["GeometricPoint"][$CellContext`b] -> {-1.0807299009386648`, \
-1.8299307467580948`}, 
        C["GeometricPoint"][$CellContext`c] -> {-0.1246086227945616, \
-0.39023718968743326`}, 
        C["GeometricPoint"][$CellContext`d] -> {
         0.3589636561319966, -2.786052024902198}, 
        C["GeometricPoint"][$CellContext`e] -> {1.4699982506662943`, 
         0.8545461777555546}, C["GeometricPoint"][
          C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
         0.5952111342824494, -0.8683159044148253}}, {C["GeometricQuantity"][
          C["Unspecified"][
          "radius", 
           "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
        1.9322298112451133`}}}, {{{
       False, False, False, False, False}}}, {{{}}}, False, 
     True, {}, {}, {{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}, {0.3589636561319966, -2.786052024902198}, {
     1.4699982506662943`, 0.8545461777555546}}}, {{{-2.0234646392116864`, 
     3.2138869077765855`}, {-3.486991677908961, 1.7503598690793107`}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$ = \
{{{-2.0234646392116864`, 3.2138869077765855`}, {-3.486991677908961, 
    1.7503598690793107`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$ = {
     PlaneGeometry`AssertionWrapper[
      GeometricAssertion[{
        Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
        Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]}, 
       "Similar"], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
     EuclideanDistance[$CellContext`b, $CellContext`c] == 
      EuclideanDistance[$CellContext`b, $CellContext`d], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
     EuclideanDistance[$CellContext`a, $CellContext`b] == 
      EuclideanDistance[$CellContext`a, $CellContext`c], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
     PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
      PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
      PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
      PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
      45 Degree, {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
     PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
      PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
     PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`d}] == 
      135 Degree, {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
     EuclideanDistance[$CellContext`c, $CellContext`d] == 
      EuclideanDistance[$CellContext`a, $CellContext`b] + 
       EuclideanDistance[$CellContext`a, $CellContext`c], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
      GeometricAssertion[{
        Line[{$CellContext`c, $CellContext`d}], 
        Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
      GeometricAssertion[{
        Line[{$CellContext`b, $CellContext`c}], 
        Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
      GeometricAssertion[{
        Line[{$CellContext`a, $CellContext`d}], 
        Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
      GeometricAssertion[{
        Line[{$CellContext`a, $CellContext`b}], 
        Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
     PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
      PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
      PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
      90 Degree, {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}], 
     PlaneGeometry`AssertionWrapper[
      GeometricAssertion[{
        Line[{$CellContext`a, $CellContext`b}], 
        Line[{$CellContext`c, $CellContext`d}]}, "Parallel"], {
      PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
       PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}]}, 
    PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$ = \
{{{-1.3225160404019438`, -0.6320233291507121}, {-1.0807299009386648`, \
-1.8299307467580948`}, {-0.1246086227945616, -0.39023718968743326`}, {
    0.3589636561319966, -2.786052024902198}, {1.4699982506662943`, 
    0.8545461777555546}}}, PlaneGeometry`GeometrySceneDrawerDump`picPart$$, 
    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True, 
    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$ = \
{{{-1.3225160404019438`, -0.6320233291507121}, {-1.0807299009386648`, \
-1.8299307467580948`}, {-0.1246086227945616, -0.39023718968743326`}, {
    0.3589636561319966, -2.786052024902198}, {1.4699982506662943`, 
    0.8545461777555546}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$ = {{
      C["GeometricPoint"][$CellContext`a], 
      C["GeometricPoint"][$CellContext`b], 
      C["GeometricPoint"][$CellContext`c], 
      C["GeometricPoint"][$CellContext`d], 
      C["GeometricPoint"][$CellContext`e], 
      C["GeometricPoint"][
       C["Unspecified"]["ref", "{1, 5, 1, 0}"]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$ = {{
      C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]}}, 
    PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
    PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$, 
    PlaneGeometry`GeometrySceneDrawerDump`size$$ = {380, 380}, 
    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$ = 10, 
    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = {{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, {
         Opacity[0.2], 
         RGBColor[1, 0.5, 0], 
         Opacity[0.5], 
         EdgeForm[{
           RGBColor[1, 0.5, 0], 
           Thickness[Large]}], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         RGBColor[1, 0.5, 0], 
         Opacity[0.5], 
         EdgeForm[{
           RGBColor[1, 0.5, 0], 
           Thickness[Large]}], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`d]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`c]}], {
            RGBColor[1, 0.5, 0]}} -> 45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`b]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`b]}], {
            RGBColor[1, 0.5, 0]}} -> 45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`b]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`b]}], {
            RGBColor[1, 0.5, 0]}} -> 45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`b]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`b]}], {
            RGBColor[1, 0.5, 0]}} -> 45 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`d]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`d]}], {
            RGBColor[1, 0.5, 0]}} -> 0.4636476090008059], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`a]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`a]}], {
            RGBColor[1, 0.5, 0]}} -> 0.4636476090008059], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`d]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`d]}], {
            RGBColor[1, 0.5, 0]}} -> 135 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`d]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`e]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`a], 
             C["GeometricPoint"][$CellContext`c]}], {
            RGBColor[1, 0.5, 0]}} -> 90 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`d]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`b], 
             C["GeometricPoint"][$CellContext`d]}], {
            RGBColor[1, 0.5, 0]}} -> 90 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`d], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`a]], 
           Polygon[{
             C["GeometricPoint"][$CellContext`d], 
             C["GeometricPoint"][$CellContext`c], 
             C["GeometricPoint"][$CellContext`a]}], {
            RGBColor[1, 0.5, 0]}} -> 90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`d], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}}, {}}, {
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c]}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          Polygon[{
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]}], "p2"]}, 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`c], 
            C["GeometricPoint"][$CellContext`d]], "Counterclockwise"} -> 
         45 Degree], 
        PlaneGeometry`GeometrySceneDrawerDump`makeAngleGraphics[{
           PlaneGeometry`GeometrySceneDrawerDump`geoAngle[
            C["GeometricPoint"][$CellContext`b], 
            C["GeometricPoint"][$CellContext`a], 
            C["GeometricPoint"][$CellContext`c]], "Counterclockwise"} -> 
         90 Degree], {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`b], 
           C["GeometricPoint"][$CellContext`a]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`c]}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[
          C["GeometricPoint"][
           C["Unspecified"]["ref", "{1, 5, 1, 0}"]], 
          C["GeometricQuantity"][
           C["Unspecified"][
           "radius", 
            "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]]]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[
          C[
          "GeometricPoint"][$CellContext`a], {-
            C["GeometricPoint"][$CellContext`a][1] + 
           C["GeometricPoint"][$CellContext`d][1], -
            C["GeometricPoint"][$CellContext`a][2] + 
           C["GeometricPoint"][$CellContext`d][2]}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[
          C["GeometricPoint"][$CellContext`e], {
          C["GeometricPoint"][$CellContext`c][1] - C[
           "GeometricPoint"][$CellContext`e][1], 
           C["GeometricPoint"][$CellContext`c][2] - C[
           "GeometricPoint"][$CellContext`e][2]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`a], 
           C["GeometricPoint"][$CellContext`b]}]}, {
         AbsoluteThickness[2], 
         RGBColor[1, 0.5, 0], 
         Line[{
           C["GeometricPoint"][$CellContext`c], 
           C["GeometricPoint"][$CellContext`d]}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`a]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`a]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`b]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`b]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`c]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`c]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`d]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`d]]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], 
          C["GeometricPoint"][$CellContext`e]], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[
           C["GeometricPoint"][$CellContext`e]]}}}, {}}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`varray$$ = {{
      C["GeometricPoint"][$CellContext`a][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2367}, {
      C["GeometricPoint"][$CellContext`a][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2368}, {
      C["GeometricPoint"][$CellContext`b][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2369}, {
      C["GeometricPoint"][$CellContext`b][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2370}, {
      C["GeometricPoint"][$CellContext`c][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2371}, {
      C["GeometricPoint"][$CellContext`c][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2372}, {
      C["GeometricPoint"][$CellContext`d][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2373}, {
      C["GeometricPoint"][$CellContext`d][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2374}, {
      C["GeometricPoint"][$CellContext`e][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2375}, {
      C["GeometricPoint"][$CellContext`e][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2376}, {
      C["GeometricPoint"][
       C["Unspecified"]["ref", "{1, 5, 1, 0}"]][1], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2377}, {
      C["GeometricPoint"][
       C["Unspecified"]["ref", "{1, 5, 1, 0}"]][2], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2378}, {
      C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2379}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2341], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2380}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2342], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2381}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2343], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2382}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2344], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2383}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2345], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2384}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2346], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2385}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2347], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2386}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2348], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2387}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2349], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2388}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2350], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2389}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2351], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2390}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2352], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2391}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2353], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2392}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2354], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2393}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2355], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2394}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2356], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2395}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2357], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2396}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2358], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2397}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2359], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2398}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2360], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2399}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2361], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2400}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2362], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2401}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2363], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2402}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2364], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2403}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2365], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2404}, {
      "notVar"[PlaneGeometry`GeometrySceneDrawer`Dump`var2366], 
      PlaneGeometry`GeometrySceneDrawer`Dump`var2405}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var2367, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2368}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var2369, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2370}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var2371, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2372}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var2373, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2374}, {
      PlaneGeometry`GeometrySceneDrawer`Dump`var2375, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2376}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`generatedPointLists$$ = {{{
      PlaneGeometry`GeometrySceneDrawer`Dump`var2377, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2378}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`quantLists$$ = {{
     PlaneGeometry`GeometrySceneDrawer`Dump`var2379}}, 
    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$ = <|{
      PlaneGeometry`GeometrySceneDrawer`Dump`var2367, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2368} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2369, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2370} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2371, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2372} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2373, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2374} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2375, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2376} -> 1|>, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosAssoc$$ = <|{
      PlaneGeometry`GeometrySceneDrawer`Dump`var2367, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2368} -> 
     1, {PlaneGeometry`GeometrySceneDrawer`Dump`var2369, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2370} -> 
     2, {PlaneGeometry`GeometrySceneDrawer`Dump`var2371, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2372} -> 
     3, {PlaneGeometry`GeometrySceneDrawer`Dump`var2373, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2374} -> 
     4, {PlaneGeometry`GeometrySceneDrawer`Dump`var2375, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2376} -> 
     5, {PlaneGeometry`GeometrySceneDrawer`Dump`var2377, 
       PlaneGeometry`GeometrySceneDrawer`Dump`var2378} -> 6|>, 
    PlaneGeometry`GeometrySceneDrawerDump`quantPosAssoc$$ = <|
    PlaneGeometry`GeometrySceneDrawer`Dump`var2379 -> 1|>, 
    PlaneGeometry`GeometrySceneDrawerDump`rules$$ = {{{
      C["GeometricPoint"][$CellContext`a] -> {-1.3225160404019438`, \
-0.6320233291507121}, 
       C["GeometricPoint"][$CellContext`b] -> {-1.0807299009386648`, \
-1.8299307467580948`}, 
       C["GeometricPoint"][$CellContext`c] -> {-0.1246086227945616, \
-0.39023718968743326`}, 
       C["GeometricPoint"][$CellContext`d] -> {
        0.3589636561319966, -2.786052024902198}, 
       C["GeometricPoint"][$CellContext`e] -> {1.4699982506662943`, 
        0.8545461777555546}, C["GeometricPoint"][
         C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
        0.5952111342824494, -0.8683159044148253}}, {C["GeometricQuantity"][
         C["Unspecified"][
         "radius", 
          "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
       1.9322298112451133`}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
    PlaneGeometry`GeometrySceneDrawerDump`constraint$$, 
    PlaneGeometry`GeometrySceneDrawerDump`actionMenu$$ = ActionMenu[
     Tooltip[
      Graphics[{{
         GrayLevel[0.9], 
         Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
         Thickness[Large], 
         RGBColor[0.161, 0.667, 0.887], {
          Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
          Line[{{-0.75, 0}, {0.75, 0}}], 
          Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
       AspectRatio -> Full, PlotRangePadding -> None], "Controls/Paste"], {
     "Hide Controls" :> (
       PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
      Delimiter, Row[{
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], "  ", 
         "Initial Settings"}] :> ({
        PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
         PlaneGeometry`GeometrySceneDrawerDump`step$$, 
         PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
         PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
         PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
         PlaneGeometry`GeometrySceneDrawerDump`current$$, 
         PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
         PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
         PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
       PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
      "Paste Current Graphics" :> CellPrint[
        ExpressionCell[
         Append[
          PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
           Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
            If[
             And[
             True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
              PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
              PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
             PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]], 
      "Paste Current GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          MapThread[Construct, {
            Map[ReplaceAll, {
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
              Thread[
              PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
            MapThread[Cases, {
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
              Map[HoldPattern, 
               Thread[Apply[Alternatives, 
                  Apply[Join, 
                   Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                  1}] -> Blank[]]]}]}], 
          If[False, 
           ReplaceAll[
            Take[
             ReplaceAll[
              Hold[{$CellContext`p1 == Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Opacity[0.5, 
                   RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                  
                  Opacity[0.5, 
                   RGBColor[242/255, 148/255, 148/255]]], 
                PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
                  "Counterclockwise"] == 45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
                  "Counterclockwise"] == 90 Degree, 
                Style[
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                 RGBColor[16/51, 176/255, 16/51]], 
                
                GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                 "Similar"], 
                GeometricAssertion[{
                  Style[
                   InfiniteLine[{$CellContext`a, $CellContext`d}], 
                   RGBColor[253/255, 116/255, 0]], 
                  Style[
                   InfiniteLine[{$CellContext`e, $CellContext`c}], 
                   RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
              Hold[{
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                  BlankNullSequence[GeometricStep]]}] :> 
              Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               BlankNullSequence[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
           Hold[{$CellContext`p1 == Style[
               Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
               Opacity[0.5, 
                RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
               Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
               Opacity[0.5, 
                RGBColor[242/255, 148/255, 148/255]]], 
             PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
               "Counterclockwise"] == 45 Degree, 
             PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
               "Counterclockwise"] == 90 Degree, 
             Style[
              
              CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
              RGBColor[16/51, 176/255, 16/51]], 
             
             GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
              "Similar"], 
             GeometricAssertion[{
               Style[
                InfiniteLine[{$CellContext`a, $CellContext`d}], 
                RGBColor[253/255, 116/255, 0]], 
               Style[
                InfiniteLine[{$CellContext`e, $CellContext`c}], 
                RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]], 
          If[
           And[
           True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
            PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
           Replace[
            Part[
             Hold[{
               GeometricAssertion[{
                 Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                 Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]}, 
                "Similar"], EuclideanDistance[$CellContext`b, $CellContext`c] == 
               EuclideanDistance[$CellContext`b, $CellContext`d], 
               EuclideanDistance[$CellContext`a, $CellContext`b] == 
               EuclideanDistance[$CellContext`a, $CellContext`c], 
               PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
               PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
               PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
               PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
               45 Degree, 
               PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
               PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}], 
               PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`d}] == 
               135 Degree, EuclideanDistance[$CellContext`c, $CellContext`d] == 
               EuclideanDistance[$CellContext`a, $CellContext`b] + 
                EuclideanDistance[$CellContext`a, $CellContext`c], 
               GeometricAssertion[{
                 Line[{$CellContext`c, $CellContext`d}], 
                 Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
               GeometricAssertion[{
                 Line[{$CellContext`b, $CellContext`c}], 
                 Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
               GeometricAssertion[{
                 Line[{$CellContext`a, $CellContext`d}], 
                 Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
               GeometricAssertion[{
                 Line[{$CellContext`a, $CellContext`b}], 
                 Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
               PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
               PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
               PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
               90 Degree, 
               GeometricAssertion[{
                 Line[{$CellContext`a, $CellContext`b}], 
                 Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}], {1}, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
               Blank[]]] :> 
            Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], "Input"]],
       Delimiter, "Paste Complete GeometricScene" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          If[False, Identity, First][
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{$CellContext`p1 == Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Opacity[0.5, 
               RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
              Opacity[0.5, 
               RGBColor[242/255, 148/255, 148/255]]], 
            PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
              "Counterclockwise"] == 45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
              "Counterclockwise"] == 90 Degree, 
            Style[
             
             CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
             RGBColor[16/51, 176/255, 16/51]], 
            GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
            GeometricAssertion[{
              Style[
               InfiniteLine[{$CellContext`a, $CellContext`d}], 
               RGBColor[253/255, 116/255, 0]], 
              Style[
               InfiniteLine[{$CellContext`e, $CellContext`c}], 
               RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
          Hold[{
            GeometricAssertion[{
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]}, 
             "Similar"], EuclideanDistance[$CellContext`b, $CellContext`c] == 
            EuclideanDistance[$CellContext`b, $CellContext`d], 
            EuclideanDistance[$CellContext`a, $CellContext`b] == 
            EuclideanDistance[$CellContext`a, $CellContext`c], 
            PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
            PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
            PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
            PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
            45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
            PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}], 
            PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`d}] == 
            135 Degree, EuclideanDistance[$CellContext`c, $CellContext`d] == 
            EuclideanDistance[$CellContext`a, $CellContext`b] + 
             EuclideanDistance[$CellContext`a, $CellContext`c], 
            GeometricAssertion[{
              Line[{$CellContext`c, $CellContext`d}], 
              Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`b, $CellContext`c}], 
              Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`d}], 
              Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`b}], 
              Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
            PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
            PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
            90 Degree, 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`b}], 
              Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}]], 
         "Input"]], "Paste Algebraic Formulation" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
          First[
           Transpose[
            MapThread[Construct, {
              Map[ReplaceAll, {
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                Thread[
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                 PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
              Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
          Hold[{$CellContext`p1 == Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Opacity[0.5, 
               RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
              Opacity[0.5, 
               RGBColor[242/255, 148/255, 148/255]]], 
            PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
              "Counterclockwise"] == 45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
              "Counterclockwise"] == 90 Degree, 
            Style[
             
             CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
             RGBColor[16/51, 176/255, 16/51]], 
            GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
            GeometricAssertion[{
              Style[
               InfiniteLine[{$CellContext`a, $CellContext`d}], 
               RGBColor[253/255, 116/255, 0]], 
              Style[
               InfiniteLine[{$CellContext`e, $CellContext`c}], 
               RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
          Hold[{
            GeometricAssertion[{
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]}, 
             "Similar"], EuclideanDistance[$CellContext`b, $CellContext`c] == 
            EuclideanDistance[$CellContext`b, $CellContext`d], 
            EuclideanDistance[$CellContext`a, $CellContext`b] == 
            EuclideanDistance[$CellContext`a, $CellContext`c], 
            PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
            PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
            PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
            PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
            45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
            PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}], 
            PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`d}] == 
            135 Degree, EuclideanDistance[$CellContext`c, $CellContext`d] == 
            EuclideanDistance[$CellContext`a, $CellContext`b] + 
             EuclideanDistance[$CellContext`a, $CellContext`c], 
            GeometricAssertion[{
              Line[{$CellContext`c, $CellContext`d}], 
              Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`b, $CellContext`c}], 
              Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`d}], 
              Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`b}], 
              Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
            PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
            PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
            90 Degree, 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`b}], 
              Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}]][
         "AlgebraicFormulation"], "Input"]], Delimiter, "Paste Parameters" :> 
      CellPrint[
        ExpressionCell[
         If[False, Identity, First][
          Transpose[
           MapThread[Construct, {
             Map[ReplaceAll, {
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
               Thread[
               PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
             Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
         "Input"]], "Paste Hypotheses" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{$CellContext`p1 == Style[
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Opacity[0.5, 
               RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
              Opacity[0.5, 
               RGBColor[242/255, 148/255, 148/255]]], 
            PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
              "Counterclockwise"] == 45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
              "Counterclockwise"] == 90 Degree, 
            Style[
             
             CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
             RGBColor[16/51, 176/255, 16/51]], 
            GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
            GeometricAssertion[{
              Style[
               InfiniteLine[{$CellContext`a, $CellContext`d}], 
               RGBColor[253/255, 116/255, 0]], 
              Style[
               InfiniteLine[{$CellContext`e, $CellContext`c}], 
               RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]], 
         "Input"]], "Paste Conclusions" :> CellPrint[
        ExpressionCell[
         PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
         PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
          Hold[{
            GeometricAssertion[{
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]}, 
             "Similar"], EuclideanDistance[$CellContext`b, $CellContext`c] == 
            EuclideanDistance[$CellContext`b, $CellContext`d], 
            EuclideanDistance[$CellContext`a, $CellContext`b] == 
            EuclideanDistance[$CellContext`a, $CellContext`c], 
            PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
            PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
            PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
            PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
            45 Degree, 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
            PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}], 
            PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`d}] == 
            135 Degree, EuclideanDistance[$CellContext`c, $CellContext`d] == 
            EuclideanDistance[$CellContext`a, $CellContext`b] + 
             EuclideanDistance[$CellContext`a, $CellContext`c], 
            GeometricAssertion[{
              Line[{$CellContext`c, $CellContext`d}], 
              Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`b, $CellContext`c}], 
              Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`d}], 
              Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`b}], 
              Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
            PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
            PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
            PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
            90 Degree, 
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`b}], 
              Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}]], 
         "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
        ExpressionCell[
         FindGeometricConjectures[
          PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
           If[
           False, {{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
                0.3589636561319966, -2.786052024902198}, $CellContext`e -> {
                1.4699982506662943`, 0.8545461777555546}, 
               C["GeometricPoint"][
                 C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
                0.5952111342824494, -0.8683159044148253}}, {
              C["GeometricQuantity"][
                 C["Unspecified"][
                 "radius", 
                  "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
               1.9322298112451133`}}}, 
            
            First[{{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
                 0.3589636561319966, -2.786052024902198}, $CellContext`e -> {
                 1.4699982506662943`, 0.8545461777555546}, C["GeometricPoint"][
                  C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
                 0.5952111342824494, -0.8683159044148253}}, {
               C["GeometricQuantity"][
                  C["Unspecified"][
                  "radius", 
                   "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
                1.9322298112451133`}}}]], 
           Hold[{$CellContext`p1 == Style[
               Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
               Opacity[0.5, 
                RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
               Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
               Opacity[0.5, 
                RGBColor[242/255, 148/255, 148/255]]], 
             PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
               "Counterclockwise"] == 45 Degree, 
             PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
               "Counterclockwise"] == 90 Degree, 
             Style[
              
              CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
              RGBColor[16/51, 176/255, 16/51]], 
             
             GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
              "Similar"], 
             GeometricAssertion[{
               Style[
                InfiniteLine[{$CellContext`a, $CellContext`d}], 
                RGBColor[253/255, 116/255, 0]], 
               Style[
                InfiniteLine[{$CellContext`e, $CellContext`c}], 
                RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]]], 
         "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
    PlaneGeometry`GeometrySceneDrawerDump`topControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              2], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 2], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        ActionMenu[
         Tooltip[
          Graphics[{{
             GrayLevel[0.9], 
             Rectangle[{-2, -1.5}, {2, 1.5}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], {
              Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
              Line[{{-0.75, 0}, {0.75, 0}}], 
              Line[{{-0.75, -0.5}, {0.75, -0.5}}]}}}, ImageSize -> {40, 30.}, 
           AspectRatio -> Full, PlotRangePadding -> None], 
          "Controls/Paste"], {
         "Hide Controls" :> (
           PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = False), 
          Delimiter, Row[{
             Dynamic[
              RawBoxes[
               FEPrivate`FrontEndResource["FEBitmaps", "BookmarkBullet"]]], 
             "  ", "Initial Settings"}] :> ({
            PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`current$$, 
             PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$} = 
           PlaneGeometry`GeometrySceneDrawerDump`initialValues$$), Delimiter, 
          "Paste Current Graphics" :> CellPrint[
            ExpressionCell[
             Append[
              PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
               Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                If[
                 And[
                 True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                  PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                 PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], PlotRange -> 
              Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$]], "Input"]],
           "Paste Current GeometricScene" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              MapThread[Construct, {
                Map[ReplaceAll, {
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                  Thread[
                  PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                
                MapThread[Cases, {
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                  Map[HoldPattern, 
                   Thread[Apply[Alternatives, 
                    Apply[Join, 
                    Transpose[
                    Take[
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`originalPointLists$$\
, PlaneGeometry`GeometrySceneDrawerDump`originalQuantLists$$}], 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], {1}], {
                    1}] -> Blank[]]]}]}], 
              If[False, 
               ReplaceAll[
                Take[
                 ReplaceAll[
                  Hold[{$CellContext`p1 == Style[
                    
                    Triangle[{$CellContext`a, $CellContext`b, \
$CellContext`c}], 
                    Opacity[0.5, 
                    RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == 
                    Style[
                    
                    Triangle[{$CellContext`b, $CellContext`c, \
$CellContext`d}], 
                    Opacity[0.5, 
                    RGBColor[242/255, 148/255, 148/255]]], 
                    PlanarAngle[{$CellContext`b, $CellContext`c, \
$CellContext`d}, "Counterclockwise"] == 45 Degree, 
                    PlanarAngle[{$CellContext`b, $CellContext`a, \
$CellContext`c}, "Counterclockwise"] == 90 Degree, 
                    Style[
                    
                    CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                    RGBColor[16/51, 176/255, 16/51]], 
                    
                    GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                    "Similar"], 
                    GeometricAssertion[{
                    Style[
                    InfiniteLine[{$CellContext`a, $CellContext`d}], 
                    RGBColor[253/255, 116/255, 0]], 
                    Style[
                    InfiniteLine[{$CellContext`e, $CellContext`c}], 
                    RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
                  Hold[{
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    BlankNullSequence[GeometricStep]]}] :> 
                  Hold[PlaneGeometry`GeometrySceneDrawerDump`x]], 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   BlankNullSequence[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], 
               Hold[{$CellContext`p1 == Style[
                   Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                   Opacity[0.5, 
                    RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == 
                 Style[
                   Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                   Opacity[0.5, 
                    RGBColor[242/255, 148/255, 148/255]]], 
                 PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d},
                    "Counterclockwise"] == 45 Degree, 
                 PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c},
                    "Counterclockwise"] == 90 Degree, 
                 Style[
                  
                  CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                  RGBColor[16/51, 176/255, 16/51]], 
                 GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                  "Similar"], 
                 GeometricAssertion[{
                   Style[
                    InfiniteLine[{$CellContext`a, $CellContext`d}], 
                    RGBColor[253/255, 116/255, 0]], 
                   Style[
                    InfiniteLine[{$CellContext`e, $CellContext`c}], 
                    RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]], 
              If[
               And[
               True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], 
               Replace[
                Part[
                 Hold[{
                   GeometricAssertion[{
                    
                    Triangle[{$CellContext`a, $CellContext`b, \
$CellContext`c}], 
                    
                    Triangle[{$CellContext`b, $CellContext`c, \
$CellContext`d}]}, "Similar"], 
                   EuclideanDistance[$CellContext`b, $CellContext`c] == 
                   EuclideanDistance[$CellContext`b, $CellContext`d], 
                   EuclideanDistance[$CellContext`a, $CellContext`b] == 
                   EuclideanDistance[$CellContext`a, $CellContext`c], 
                   PlanarAngle[{$CellContext`a, $CellContext`b, \
$CellContext`c}] == 
                   PlanarAngle[{$CellContext`a, $CellContext`c, \
$CellContext`b}] == 
                   PlanarAngle[{$CellContext`c, $CellContext`d, \
$CellContext`b}] == 
                   PlanarAngle[{$CellContext`d, $CellContext`c, \
$CellContext`b}] == 45 Degree, 
                   PlanarAngle[{$CellContext`b, $CellContext`a, \
$CellContext`d}] == 
                   PlanarAngle[{$CellContext`c, $CellContext`d, \
$CellContext`a}], 
                   PlanarAngle[{$CellContext`a, $CellContext`b, \
$CellContext`d}] == 135 Degree, 
                   EuclideanDistance[$CellContext`c, $CellContext`d] == 
                   EuclideanDistance[$CellContext`a, $CellContext`b] + 
                    EuclideanDistance[$CellContext`a, $CellContext`c], 
                   GeometricAssertion[{
                    Line[{$CellContext`c, $CellContext`d}], 
                    Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
                   GeometricAssertion[{
                    Line[{$CellContext`b, $CellContext`c}], 
                    Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
                   GeometricAssertion[{
                    Line[{$CellContext`a, $CellContext`d}], 
                    Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
                   GeometricAssertion[{
                    Line[{$CellContext`a, $CellContext`b}], 
                    Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"],
                    PlanarAngle[{$CellContext`b, $CellContext`a, \
$CellContext`c}] == 
                   PlanarAngle[{$CellContext`c, $CellContext`b, \
$CellContext`d}] == 
                   PlanarAngle[{$CellContext`d, $CellContext`c, \
$CellContext`a}] == 90 Degree, 
                   GeometricAssertion[{
                    Line[{$CellContext`a, $CellContext`b}], 
                    Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}], {
                 1}, PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], Hold[
                  Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                   Blank[]]] :> 
                Hold[{PlaneGeometry`GeometrySceneDrawerDump`x}]], {}]], 
             "Input"]], Delimiter, "Paste Complete GeometricScene" :> 
          CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              If[False, Identity, First][
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{$CellContext`p1 == Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Opacity[0.5, 
                   RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                  
                  Opacity[0.5, 
                   RGBColor[242/255, 148/255, 148/255]]], 
                PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
                  "Counterclockwise"] == 45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
                  "Counterclockwise"] == 90 Degree, 
                Style[
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                 RGBColor[16/51, 176/255, 16/51]], 
                
                GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                 "Similar"], 
                GeometricAssertion[{
                  Style[
                   InfiniteLine[{$CellContext`a, $CellContext`d}], 
                   RGBColor[253/255, 116/255, 0]], 
                  Style[
                   InfiniteLine[{$CellContext`e, $CellContext`c}], 
                   RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
              Hold[{
                GeometricAssertion[{
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]},
                  "Similar"], 
                EuclideanDistance[$CellContext`b, $CellContext`c] == 
                EuclideanDistance[$CellContext`b, $CellContext`d], 
                EuclideanDistance[$CellContext`a, $CellContext`b] == 
                EuclideanDistance[$CellContext`a, $CellContext`c], 
                PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
                PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
                PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
                PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
                45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
                PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}],
                 PlanarAngle[{$CellContext`a, $CellContext`b, \
$CellContext`d}] == 135 Degree, 
                EuclideanDistance[$CellContext`c, $CellContext`d] == 
                EuclideanDistance[$CellContext`a, $CellContext`b] + 
                 EuclideanDistance[$CellContext`a, $CellContext`c], 
                GeometricAssertion[{
                  Line[{$CellContext`c, $CellContext`d}], 
                  Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`b, $CellContext`c}], 
                  Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`d}], 
                  Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
                PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
                PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
                90 Degree, 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}]], 
             "Input"]], "Paste Algebraic Formulation" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[GeometricScene][
              First[
               Transpose[
                MapThread[Construct, {
                  Map[ReplaceAll, {
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                    Thread[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$\
 -> PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                  Transpose[
                  PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]], 
              Hold[{$CellContext`p1 == Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Opacity[0.5, 
                   RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                  
                  Opacity[0.5, 
                   RGBColor[242/255, 148/255, 148/255]]], 
                PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
                  "Counterclockwise"] == 45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
                  "Counterclockwise"] == 90 Degree, 
                Style[
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                 RGBColor[16/51, 176/255, 16/51]], 
                
                GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                 "Similar"], 
                GeometricAssertion[{
                  Style[
                   InfiniteLine[{$CellContext`a, $CellContext`d}], 
                   RGBColor[253/255, 116/255, 0]], 
                  Style[
                   InfiniteLine[{$CellContext`e, $CellContext`c}], 
                   RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}], 
              Hold[{
                GeometricAssertion[{
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]},
                  "Similar"], 
                EuclideanDistance[$CellContext`b, $CellContext`c] == 
                EuclideanDistance[$CellContext`b, $CellContext`d], 
                EuclideanDistance[$CellContext`a, $CellContext`b] == 
                EuclideanDistance[$CellContext`a, $CellContext`c], 
                PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
                PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
                PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
                PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
                45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
                PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}],
                 PlanarAngle[{$CellContext`a, $CellContext`b, \
$CellContext`d}] == 135 Degree, 
                EuclideanDistance[$CellContext`c, $CellContext`d] == 
                EuclideanDistance[$CellContext`a, $CellContext`b] + 
                 EuclideanDistance[$CellContext`a, $CellContext`c], 
                GeometricAssertion[{
                  Line[{$CellContext`c, $CellContext`d}], 
                  Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`b, $CellContext`c}], 
                  Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`d}], 
                  Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
                PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
                PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
                90 Degree, 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}]][
             "AlgebraicFormulation"], "Input"]], Delimiter, 
          "Paste Parameters" :> CellPrint[
            ExpressionCell[
             If[False, Identity, First][
              Transpose[
               MapThread[Construct, {
                 Map[ReplaceAll, {
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$], 
                   Thread[
                   PlaneGeometry`GeometrySceneDrawerDump`declaredQuantNames$$ -> 
                    PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$]}], 
                 Transpose[PlaneGeometry`GeometrySceneDrawerDump`rules$$]}]]],
              "Input"]], "Paste Hypotheses" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{$CellContext`p1 == Style[
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Opacity[0.5, 
                   RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                  
                  Opacity[0.5, 
                   RGBColor[242/255, 148/255, 148/255]]], 
                PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
                  "Counterclockwise"] == 45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
                  "Counterclockwise"] == 90 Degree, 
                Style[
                 
                 CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                 RGBColor[16/51, 176/255, 16/51]], 
                
                GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                 "Similar"], 
                GeometricAssertion[{
                  Style[
                   InfiniteLine[{$CellContext`a, $CellContext`d}], 
                   RGBColor[253/255, 116/255, 0]], 
                  Style[
                   InfiniteLine[{$CellContext`e, $CellContext`c}], 
                   RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]], 
             "Input"]], "Paste Conclusions" :> CellPrint[
            ExpressionCell[
             PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
             PlaneGeometry`GeometrySceneDrawerDump`inactivateScene][
              Hold[{
                GeometricAssertion[{
                  Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                  
                  Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]},
                  "Similar"], 
                EuclideanDistance[$CellContext`b, $CellContext`c] == 
                EuclideanDistance[$CellContext`b, $CellContext`d], 
                EuclideanDistance[$CellContext`a, $CellContext`b] == 
                EuclideanDistance[$CellContext`a, $CellContext`c], 
                PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
                PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
                PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
                PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
                45 Degree, 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
                PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}],
                 PlanarAngle[{$CellContext`a, $CellContext`b, \
$CellContext`d}] == 135 Degree, 
                EuclideanDistance[$CellContext`c, $CellContext`d] == 
                EuclideanDistance[$CellContext`a, $CellContext`b] + 
                 EuclideanDistance[$CellContext`a, $CellContext`c], 
                GeometricAssertion[{
                  Line[{$CellContext`c, $CellContext`d}], 
                  Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`b, $CellContext`c}], 
                  Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`d}], 
                  Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
                PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
                PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
                PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
                90 Degree, 
                GeometricAssertion[{
                  Line[{$CellContext`a, $CellContext`b}], 
                  Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}]], 
             "Input"]], Delimiter, "Find Conjectures" :> CellPrint[
            ExpressionCell[
             FindGeometricConjectures[
              PlaneGeometry`GeometrySceneDrawerDump`heldArgEval[
              GeometricScene][
               If[
               False, {{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
                    0.3589636561319966, -2.786052024902198}, $CellContext`e -> \
{1.4699982506662943`, 0.8545461777555546}, C["GeometricPoint"][
                    C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
                    0.5952111342824494, -0.8683159044148253}}, {
                  C["GeometricQuantity"][
                    C["Unspecified"][
                    "radius", 
                    "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], C[\
\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
                   1.9322298112451133`}}}, 
                
                First[{{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
                    0.3589636561319966, -2.786052024902198}, $CellContext`e -> \
{1.4699982506662943`, 0.8545461777555546}, C["GeometricPoint"][
                    C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
                    0.5952111342824494, -0.8683159044148253}}, {
                   C["GeometricQuantity"][
                    C["Unspecified"][
                    "radius", 
                    "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], C[\
\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
                    1.9322298112451133`}}}]], 
               Hold[{$CellContext`p1 == Style[
                   Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
                   Opacity[0.5, 
                    RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == 
                 Style[
                   Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
                   Opacity[0.5, 
                    RGBColor[242/255, 148/255, 148/255]]], 
                 PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d},
                    "Counterclockwise"] == 45 Degree, 
                 PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c},
                    "Counterclockwise"] == 90 Degree, 
                 Style[
                  
                  CircleThrough[{$CellContext`a, $CellContext`b, \
$CellContext`d, $CellContext`e}], 
                  RGBColor[16/51, 176/255, 16/51]], 
                 
                 GeometricAssertion[{$CellContext`p1, $CellContext`p2}, 
                  "Similar"], 
                 GeometricAssertion[{
                   Style[
                    InfiniteLine[{$CellContext`a, $CellContext`d}], 
                    RGBColor[253/255, 116/255, 0]], 
                   Style[
                    InfiniteLine[{$CellContext`e, $CellContext`c}], 
                    RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}]]], 
             "Input"]]}, Appearance -> None, MenuAppearance -> "Menu"], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`topLabel$$ = Dynamic[
     Grid[{{
        PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 2], 
        If[False, 
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`stepDescriptionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`step$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 110, 37.5},
             Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"],
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4, 1.5]], 
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
          Dynamic[
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 4]]], 
        PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
         Opacity[0]]}, 
       If[
        And[False, False], {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1, 1.5]}, 
        Nothing]}, Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`imageControls$$ = Grid[{{
       Graphics[{{
          GrayLevel[1], 
          
          Rectangle[{-
            Dynamic[First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
              10], -1}, {
            Dynamic[
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 1}, 
           RoundingRadius -> 0.5]}, {
          Thickness[Large], 
          RGBColor[0.161, 0.667, 0.887], 
          Text[
           Style["", Larger, 
            GrayLevel[0]], {0, 0}]}}, 
        ImageSize -> {
         20 Dynamic[
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 20}, 
        AspectRatio -> Full, PlotRangePadding -> None], 
       MouseAppearance[
        EventHandler[
         Dynamic[
          If[
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
           PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
         "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
           Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
        "LinkHand"], 
       MouseAppearance[
        Dynamic[
         Which[
         PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          EventHandler[
           Dynamic[PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
           "MouseClicked" :> (
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
             PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)}, 
           Method -> "Queued"], True, 
          PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{0, -1}, {1, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Line[{{-0.5, 0}, {0.5, 0}}], 
             Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
          AspectRatio -> Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
               PlaneGeometry`GeometrySceneDrawerDump`q}, {
              PlaneGeometry`GeometrySceneDrawerDump`q, 
               Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {0, 1}], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], 
            Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
          Full, PlotRangePadding -> None], {
         "MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
            Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                PlaneGeometry`GeometrySceneDrawerDump`q}, {
               PlaneGeometry`GeometrySceneDrawerDump`q, 
                Apply[Subtract, #, {1}]}]/10& )[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
        "LinkHand"], 
       MouseAppearance[
        EventHandler[
         Graphics[{{
            GrayLevel[0.9], 
            Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
            Thickness[Large], 
            RGBColor[0.161, 0.667, 0.887], {
             Arrowheads[{{1, 1, 
                Graphics[
                 Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
             Arrow[
              BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
          ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
          None], {"MouseClicked" :> (
           Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
             PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
           PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
             PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
        "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$ = Grid[{{
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 10], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 10], 
             20}, AspectRatio -> Full, PlotRangePadding -> None], 
          MouseAppearance[
           EventHandler[
            Dynamic[
             If[
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$, 
              PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$]], {
            "MouseClicked" :> (PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$ = 
              Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$])}], 
           "LinkHand"], 
          MouseAppearance[
           Dynamic[
            Which[
            PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$, 
             PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
             EventHandler[
              Dynamic[
              PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$], {
              "MouseClicked" :> (
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$; 
                PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = 
                 PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$)\
}, Method -> "Queued"], True, 
             PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$]]\
, "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{0, -1}, {1, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Line[{{-0.5, 0}, {0.5, 0}}], 
                Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# - 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                  PlaneGeometry`GeometrySceneDrawerDump`q}, {
                 PlaneGeometry`GeometrySceneDrawerDump`q, 
                  Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {0, 1}], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], 
               Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, 
             AspectRatio -> Full, PlotRangePadding -> None], {
            "MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = (# + 
               Table[{PlaneGeometry`GeometrySceneDrawerDump`q, -
                   PlaneGeometry`GeometrySceneDrawerDump`q}, {
                  PlaneGeometry`GeometrySceneDrawerDump`q, 
                   Apply[Subtract, #, {1}]}]/10& )[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$]])}], 
           "LinkHand"], 
          MouseAppearance[
           EventHandler[
            Graphics[{{
               GrayLevel[0.9], 
               Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
               Thickness[Large], 
               RGBColor[0.161, 0.667, 0.887], {
                Arrowheads[{{1, 1, 
                   Graphics[
                    Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
                Arrow[
                 BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
             ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> 
             None], {"MouseClicked" :> (
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
              PlaneGeometry`GeometrySceneDrawerDump`findPlotRange[
                PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
                 Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                  If[
                   And[
                   True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                   PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$]]])}], 
           "LinkHand"]}}, Spacings -> {0, 0}]}, {
       Grid[{{
          Graphics[{{
             GrayLevel[1], 
             Rectangle[{-5, -1}, {5, 1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style[
               Style["Conclusion", Larger, Bold, 
                GrayLevel[0.6]], Larger, 
               GrayLevel[0]], {0, 0}]}}, ImageSize -> {100, 20}, AspectRatio -> 
           Full, PlotRangePadding -> None], 
          Graphics[{{
             GrayLevel[1], 
             
             Rectangle[{-
               Dynamic[
                First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 
                 5], -1}, {
               Dynamic[
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
               1}, RoundingRadius -> 0.5]}, {
             Thickness[Large], 
             RGBColor[0.161, 0.667, 0.887], 
             Text[
              Style["", Larger, 
               GrayLevel[0]], {0, 0}]}}, 
           ImageSize -> {
            20 Dynamic[
              First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5], 
             20}, AspectRatio -> Full, PlotRangePadding -> None]}}, 
        Spacings -> {0, 0}]}, {
       MouseAppearance[
        ActionMenu[
         Dynamic[
          PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
           Pane[
            Part[
            PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
            ImageSize -> {
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
            Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
           First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 1.5]], {
         PlaneGeometry`AssertionWrapper[
            GeometricAssertion[{
              Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
              Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]}, 
             "Similar"], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 1), 
          PlaneGeometry`AssertionWrapper[
           EuclideanDistance[$CellContext`b, $CellContext`c] == 
            EuclideanDistance[$CellContext`b, $CellContext`d], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 2), 
          PlaneGeometry`AssertionWrapper[
           EuclideanDistance[$CellContext`a, $CellContext`b] == 
            EuclideanDistance[$CellContext`a, $CellContext`c], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 3), 
          PlaneGeometry`AssertionWrapper[
           PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
            PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
            PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
            PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
            45 Degree, {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 4), 
          PlaneGeometry`AssertionWrapper[
           PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
            PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 5), 
          PlaneGeometry`AssertionWrapper[
           PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`d}] == 
            135 Degree, {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 6), 
          PlaneGeometry`AssertionWrapper[
           EuclideanDistance[$CellContext`c, $CellContext`d] == 
            EuclideanDistance[$CellContext`a, $CellContext`b] + 
             EuclideanDistance[$CellContext`a, $CellContext`c], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 7), 
          PlaneGeometry`AssertionWrapper[
            GeometricAssertion[{
              Line[{$CellContext`c, $CellContext`d}], 
              Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 8), 
          PlaneGeometry`AssertionWrapper[
            GeometricAssertion[{
              Line[{$CellContext`b, $CellContext`c}], 
              Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 9), 
          PlaneGeometry`AssertionWrapper[
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`d}], 
              Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 10), 
          PlaneGeometry`AssertionWrapper[
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`b}], 
              Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 11), 
          PlaneGeometry`AssertionWrapper[
           PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
            PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
            PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
            90 Degree, {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 12), 
          PlaneGeometry`AssertionWrapper[
            GeometricAssertion[{
              Line[{$CellContext`a, $CellContext`b}], 
              Line[{$CellContext`c, $CellContext`d}]}, "Parallel"], {
            PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$, 
             PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$}] :> (
           PlaneGeometry`GeometrySceneDrawerDump`conclusion$$ = 13)}, 
         Appearance -> None], "LinkHand"]}}, Spacings -> {0, 0}], 
    PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$ = Dynamic[
     Grid[
      If[True, {{
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 1]}, {
         Grid[{{
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
             Style["Conclusion", Larger, Bold, 
              GrayLevel[0.6]], 5], 
            PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$["", 
             Dynamic[
             First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20 - 5]]}}, 
          Spacings -> {0, 0}]}, {
         PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
          Pane[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`conclusionList$$, 
            PlaneGeometry`GeometrySceneDrawerDump`conclusion$$], 
           ImageSize -> {
            First[PlaneGeometry`GeometrySceneDrawerDump`size$$] - 30, 37.5}, 
           Alignment -> {Center, Center}, ImageSizeAction -> "ShrinkToFit"], 
          First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/20, 
          1.5]}}, {{}}], Spacings -> {0, 0}]], 
    PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$ = Dynamic[
     MouseAppearance[
      Piecewise[{{
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = True; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    PlaneGeometry`GeometrySceneDrawerDump`index$; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> \
{#}]]]; Null)& , 
                    Function[
                    PlaneGeometry`GeometrySceneDrawerDump`loc$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; \
{PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicOptimizerInputs[
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`\
generatedPointPosLists$$, PlaneGeometry`GeometrySceneDrawerDump`relativePos$$,
                     PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]]], 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                    
                    Pick[
                    PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    CheckAbort[
                    TimeConstrained[
                    Fold[
                    PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
                    PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
                    
                    Transpose[{
                    PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
                    PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]], 
                    Flatten[
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                    C["GeometricPoint"][
                    BlankNullSequence[]]] -> 
                    Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                    Blank[]]) :> 
                    Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                    PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                    PlaneGeometry`GeometrySceneDrawerDump`c]], 
                    Apply[
                    Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {
                    1}]]]]; {
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
                    ReplaceAll[{
                    PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    Apply[Rule, 
                    Map[
                    Reverse, 
                    PlaneGeometry`GeometrySceneDrawerDump`varray$$], {1}]]; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
                    ReplaceAll[
                    Normal[
                    AssociationMap[
                    PlaneGeometry`GeometrySceneDrawerDump`point, 
                    PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
                    Select[
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
                    MemberQ[
                    PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
                    First[#]]& ]}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    ReplaceAll[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointCoords$$, PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; 
                    Null]}], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = 
            False)}, PassEventsDown -> True], 
         And[
          Not[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$], 
          PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$]}, {
         EventHandler[
          Dynamic[
           Replace[
            PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
             ReplaceAll[
              Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
               If[
                And[
                True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                 PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
                PlaneGeometry`GeometrySceneDrawerDump`step$$}]], 
              Map[{
                 Hue[0.58, 1, 1, 1], 
                 Pattern[PlaneGeometry`GeometrySceneDrawerDump`d, 
                  BlankNullSequence[]], 
                 Point[#]} :> {
                 Hue[0.64, 0.71, 0.37], 
                 AbsolutePointSize[21], 
                 Point[#], 
                 Hue[0.58, 1, 1, 1], PlaneGeometry`GeometrySceneDrawerDump`d, 
                 
                 Point[#]}& , 
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
                Part[
                 Pick[
                 PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]][
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$]], Graphics[
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`g$, 
               Blank[]], 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`o$, 
               BlankNullSequence[]]] :> 
            Graphics[{PlaneGeometry`GeometrySceneDrawerDump`g$, 
               MapIndexed[
                
                Function[{
                 PlaneGeometry`GeometrySceneDrawerDump`location$, 
                  PlaneGeometry`GeometrySceneDrawerDump`index$}, 
                 MouseAppearance[
                  Locator[
                   Dynamic[
                   PlaneGeometry`GeometrySceneDrawerDump`location$, {(
                    PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
                    PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = 
                    False; PlaneGeometry`GeometrySceneDrawerDump`current$$ = 
                    Union[PlaneGeometry`GeometrySceneDrawerDump`current$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]; 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ = If[
                    And[
                    True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
                    PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
                    PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}]; 
                    PlaneGeometry`GeometrySceneDrawerDump`ghosts$$ = Map[
                    PlaneGeometry`GeometrySceneDrawerDump`addStylings[Orange], 
                    Part[
                    PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$\
, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$]]; Null)& , (
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Extract[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`index$]] = #; 
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
                    ReplacePart[
                    PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`picPart$$ -> 
                    ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`ghosts$$, 
                    Thread[
                    Part[PlaneGeometry`GeometrySceneDrawerDump`\
declaredPointNames$$, PlaneGeometry`GeometrySceneDrawerDump`currentPos$$] -> 
                    Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$,
                     PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                    Part[
                    Apply[Join, 
                    Take[
                    PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                    PlaneGeometry`GeometrySceneDrawerDump`step$$]], 
                    PlaneGeometry`GeometrySceneDrawerDump`current$$]]]]]; 
                    Null)& , Null& }], None], "Arrow"]], 
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 Apply[Join, 
                  Take[
                  PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
                   PlaneGeometry`GeometrySceneDrawerDump`step$$]]]]}, 
              PlaneGeometry`GeometrySceneDrawerDump`o$, PlotRange -> 
              Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
              PlaneGeometry`GeometrySceneDrawerDump`size$$]]], {
           If[
           PlaneGeometry`GeometrySceneDrawerDump`declaredPoints$$ === 
            PlaneGeometry`GeometrySceneDrawerDump`declaredQuants$$ === {}, 
            Nothing, "MouseClicked" :> 
            If[PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$, 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               False; NotebookDelete[
               PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$], 
              PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = 
               True; PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$ = 
               AttachCell[PlaneGeometry`GeometrySceneDrawerDump`boxObj$$, 
                 
                 DynamicModule[{}, 
                  PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$, 
                  InheritScope -> True], {Left, Bottom}, 0, {Left, Top}]]], 
           "MouseDown" :> (
            PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
             MousePosition["GraphicsAbsolute"]; 
            PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = True; Null), 
           "MouseDragged" :> 
           If[PlaneGeometry`GeometrySceneDrawerDump`panQ$$, 
             PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$ = 
              MousePosition["GraphicsAbsolute"]; AddTo[
               Part[
               PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
                PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ - 
                PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$)/(
               First[PlaneGeometry`GeometrySceneDrawerDump`size$$]/Abs[
                Apply[Subtract, 
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$], {1}]])]; 
             PlaneGeometry`GeometrySceneDrawerDump`oldMousePos$$ = 
              PlaneGeometry`GeometrySceneDrawerDump`newMousePos$$; Null], 
           "MouseUp" :> (PlaneGeometry`GeometrySceneDrawerDump`panQ$$ = False; 
            Null)}, PassEventsDown -> True], 
         And[PlaneGeometry`GeometrySceneDrawerDump`pauseQ$$, 
          Not[PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$]]}}, 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = 
        True; {PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
          PlaneGeometry`GeometrySceneDrawerDump`constraint$$} = 
        PlaneGeometry`GeometrySceneDrawerDump`findDynamicOptimizerInputs[
         PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
          PlaneGeometry`GeometrySceneDrawerDump`step$$, 
          PlaneGeometry`GeometrySceneDrawerDump`stepCount$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointStepAssoc$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`generatedPointPosLists$$, 
          PlaneGeometry`GeometrySceneDrawerDump`pointIndices$$, 
          PlaneGeometry`GeometrySceneDrawerDump`quantPosLists$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          PlaneGeometry`GeometrySceneDrawerDump`currentPos$$, 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$], 
          Pick[
          PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$, 
           PlaneGeometry`GeometrySceneDrawerDump`fixedQuantBools$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = CheckAbort[
          TimeConstrained[
           Fold[
           PlaneGeometry`GeometrySceneDrawerDump`\
findDynamicRulesFromOptimizer, 
            PlaneGeometry`GeometrySceneDrawerDump`fixedValueRules$$, 
            
            Transpose[{
             PlaneGeometry`GeometrySceneDrawerDump`optimizerInputs$$, 
              PlaneGeometry`GeometrySceneDrawerDump`coordSeeds$$, 
              PlaneGeometry`GeometrySceneDrawerDump`constraint$$}]], 
           PlaneGeometry`GeometrySceneDrawerDump`timeLimit$$, 
           Flatten[
            ReplaceAll[
             ReplaceAll[
              Part[
              PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
               PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                 C["GeometricPoint"][
                  BlankNullSequence[]]] -> 
               Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                 Blank[]]) :> 
              Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                 PlaneGeometry`GeometrySceneDrawerDump`x] -> 
                PlaneGeometry`GeometrySceneDrawerDump`c]], 
             Apply[
             Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]], 
          Flatten[
           ReplaceAll[
            ReplaceAll[
             Part[
             PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
              PlaneGeometry`GeometrySceneDrawerDump`instance$$], (
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`x, 
                C["GeometricPoint"][
                 BlankNullSequence[]]] -> 
              Pattern[PlaneGeometry`GeometrySceneDrawerDump`c, 
                Blank[]]) :> 
             Thread[PlaneGeometry`GeometrySceneDrawerDump`point[
                PlaneGeometry`GeometrySceneDrawerDump`x] -> 
               PlaneGeometry`GeometrySceneDrawerDump`c]], 
            Apply[
            Rule, PlaneGeometry`GeometrySceneDrawerDump`varray$$, {1}]]]]; 
       PlaneGeometry`GeometrySceneDrawerDump`pics$$ = 
        ReplacePart[PlaneGeometry`GeometrySceneDrawerDump`pics$$, If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$, -1}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, -1}] -> {}]; {
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`pointCoords$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`quantVals$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]} = 
        ReplaceAll[{
          PlaneGeometry`GeometrySceneDrawerDump`pointAliases$$, 
           PlaneGeometry`GeometrySceneDrawerDump`quantAliases$$}, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = ReplaceAll[
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$], 
          Apply[Rule, 
           Map[Reverse, PlaneGeometry`GeometrySceneDrawerDump`varray$$], {
           1}]]; Part[
         PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = {
          ReplaceAll[
           Normal[
            AssociationMap[
            PlaneGeometry`GeometrySceneDrawerDump`point, 
             PlaneGeometry`GeometrySceneDrawerDump`pointNames$$]], 
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$]], 
          Select[
           Part[
           PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], MemberQ[
           PlaneGeometry`GeometrySceneDrawerDump`quantNames$$, 
            First[#]]& ]}; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        ReplaceAll[PlaneGeometry`GeometrySceneDrawerDump`declaredPointNames$$, 
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$, 1]]; 
       Part[PlaneGeometry`GeometrySceneDrawerDump`newLocations$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$] = 
        Part[PlaneGeometry`GeometrySceneDrawerDump`declaredPointCoords$$, 
          PlaneGeometry`GeometrySceneDrawerDump`instance$$]; 
       PlaneGeometry`GeometrySceneDrawerDump`current$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`currentPos$$ = {}; 
       PlaneGeometry`GeometrySceneDrawerDump`unchangedQ$$ = True; 
       PlaneGeometry`GeometrySceneDrawerDump`updatingQ$$ = False; Null], 
      "DragGraphics"], SynchronousUpdating -> False], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControls$$ = EventHandler[
     Panel[
      Grid[{{
         Text[
          Style["Points", Bold]]}, {
         Grid[{{
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 1]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   1], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 1], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 2]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   2], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 2], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 3]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   3], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 3], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 4]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   4], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 4], Not]}, 
              PassEventsUp -> False], "LinkHand"], 
            MouseAppearance[
             EventHandler[
              Dynamic[
               If[
                Part[
                PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                 PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], 
                Graphics[
                 Join[{
                   Hue[0.64, 0.71, 0.37], 
                   AbsolutePointSize[21], 
                   Point[{0, 0}]}, 
                  Part[
                  PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$\
, 5]], ImageSize -> {21, 21}], 
                Graphics[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$,
                   5], ImageSize -> {21, 21}]]], {"MouseClicked" :> ApplyTo[
                 Part[
                 PlaneGeometry`GeometrySceneDrawerDump`fixedPointBools$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`instance$$, 
                  PlaneGeometry`GeometrySceneDrawerDump`step$$, 5], Not]}, 
              PassEventsUp -> False], "LinkHand"]}}]}, {
         Grid[{{
            Graphics[{
              Hue[0.64, 0.71, 0.37], 
              AbsolutePointSize[11], 
              Point[{0, 0}], 
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "pinned", 
            Graphics[{
              Hue[0.58, 1, 1, 1], 
              AbsolutePointSize[7], 
              Point[{0, 0}]}, ImageSize -> {11, 11}], "unpinned"}}]}}, 
       Alignment -> Left, Dividers -> False], Background -> GrayLevel[0.9]], {
     "MouseClicked" :> (
       PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False; 
       NotebookDelete[
        PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$])}], 
    PlaneGeometry`GeometrySceneDrawerDump`attachedControlsQ$$ = False, 
    PlaneGeometry`GeometrySceneDrawerDump`attachedCell$$, 
    PlaneGeometry`GeometrySceneDrawerDump`display$$, 
    PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$ = MouseAppearance[
    
     Dynamic[
      EventHandler[
       Tooltip[
        Append[
         PlaneGeometry`GeometrySceneDrawerDump`makeGraphicsFromRules[
          Extract[PlaneGeometry`GeometrySceneDrawerDump`pics$$, 
           If[
            And[
            True, PlaneGeometry`GeometrySceneDrawerDump`step$$ == 
             PlaneGeometry`GeometrySceneDrawerDump`stepCount$$], {
            PlaneGeometry`GeometrySceneDrawerDump`step$$, 
             PlaneGeometry`GeometrySceneDrawerDump`conclusion$$}, {
            PlaneGeometry`GeometrySceneDrawerDump`step$$}]]][
          Part[
          PlaneGeometry`GeometrySceneDrawerDump`rules$$, 
           PlaneGeometry`GeometrySceneDrawerDump`instance$$]], {
         PlotRange -> 
          Part[PlaneGeometry`GeometrySceneDrawerDump`plotRanges$$, 
            PlaneGeometry`GeometrySceneDrawerDump`instance$$], ImageSize -> 
          PlaneGeometry`GeometrySceneDrawerDump`size$$}], "Show Controls"], {
       "MouseClicked" :> (
         PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$ = True)}, 
       PassEventsUp -> False]], "LinkHand"], 
    PlaneGeometry`GeometrySceneDrawerDump`leftArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1.5}, {1, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{0.25, 0.5}, {-0.25, 0}, {0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`rightArrowIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1.5}, {0, 1.5}], 
       Rectangle[{-1, -1.5}, {1, 1.5}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.25, 0.5}, {0.25, 0}, {-0.25, -0.5}}]}}, 
     ImageSize -> {20, 30.}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`autoTrueIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Line[{{-1.75, 0}, {-1.375, -0.375}, {-0.75, 0.5}}], 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`autoFalseIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {2.5, 1}], 
       Rectangle[{-2.5, -1}, {2.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {{
         EdgeForm[{
           Thickness[Tiny], 
           RGBColor[0.161, 0.667, 0.887]}], 
         GrayLevel[1], 
         RegularPolygon[{-1.25, 0}, 0.75, 4]}, 
        Text[
         Style["Auto", Larger, Bold], {1, 0}]}}}, ImageSize -> {50., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneTrueIcon$$ = Graphics[{{
       RGBColor[0.161, 0.667, 0.887], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.9]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneInactiveIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold, 
         GrayLevel[0.6]]]}}, ImageSize -> {90., 20}, AspectRatio -> Full, 
     PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`updateSceneFalseIcon$$ = 
    Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-4.5, -1}, {0, 1}], 
       Rectangle[{-4.5, -1}, {4.5, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Text[
        Style["Update Scene", Larger, Bold]]}}, ImageSize -> {90., 20}, 
     AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomInIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{0, -1}, {1, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Line[{{-0.5, 0}, {0.5, 0}}], 
        Line[{{0, -0.5}, {0, 0.5}}]}}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`zoomOutIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {0, 1}], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], 
       Line[{{-0.5, 0}, {0.5, 0}}]}}, ImageSize -> {20, 20}, AspectRatio -> 
     Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`recenterIcon$$ = Graphics[{{
       GrayLevel[0.9], 
       Rectangle[{-1, -1}, {1, 1}, RoundingRadius -> 0.5]}, {
       Thickness[Large], 
       RGBColor[0.161, 0.667, 0.887], {
        Arrowheads[{{1, 1, 
           Graphics[
            Polygon[{{0, -0.25}, {0, 0.25}, {0.25, 0}}]]}}], 
        Arrow[
         BezierCurve[{{0.75, -0.25}, {0.25, 0.25}, {-0.25, 0}}]]}}}, 
     ImageSize -> {20, 20}, AspectRatio -> Full, PlotRangePadding -> None], 
    PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$, 
    PlaneGeometry`GeometrySceneDrawerDump`pointPosArray$$ = {{{1, 2, 3, 4, 
    5}}}, PlaneGeometry`GeometrySceneDrawerDump`quantPosArray$$ = {{{}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedPointStylings$$ = {{{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" a ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" b ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" c ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" d ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}, {{
       Hue[0.58, 1, 1, 1], 
       AbsolutePointSize[17], 
       Point[{0, 0}]}, 
      Inset[
       Style[" e ", 
        RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {0, 
       0}], {
       AbsolutePointSize[17], 
       Opacity[0], 
       Point[{0, 0}]}}}, 
    PlaneGeometry`GeometrySceneDrawerDump`unfixedQuantStylings$$ = {}, 
    PlaneGeometry`GeometrySceneDrawerDump`cloudDisplay$$ = Graphics[{{
       AbsoluteThickness[2], 
       GrayLevel[0.7], 
       EdgeForm[{
         GrayLevel[0.7], 
         Thickness[Large]}], {{
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[52, 85], 
           Rational[11, 17], 
           Rational[166, 255]]], 
         Tooltip[
          
          Polygon[{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}}], "p1"]}, {
         Opacity[0.2], 
         Opacity[0.5, 
          RGBColor[
           Rational[242, 255], 
           Rational[148, 255], 
           Rational[148, 255]]], 
         Tooltip[
          
          Polygon[{{-1.0807299009386648`, -1.8299307467580948`}, \
{-0.1246086227945616, -0.39023718968743326`}, {
           0.3589636561319966, -2.786052024902198}}], "p2"]}, {
         Opacity[0.2], 
         RGBColor[1, 0.5, 0], 
         Opacity[0.5], 
         EdgeForm[{
           RGBColor[1, 0.5, 0], 
           Thickness[Large]}], 
         Tooltip[
          
          Polygon[{{-1.3225160404019438`, -0.6320233291507121}, \
{-1.0807299009386648`, -1.8299307467580948`}, {-0.1246086227945616, \
-0.39023718968743326`}}], "p1"]}, {
         Opacity[0.2], 
         RGBColor[1, 0.5, 0], 
         Opacity[0.5], 
         EdgeForm[{
           RGBColor[1, 0.5, 0], 
           Thickness[Large]}], 
         Tooltip[
          
          Polygon[{{-1.0807299009386648`, -1.8299307467580948`}, \
{-0.1246086227945616, -0.39023718968743326`}, {
           0.3589636561319966, -2.786052024902198}}], "p2"]}, {{
          Opacity[0], 
          Circle[{-0.1246086227945616, -0.39023718968743326`}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], {{
           Opacity[0], 
           Tooltip[
            Disk[{-0.1246086227945616, -0.39023718968743326`}, 
             Offset[{17, 17}], {-2.157029921127594, -1.3716317577301456`}], 
            TraditionalForm[45 Degree]]}, 
          Circle[{-0.1246086227945616, -0.39023718968743326`}, 
           Offset[{17, 17}], {-2.157029921127594, -1.3716317577301456`}]}}, {{
         
          Opacity[0], 
          Circle[{-1.3225160404019438`, -0.6320233291507121}, 
           Offset[{17, 17}]]}, 
         AbsoluteThickness[2], 
         GrayLevel[0.7], 
         Line[{
           
           Offset[{2.3783241167181357`, -11.783190331817478`}, \
{-1.3225160404019438`, -0.6320233291507121}], 
           
           Offset[{14.161514448535613`, -9.404866215099343}, \
{-1.3225160404019438`, -0.6320233291507121}], 
           
           Offset[{11.783190331817478`, 
            2.3783241167181357`}, {-1.3225160404019438`, \
-0.6320233291507121}]}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-1.0807299009386648`, -1.8299307467580948`}, \
{-0.1246086227945616, -0.39023718968743326`}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-0.1246086227945616, -0.39023718968743326`}, {
          0.3589636561319966, -2.786052024902198}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-1.0807299009386648`, -1.8299307467580948`}, \
{-1.3225160404019438`, -0.6320233291507121}}]}, {
         Dashing[{Small, Small}], 
         CapForm["None"], 
         Line[{{-1.3225160404019438`, -0.6320233291507121}, \
{-0.1246086227945616, -0.39023718968743326`}}]}, {
         RGBColor[
          Rational[16, 51], 
          Rational[176, 255], 
          Rational[16, 51]], 
         Circle[{0.5952111342824494, -0.8683159044148253}, 
          1.9322298112451133`]}, {
         RGBColor[
          Rational[253, 255], 
          Rational[116, 255], 0], 
         InfiniteLine[{-1.3225160404019438`, -0.6320233291507121}, {
          1.6814796965339405`, -2.1540286957514856`}]}, {
         RGBColor[
          Rational[107, 255], 
          Rational[31, 255], 
          Rational[59, 85]], 
         InfiniteLine[{1.4699982506662943`, 
          0.8545461777555546}, {-1.5946068734608558`, -1.244783367442988}]}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-1.3225160404019438`, -0.6320233291507121}]}, 
         Inset[
          Style[" a ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-1.3225160404019438`, -0.6320233291507121}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-1.3225160404019438`, -0.6320233291507121}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{0.3589636561319966, -2.786052024902198}]}, 
         Inset[
          Style[" d ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          0.3589636561319966, -2.786052024902198}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{0.3589636561319966, -2.786052024902198}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{1.4699982506662943`, 0.8545461777555546}]}, 
         Inset[
          Style[" e ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> GrayLevel[1]], {
          1.4699982506662943`, 0.8545461777555546}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{1.4699982506662943`, 0.8545461777555546}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-0.1246086227945616, -0.39023718968743326`}]}, 
         Inset[
          Style[" c ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-0.1246086227945616, -0.39023718968743326`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-0.1246086227945616, -0.39023718968743326`}]}}, {{
          Hue[0.58, 1, 1, 1], 
          AbsolutePointSize[17], 
          Point[{-1.0807299009386648`, -1.8299307467580948`}]}, 
         Inset[
          Style[" b ", 
           RGBColor[0, 0, 1], FontSize -> 11, FontColor -> 
           GrayLevel[1]], {-1.0807299009386648`, -1.8299307467580948`}], {
          AbsolutePointSize[17], 
          Opacity[0], 
          Point[{-1.0807299009386648`, -1.8299307467580948`}]}}}, {}}}, 
     Background -> GrayLevel[1], {
     PlotRange -> {{-2.0234646392116864`, 
       3.2138869077765855`}, {-3.486991677908961, 1.7503598690793107`}}, 
      ImageSize -> {{380, 380}, {380, 380}}}], 
    PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = BoxObject[1802673]}, 
    StyleBox[
     FrameBox[
      PaneBox[
       PaneSelectorBox[{False->
        DynamicBox[ToBoxes[
          If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
           Column[{
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
             Pane[
             PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
              Dynamic[PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                   First[#], 205] {1, 1})& ], ImageSizeAction -> 
              "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
             If[
             False, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
              PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
           PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
          StandardForm],
         ImageSizeCache->{380., {243.634033203125, 249.365966796875}}], True->
        
        TagBox[
         DynamicBox[ToBoxes[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              True, PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$], 
           StandardForm],
          ImageSizeCache->{380., {244.134033203125, 249.865966796875}}],
         MouseAppearanceTag["Arrow"]]}, Dynamic[
         CurrentValue["MouseOver"]],
        FrameMargins->0,
        ImageSize->All],
       ImageSize->Dynamic[
        PlaneGeometry`GeometrySceneDrawerDump`size$$ + {0, 65 + If[
             And[False, False], 30, 0] + If[True, 50, 0]}]],
      FrameStyle->GrayLevel[0.9],
      StripOnInput->False],
     StripOnInput->False,
     DynamicEvaluationTimeout->20,
     ImageSize->Automatic,
     BaseStyle -> {
      SetterBoxOptions -> {ImageSize -> Automatic}, 
       PopupMenuBoxOptions -> {ImageSize -> Automatic}}],
    DynamicModuleValues:>{{
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`display$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`display$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
             Blank[]]]] :> Dynamic[
           If[PlaneGeometry`GeometrySceneDrawerDump`showControlsQ$$, 
            Column[{
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`topControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`topLabel$$], 
              Pane[
              PlaneGeometry`GeometrySceneDrawerDump`dynamicScene$$, ImageSize -> 
               Dynamic[
                PlaneGeometry`GeometrySceneDrawerDump`size$$, (
                 PlaneGeometry`GeometrySceneDrawerDump`size$$ = Max[
                    First[#], 205] {1, 1})& ], ImageSizeAction -> 
               "ResizeToFit", AppearanceElements -> {"ResizeArea"}], 
              If[
              PlaneGeometry`GeometrySceneDrawerDump`mouseoverQ$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomControls$$, 
               PlaneGeometry`GeometrySceneDrawerDump`bottomLabel$$]}], 
            PlaneGeometry`GeometrySceneDrawerDump`noControlsScene$$]]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`hamburgerIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`color, 
             RepeatedNull[
              Blank[], 1]]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Line[{{-0.75, 0.5}, {0.75, 0.5}}], 
            Line[{{-0.75, 0}, {0.75, 0}}], 
            Line[{{-0.75, -0.5}, {0.75, -0.5}}]}, "both", 2, 1.5, 
           PlaneGeometry`GeometrySceneDrawerDump`color]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`popupIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> 
         PlaneGeometry`GeometrySceneDrawerDump`makeIcon[{
            Text[
             Style[
             PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
             0}], 
            
            Line[{{PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1.5, 
               0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 1, -0.25}, {
              PlaneGeometry`GeometrySceneDrawerDump`widthFactor - 0.5, 
               0.25}}]}, "both", 
           PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor]}}, {
      DownValues[PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$] = {
        HoldPattern[
           PlaneGeometry`GeometrySceneDrawerDump`labelIcon$$[
            Pattern[PlaneGeometry`GeometrySceneDrawerDump`text, 
             Blank[]], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
              Blank[]], 1], 
            Optional[
             Pattern[PlaneGeometry`GeometrySceneDrawerDump`heightFactor, 
              Blank[]], 1]]] :> PlaneGeometry`GeometrySceneDrawerDump`makeIcon[
           Text[
            Style[
            PlaneGeometry`GeometrySceneDrawerDump`text, Larger, Black], {0, 
            0}], "both", PlaneGeometry`GeometrySceneDrawerDump`widthFactor, 
           PlaneGeometry`GeometrySceneDrawerDump`heightFactor, White]}}},
    Initialization:>(GeometricScene; 
     PlaneGeometry`GeometrySceneDrawerDump`boxObj$$ = EvaluationBox[])],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  GeometricScene[{{$CellContext`a -> {-1.3225160404019438`, \
-0.6320233291507121}, $CellContext`b -> {-1.0807299009386648`, \
-1.8299307467580948`}, $CellContext`c -> {-0.1246086227945616, \
-0.39023718968743326`}, $CellContext`d -> {
      0.3589636561319966, -2.786052024902198}, $CellContext`e -> {
      1.4699982506662943`, 0.8545461777555546}, C["GeometricPoint"][
       C["Unspecified"]["ref", "{1, 5, 1, 0}"]] -> {
      0.5952111342824494, -0.8683159044148253}}, {C["GeometricQuantity"][
       C["Unspecified"][
       "radius", 
        "{{C[\"GeometricPoint\"][a], C[\"GeometricPoint\"][b], \
C[\"GeometricPoint\"][d], C[\"GeometricPoint\"][e]}, {1, 5, 1, 0}}"]] -> 
     1.9322298112451133`}}, {$CellContext`p1 == Style[
      Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
      Opacity[0.5, 
       RGBColor[52/85, 11/17, 166/255]]], $CellContext`p2 == Style[
      Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}], 
      Opacity[0.5, 
       RGBColor[242/255, 148/255, 148/255]]], 
    PlanarAngle[{$CellContext`b, $CellContext`c, $CellContext`d}, 
      "Counterclockwise"] == 45 Degree, 
    PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}, 
      "Counterclockwise"] == 90 Degree, 
    Style[
     CircleThrough[{$CellContext`a, $CellContext`b, $CellContext`d, \
$CellContext`e}], 
     RGBColor[16/51, 176/255, 16/51]], 
    GeometricAssertion[{$CellContext`p1, $CellContext`p2}, "Similar"], 
    GeometricAssertion[{
      Style[
       InfiniteLine[{$CellContext`a, $CellContext`d}], 
       RGBColor[253/255, 116/255, 0]], 
      Style[
       InfiniteLine[{$CellContext`e, $CellContext`c}], 
       RGBColor[107/255, 31/255, 59/85]]}, "Perpendicular"]}, {
    GeometricAssertion[{
      Triangle[{$CellContext`a, $CellContext`b, $CellContext`c}], 
      Triangle[{$CellContext`b, $CellContext`c, $CellContext`d}]}, "Similar"],
     EuclideanDistance[$CellContext`b, $CellContext`c] == 
    EuclideanDistance[$CellContext`b, $CellContext`d], 
    EuclideanDistance[$CellContext`a, $CellContext`b] == 
    EuclideanDistance[$CellContext`a, $CellContext`c], 
    PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`c}] == 
    PlanarAngle[{$CellContext`a, $CellContext`c, $CellContext`b}] == 
    PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`b}] == 
    PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`b}] == 
    45 Degree, PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`d}] == 
    PlanarAngle[{$CellContext`c, $CellContext`d, $CellContext`a}], 
    PlanarAngle[{$CellContext`a, $CellContext`b, $CellContext`d}] == 
    135 Degree, EuclideanDistance[$CellContext`c, $CellContext`d] == 
    EuclideanDistance[$CellContext`a, $CellContext`b] + 
     EuclideanDistance[$CellContext`a, $CellContext`c], 
    GeometricAssertion[{
      Line[{$CellContext`c, $CellContext`d}], 
      Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
    GeometricAssertion[{
      Line[{$CellContext`b, $CellContext`c}], 
      Line[{$CellContext`b, $CellContext`d}]}, "Perpendicular"], 
    GeometricAssertion[{
      Line[{$CellContext`a, $CellContext`d}], 
      Line[{$CellContext`c, $CellContext`e}]}, "Perpendicular"], 
    GeometricAssertion[{
      Line[{$CellContext`a, $CellContext`b}], 
      Line[{$CellContext`a, $CellContext`c}]}, "Perpendicular"], 
    PlanarAngle[{$CellContext`b, $CellContext`a, $CellContext`c}] == 
    PlanarAngle[{$CellContext`c, $CellContext`b, $CellContext`d}] == 
    PlanarAngle[{$CellContext`d, $CellContext`c, $CellContext`a}] == 
    90 Degree, 
    GeometricAssertion[{
      Line[{$CellContext`a, $CellContext`b}], 
      Line[{$CellContext`c, $CellContext`d}]}, "Parallel"]}],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.8180469493781643`*^9, 3.818046964867505*^9}, 
   3.818047239442769*^9, 3.818047275135398*^9, {3.818047392329338*^9, 
   3.818047395026561*^9}, 3.8180476129381104`*^9, {3.818048062120154*^9, 
   3.818048074763218*^9}, {3.818048703037801*^9, 3.818048711942824*^9}, {
   3.818112614500717*^9, 3.818112647533256*^9}, {3.8192086502434387`*^9, 
   3.8192086542438927`*^9}, 3.819208758114933*^9, 3.819208960509218*^9, 
   3.819209040032299*^9, 3.819209158911611*^9, {3.8192101117318907`*^9, 
   3.8192101876026363`*^9}, 3.819210280044262*^9, 3.819211706057375*^9, 
   3.819211770101658*^9, 3.819213030300247*^9, 3.819368033227089*^9, 
   3.8196436241635036`*^9, 3.8482611013503923`*^9, {3.848261156299589*^9, 
   3.848261187402771*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"a5c7f51e-fa5f-42fc-8083-544444aeb657"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"#", ",", "12"}], "]"}], "&"}], "/@", 
    RowBox[{"Sort", "@", 
     RowBox[{"gc", "[", "\"\<Conclusions\>\"", "]"}]}]}], "//", 
   RowBox[{
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        RowBox[{"Column", "[", 
          DynamicBox[
           FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
        GridBox[{{
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["368", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     Column[#, 
      Sequence[Spacings -> 2, Dividers -> Center, FrameStyle -> LightGray]],
     SelectWithContents->True,
     Selectable->False], "&"}]}], "//", 
  RowBox[{
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       RowBox[{"Panel", "[", 
         DynamicBox[
          FEPrivate`FrontEndResource["FEBitmaps", "IconizeEllipsis"]], "]"}], 
       
       GridBox[{{
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["592", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Panel[#, 
     (Style[#, 12]& )["Geometric Conjectures"], {{Top, Center}}, FrameMargins -> 
     20],
    SelectWithContents->True,
    Selectable->False], "&"}]}]], "Input",
 CellChangeTimes->{{3.81804692289716*^9, 3.818047045974197*^9}, {
   3.8180471397559767`*^9, 3.818047144539102*^9}, {3.8180472907719097`*^9, 
   3.8180472929991198`*^9}, {3.818047417324525*^9, 3.818047497742963*^9}, 
   3.818047576583783*^9, {3.818047621301103*^9, 3.818047630156905*^9}, {
   3.8180478258935843`*^9, 3.818047834117928*^9}, {3.818047917000574*^9, 
   3.81804792052765*^9}, {3.8180480197594137`*^9, 3.818048023871727*^9}, {
   3.8180480818083363`*^9, 3.818048095187972*^9}, {3.818112568244179*^9, 
   3.818112576809157*^9}, 3.848261046465315*^9, {3.8482611101790237`*^9, 
   3.8482611486050262`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"1864539b-f181-435c-9bc2-4f7f0482ce6e"],

Cell[BoxData[
 TemplateBox[{
   PanelBox[
    TagBox[
     GridBox[{{
        StyleBox[
         RowBox[{
           RowBox[{"EuclideanDistance", "[", 
             RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", 
           RowBox[{"EuclideanDistance", "[", 
             RowBox[{"a", ",", "c"}], "]"}]}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           RowBox[{"EuclideanDistance", "[", 
             RowBox[{"b", ",", "c"}], "]"}], "\[Equal]", 
           RowBox[{"EuclideanDistance", "[", 
             RowBox[{"b", ",", "d"}], "]"}]}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           RowBox[{"EuclideanDistance", "[", 
             RowBox[{"c", ",", "d"}], "]"}], "\[Equal]", 
           RowBox[{
             RowBox[{"EuclideanDistance", "[", 
               RowBox[{"a", ",", "b"}], "]"}], "+", 
             RowBox[{"EuclideanDistance", "[", 
               RowBox[{"a", ",", "c"}], "]"}]}]}], 12, StripOnInput -> 
         False]}, {
        StyleBox[
         RowBox[{
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", "d"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{"135", " ", "\[Degree]"}]}], 12, StripOnInput -> False]}, {
       
        StyleBox[
         RowBox[{
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"b", ",", "a", ",", "d"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"c", ",", "d", ",", "a"}], "}"}], "]"}]}], 12, 
         StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"b", ",", "a", ",", "c"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"c", ",", "b", ",", "d"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"d", ",", "c", ",", "a"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{"90", " ", "\[Degree]"}]}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"a", ",", "c", ",", "b"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"c", ",", "d", ",", "b"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{
             
             TemplateBox[{"PlanarAngle"}, "InactiveHead", BaseStyle -> 
              "Inactive", Tooltip -> "Inactive[PlanarAngle]", SyntaxForm -> 
              "Symbol"], "[", 
             RowBox[{"{", 
               RowBox[{"d", ",", "c", ",", "b"}], "}"}], "]"}], "\[Equal]", 
           RowBox[{"45", " ", "\[Degree]"}]}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           
           TemplateBox[{"GeometricAssertion"}, "InactiveHead", BaseStyle -> 
            "Inactive", Tooltip -> "Inactive[GeometricAssertion]", SyntaxForm -> 
            "Symbol"], "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "c"}], "}"}], "]"}]}], "}"}], ",", 
             "\"Perpendicular\""}], "]"}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           
           TemplateBox[{"GeometricAssertion"}, "InactiveHead", BaseStyle -> 
            "Inactive", Tooltip -> "Inactive[GeometricAssertion]", SyntaxForm -> 
            "Symbol"], "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "b"}], "}"}], "]"}], ",", 
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"c", ",", "d"}], "}"}], "]"}]}], "}"}], ",", 
             "\"Parallel\""}], "]"}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           
           TemplateBox[{"GeometricAssertion"}, "InactiveHead", BaseStyle -> 
            "Inactive", Tooltip -> "Inactive[GeometricAssertion]", SyntaxForm -> 
            "Symbol"], "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "d"}], "}"}], "]"}], ",", 
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"c", ",", "e"}], "}"}], "]"}]}], "}"}], ",", 
             "\"Perpendicular\""}], "]"}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           
           TemplateBox[{"GeometricAssertion"}, "InactiveHead", BaseStyle -> 
            "Inactive", Tooltip -> "Inactive[GeometricAssertion]", SyntaxForm -> 
            "Symbol"], "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"b", ",", "c"}], "}"}], "]"}], ",", 
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"b", ",", "d"}], "}"}], "]"}]}], "}"}], ",", 
             "\"Perpendicular\""}], "]"}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           
           TemplateBox[{"GeometricAssertion"}, "InactiveHead", BaseStyle -> 
            "Inactive", Tooltip -> "Inactive[GeometricAssertion]", SyntaxForm -> 
            "Symbol"], "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"c", ",", "d"}], "}"}], "]"}], ",", 
                 RowBox[{"Line", "[", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "c"}], "}"}], "]"}]}], "}"}], ",", 
             "\"Perpendicular\""}], "]"}], 12, StripOnInput -> False]}, {
        StyleBox[
         RowBox[{
           
           TemplateBox[{"GeometricAssertion"}, "InactiveHead", BaseStyle -> 
            "Inactive", Tooltip -> "Inactive[GeometricAssertion]", SyntaxForm -> 
            "Symbol"], "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Triangle", "[", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], ",", 
                 RowBox[{"Triangle", "[", 
                   RowBox[{"{", 
                    RowBox[{"b", ",", "c", ",", "d"}], "}"}], "]"}]}], "}"}], 
             ",", "\"Similar\""}], "]"}], 12, StripOnInput -> False]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxDividers -> {
       "Columns" -> {False, {True}, False}, "Rows" -> {False, {True}, False}},
       GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
      FrameStyle -> GrayLevel[0.85]], "Column"], FrameMargins -> 20], 
   StyleBox["\"Geometric Conjectures\"", 12, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "PanelLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"Top", ",", "Center"}], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"DefaultLabelStyle", "\[Rule]", "\"PanelLabel\""}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"RotateLabel", "\[Rule]", "False"}], ",", 
           RowBox[{"Spacings", "\[Rule]", "Automatic"}]}], "}"}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{{3.818046925193021*^9, 3.818047053471868*^9}, {
   3.818047144978716*^9, 3.8180471646135387`*^9}, 3.818047241770955*^9, {
   3.8180472814082193`*^9, 3.818047293290619*^9}, 3.818047401686303*^9, {
   3.818047433457746*^9, 3.818047498001672*^9}, {3.818047614132262*^9, 
   3.818047634662993*^9}, {3.818047826578021*^9, 3.818047835119927*^9}, {
   3.8180479149605494`*^9, 3.8180479212035227`*^9}, {3.818048078672262*^9, 
   3.818048097421584*^9}, 3.8180487182421103`*^9, 3.8181126539035788`*^9, 
   3.819208761595886*^9, 3.819209041435465*^9, 3.819209159531981*^9, {
   3.819210160815195*^9, 3.8192101918564987`*^9}, 3.819210281701345*^9, 
   3.8192117070098543`*^9, 3.819211771860773*^9, 3.819213032636606*^9, 
   3.8193680560467863`*^9, 3.8196436374140043`*^9, 3.848261105370576*^9, {
   3.848261137382698*^9, 3.848261191584175*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"35141a0f-95b2-4774-81fb-f300ca5ea790"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{720, 847},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/wolfram-notebooks-\
geometric-scene.nb"},
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All], ShowCellBracket -> Automatic], 
   Cell[
    StyleData["Notebook"], Background -> RGBColor[252, 251, 249]], 
   Cell[
    StyleData["Title"], FontFamily -> "Source Sans Pro", FontSize -> 45, 
    FontWeight -> "SemiBold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    RGBColor[0., 0., 0.]], 
   Cell[
    StyleData["Subtitle"]], 
   Cell[
    StyleData["Section"], ShowGroupOpener -> "Inline", FontFamily -> 
    "Source Sans Pro", FontSize -> 24, FontWeight -> "Regular", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    RGBColor[0., 0., 0.]], 
   Cell[
    StyleData["Subsection"], ShowGroupOpener -> "Inline", FontSize -> 18, 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    FontColor -> 
    RGBColor[0.3495994506752117, 0.349584191653315, 0.349584191653315]], 
   Cell[
    StyleData["Subsubsection"], ShowGroupOpener -> "Inline", FontFamily -> 
    Automatic, FontSize -> 18, FontWeight -> "Regular", FontSlant -> "Italic",
     FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {
     "FontPostScriptName" -> "SourceSansPro-LightItalic"}, FontColor -> 
    RGBColor[0., 0., 0.]], 
   Cell[
    StyleData["Text"], TextJustification -> 1., FontFamily -> 
    "Source Sans Pro", FontSize -> 15, FontWeight -> "Regular", FontSlant -> 
    "Plain", FontVariations -> {
     "StrikeThrough" -> False, "Underline" -> False}, 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, Background -> 
    None], 
   Cell[
    StyleData["Input"], FontFamily -> "Source Code Pro", FontSize -> 13, 
    FontWeight -> "Regular", FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}]}, Visible -> 
  False, FrontEndVersion -> 
  "13.0 for Mac OS X x86 (64-bit) (December 2, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"2b3a01d3-3a88-4741-aac1-9b41b5f66094"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1925, 41, 36, "Input",ExpressionUUID->"4baaa273-9998-48a0-a5b9-9955beb8bbd3"],
Cell[2508, 65, 570, 16, 65, "Output",ExpressionUUID->"e40de494-b422-4c69-80a3-149dad48d6b6"]
}, {2}]],
Cell[CellGroupData[{
Cell[3112, 86, 171, 3, 62, "Section",ExpressionUUID->"8e07a1d0-4fcc-42b0-bf51-bc258b0a2ba6"],
Cell[CellGroupData[{
Cell[3308, 93, 4235, 80, 123, "Input",ExpressionUUID->"a87847e3-d2e3-4c86-9e6d-091aa60bc89b"],
Cell[7546, 175, 191025, 3772, 474, "Output",ExpressionUUID->"10b250b9-d630-4680-a634-244a4eeacf65"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198620, 3953, 268, 4, 62, "Section",ExpressionUUID->"bc4230ee-aa5b-405a-a15b-3ce3158f8675"],
Cell[CellGroupData[{
Cell[198913, 3961, 390, 6, 30, "Input",ExpressionUUID->"8a4b0b3e-8094-493b-8839-79e8d559a145"],
Cell[199306, 3969, 382095, 8514, 524, "Output",ExpressionUUID->"a5c7f51e-fa5f-42fc-8083-544444aeb657"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581438, 12488, 2609, 63, 36, "Input",ExpressionUUID->"1864539b-f181-435c-9bc2-4f7f0482ce6e"],
Cell[584050, 12553, 11120, 253, 497, "Output",ExpressionUUID->"35141a0f-95b2-4774-81fb-f300ca5ea790"]
}, Open  ]]
}, Open  ]]
}
]
*)

